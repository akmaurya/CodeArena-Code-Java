/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LedgerGroup.java
 *
 * Created on Jun 7, 2014, 3:00:20 PM
 */

package p3;

/**
 *
 * @author welcome
 */
public class LedgerGroup extends javax.swing.JInternalFrame {
javax.swing.table.DefaultTableModel dtm;
    /** Creates new form LedgerGroup */
    public LedgerGroup(String uid,String cnm,String fyear) {
        initComponents();
        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();

        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);


        String heading[]={"S.No.","Group Name","Group Type","Credit Type","Status"};
        dtm=new javax.swing.table.DefaultTableModel(heading,0);
        jTable1.setModel(dtm);

        javax.swing.table.TableColumn column;


        column=jTable1.getColumn("S.No.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(50);
        column=jTable1.getColumn("Group Name");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(130);
        column=jTable1.getColumn("Group Type");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(130);
        column=jTable1.getColumn("Credit Type");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Status");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(100);

        loadGroupType();
        loadJTable();

        jRadioButton3.setVisible(false);

        jTextField1.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Ledger Group Creation");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(219, 219, 186));
        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true), javax.swing.BorderFactory.createTitledBorder("")));
        jPanel2.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(219, 219, 186));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Group Name");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(20, 20, 140, 30);

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        jPanel3.add(jTextField1);
        jTextField1.setBounds(190, 20, 220, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Group Type");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(20, 70, 100, 30);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        jPanel3.add(jComboBox1);
        jComboBox1.setBounds(190, 70, 220, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("Default Credit/Debit Type");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(20, 120, 160, 30);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jRadioButton1.setText("Credit");
        jRadioButton1.setOpaque(false);
        jRadioButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jRadioButton1KeyPressed(evt);
            }
        });
        jPanel3.add(jRadioButton1);
        jRadioButton1.setBounds(190, 120, 63, 30);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jRadioButton2.setText("Debit");
        jRadioButton2.setOpaque(false);
        jRadioButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jRadioButton2KeyPressed(evt);
            }
        });
        jPanel3.add(jRadioButton2);
        jRadioButton2.setBounds(270, 120, 70, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        jPanel3.add(jButton1);
        jButton1.setBounds(10, 250, 130, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14));
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(150, 250, 130, 30);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14));
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });
        jPanel3.add(jButton3);
        jButton3.setBounds(290, 250, 130, 30);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jRadioButton3.setText("None");
        jRadioButton3.setOpaque(false);
        jRadioButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jRadioButton3KeyPressed(evt);
            }
        });
        jPanel3.add(jRadioButton3);
        jRadioButton3.setBounds(350, 120, 57, 30);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(10, 10, 430, 290);

        jPanel4.setBackground(new java.awt.Color(219, 219, 186));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel4);
        jPanel4.setBounds(450, 10, 460, 290);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 11, 920, 310);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        saveValidation();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        saveValidation();
    }//GEN-LAST:event_jButton1KeyPressed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jComboBox1.requestFocus();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jRadioButton1.requestFocus();
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void jRadioButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jRadioButton2.requestFocus();
        }
    }//GEN-LAST:event_jRadioButton1KeyPressed

    private void jRadioButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioButton2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jButton1.requestFocus();
        }
    }//GEN-LAST:event_jRadioButton2KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRowCount()<1)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Record is not selected.");
        }

        else if(dtm.getRowCount() > 0)
        {
            int c=javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Delete record", javax.swing.JOptionPane.YES_NO_OPTION);
            if(c==javax.swing.JOptionPane.YES_OPTION)
            {
                deleteRecord();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if(jTable1.getSelectedRowCount()<1)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Record is not selected.");
        }

        else if(dtm.getRowCount() > 0)
        {
            int c=javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Delete record", javax.swing.JOptionPane.YES_NO_OPTION);
            if(c==javax.swing.JOptionPane.YES_OPTION)
            {
                deleteRecord();
            }
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int i=jTable1.getSelectedRow();

        jTextField1.setText(jTable1.getValueAt(i, 1).toString());
        jComboBox1.setSelectedItem(jTable1.getValueAt(i, 2).toString());

        String str=jTable1.getValueAt(i, 3).toString();
        if(str.equals("Cr"))
        {
            jRadioButton1.setSelected(true);
        }

        else if(str.equals("Dr"))
        {
            jRadioButton2.setSelected(true);
        }

        else if(str.equals("NA"))
        {
            jRadioButton3.setSelected(true);
        }

        if(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString().equals("False")==true)
        {
            jButton2.setEnabled(false);
        }

        else
        {
            jButton2.setEnabled(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jRadioButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioButton3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

private void loadGroupType()
{
    try
    {
        interfaceRailway object1=null;
        System.out.println("in loadInitial");
	try
	{
            object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
	}
	catch(Exception e)
	{
            System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
            getIPaddress.changeIP();
            try
            {
		object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception ex)
            {
		System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
            }
	}

        jComboBox1.removeAllItems();
	jComboBox1.addItem("Select");
	String qry="select group_type from group_type order by group_type";
	String arr[]=object1.getResultSetAs_1D_Array(qry, Main.year);
	if(arr.length>0)
	{
	    for(int i=0;i<arr.length;i++)
	    {
	        jComboBox1.addItem(arr[i]);
	    }
	}
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadInitialInfo Method "+e);
    }

}

public void loadJTable()
{
    try
    {
        interfaceRailway object1=null;
        System.out.println("in loadInitial");
        try
        {
            object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
        }
        catch(Exception e)
        {
            System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
            getIPaddress.changeIP();
            try
            {
                object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception ex)
            {
                System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
            }
        }

        String qry="select * from ledger_group";
        String arr[][]=object1.getInformationDD(qry, 5, Main.year);

        String arr1[]=new String[5];
        for(int i=0;i<arr.length;i++)
        {
            arr1[0]=""+(i+1);
            arr1[1]=arr[i][1];
            arr1[2]=arr[i][2];
            arr1[3]=arr[i][3];
            arr1[4]=arr[i][4];
            dtm.addRow(arr1);
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadInitialInfo Method "+e);
    }
}

public void saveValidation()
{
    if(jTextField1.getText().trim().equals(""))
    {
        javax.swing.JOptionPane.showMessageDialog(this, "Please enter Group Name.");
        jTextField1.requestFocus();
    }

    else if(jComboBox1.getSelectedIndex()==0)
    {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select Group Type.");
        jComboBox1.requestFocus();
    }

    else if(redundantGroupName()==true)
    {
        javax.swing.JOptionPane.showMessageDialog(this, "Group Name already exist.");
        jTextField1.requestFocus();
    }

    else
    {
        save();
    }
}

public void save()
{
    try
    {
        interfaceRailway object1=null;
        System.out.println("in loadInitial");
        try
        {
            object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
        }
        catch(Exception e)
        {
            System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
            getIPaddress.changeIP();
            try
            {
                object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception ex)
            {
                System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
            }
        }

        String qry="select max(id) from ledger_group";
        String str=object1.getSigetngleValue(qry, Main.year);

        if(str==null || str.isEmpty())
        {
            System.out.println(str);
            str="0";
        }

        boolean bn=false;

        int sno=Integer.parseInt(str);

        String group_name=jTextField1.getText();
        String group_type=jComboBox1.getSelectedItem().toString();

        String crdr;
        if(jRadioButton1.isSelected()==true)
            crdr="Cr";
        else if(jRadioButton2.isSelected() == true)
            crdr="Dr";
        else
            crdr="NA";

        String status="True";

        qry="insert into ledger_group values ("+(sno+1)+",'"+group_name+"','"+group_type+"','"+crdr+"','"+status+"')";
        System.out.println("qry="+qry);
        bn=object1.saveInformation(qry, Main.year);

        if(bn==true)
        {
            dtm.setRowCount(0);
            loadJTable();
            javax.swing.JOptionPane.showMessageDialog(this, "Saving process completed.");
            clearWindow();
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In getrecord Method "+e);
    }
}

public void clearWindow()
{
    jTextField1.setText("");
    jComboBox1.setSelectedIndex(0);
    jRadioButton1.setSelected(false);
    jRadioButton2.setSelected(false);
    jTextField1.requestFocus();
}

public void deleteRecord()
{
    try
    {
        interfaceRailway object1=null;
        System.out.println("in loadInitial");
        try
        {
            object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
        }
        catch(Exception e)
        {
            System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
            getIPaddress.changeIP();
            try
            {
                object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception ex)
            {
                System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
            }
        }

        String qry="delete from ledger_group where group_name='"+jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString()+"'";
        boolean bn=object1.saveInformation(qry, Main.year);

        if(bn==true)
        {
            dtm.setRowCount(0);
            loadJTable();
            clearWindow();
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadInitialInfo Method "+e);
    }
}

public boolean redundantGroupName()
{
    boolean check=false;
    try
    {
        interfaceRailway object1=null;
        System.out.println("in loadInitial");
        try
        {
            object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
        }
        catch(Exception e)
        {
            System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
            getIPaddress.changeIP();
            try
            {
                object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception ex)
            {
                System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
            }
        }

        String qry="select group_name from ledger_group";
        String arr[]=object1.getResultSetAs_1D_Array(qry, Main.year);

        if(arr.length>0)
        {
            for(int i=0;i<arr.length;i++)
            {
                if(arr[i].equals(jTextField1.getText().trim())==true)
                    check=true;
            }
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadInitialInfo Method "+e);
    }

    return check;
}
}