/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CreateCompoundUnit.java
 *
 * Created on May 31, 2014, 6:57:24 PM
 */

package p3;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author welcome
 */
public class CreateCompoundUnit extends javax.swing.JInternalFrame {
javax.swing.table.DefaultTableModel dtm;
    /** Creates new form CreateCompoundUnit */
    public CreateCompoundUnit(String uid,String cnm,String fyear) {
        initComponents();

        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();

        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        String heading[]={"S.No.","Item Value","Unit 1","Set Value","Unit 2","Decimal Place","Pseudo S.No."};
        dtm=new javax.swing.table.DefaultTableModel(heading,0);
        jTable1.setModel(dtm);

        javax.swing.table.TableColumn column;

        column=jTable1.getColumn("S.No.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(80);
        column=jTable1.getColumn("Item Value");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Unit 1");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Set Value");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Unit 2");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Decimal Place");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Pseudo S.No.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);

        jTextField1.requestFocus();

        loadInitialInfo();
        loadJTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Create Compound Units");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(221, 231, 207));
        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true), javax.swing.BorderFactory.createTitledBorder("")));
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Item Value");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(20, 20, 100, 25);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Unit");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(130, 20, 120, 25);

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        jPanel2.add(jTextField1);
        jTextField1.setBounds(20, 60, 100, 30);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jComboBox1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jComboBox1MouseReleased(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        jPanel2.add(jComboBox1);
        jComboBox1.setBounds(130, 60, 120, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel3.setText("=");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(270, 60, 30, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setText("Set Value");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(300, 20, 80, 25);

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });
        jPanel2.add(jTextField2);
        jTextField2.setBounds(300, 60, 110, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setText("Unit");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(420, 20, 60, 25);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox2KeyPressed(evt);
            }
        });
        jPanel2.add(jComboBox2);
        jComboBox2.setBounds(420, 60, 130, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jButton1.setText("Create");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(20, 140, 200, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14));
        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(470, 140, 200, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel6.setText("Decimal Place");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(590, 20, 90, 20);

        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });
        jPanel2.add(jTextField3);
        jTextField3.setBounds(590, 60, 80, 30);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14));
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(250, 140, 200, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(11, 17, 690, 190);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(10, 220, 690, 380);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().trim().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Please enter Item Value.");
            jTextField1.requestFocus();
        }

        else if(jComboBox1.getSelectedIndex()==0)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select Unit for Item Value.");
            jComboBox1.requestFocus();
        }

        else if(jTextField2.getText().trim().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Please enter Set Value.");
            jTextField2.requestFocus();
        }

        else if(jComboBox2.getSelectedIndex()==0)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select Unit for Set Value.");
            jComboBox2.requestFocus();
        }

        else if(jTextField3.getText().trim().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Please enter Decimal Place.");
            jTextField3.requestFocus();
        }

        else
        {
            if(jTable1.getSelectedRowCount()>0)
            {
                javax.swing.JOptionPane.showMessageDialog(this, "This Unit is already exist.");
            }
            else
            {
                save();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
            this.dispose();
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRowCount()<1)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Record is not selected.");
        }

        else if(dtm.getRowCount() > 0)
        {
            int c=JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Delete record", JOptionPane.YES_NO_OPTION);
            if(c==JOptionPane.YES_OPTION)
            {
                deleteRecord();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int i=jTable1.getSelectedRow();

        jTextField1.setText(jTable1.getValueAt(i, 1).toString());
        jComboBox1.setSelectedItem(jTable1.getValueAt(i, 2).toString());
        jTextField2.setText(jTable1.getValueAt(i, 3).toString());
        jComboBox2.setSelectedItem(jTable1.getValueAt(i, 4).toString());
        jTextField3.setText(jTable1.getValueAt(i, 5).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jComboBox1.requestFocus();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedIndex()>0)
        {
            String unit1=jComboBox1.getSelectedItem().toString();
            loadUnit(unit1);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jButton1.requestFocus();
        }
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField2.requestFocus();
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jComboBox2.requestFocus();
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jComboBox2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField3.requestFocus();
        }
    }//GEN-LAST:event_jComboBox2KeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:

        if(evt.getKeyCode()==10)
        {
            if(jTextField1.getText().trim().equals(""))
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Please enter Item Value.");
                jTextField1.requestFocus();
            }

            else if(jComboBox1.getSelectedIndex()==0)
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Please select Unit for Item Value.");
                jComboBox1.requestFocus();
            }

            else if(jTextField2.getText().trim().equals(""))
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Please enter Set Value.");
                jTextField2.requestFocus();
            }

            else if(jComboBox2.getSelectedIndex()==0)
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Please select Unit for Set Value.");
                jComboBox2.requestFocus();
            }

            else if(jTextField3.getText().trim().equals(""))
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Please enter Decimal Place.");
                jTextField3.requestFocus();
            }

            else
            {
                if(jTable1.getSelectedRowCount()>0)
                {
                    javax.swing.JOptionPane.showMessageDialog(this, "This Unit is already exist.");
                }
                else
                {
                    save();
                }
            }
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        if(jTable1.getSelectedRowCount()==0)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Record is not selected.");
        }

        else if(dtm.getRowCount() > 0)
        {
            int c=JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Delete record", JOptionPane.YES_NO_OPTION);
            if(c==JOptionPane.YES_OPTION)
            {
                deleteRecord();
            }
        }
    }//GEN-LAST:event_jButton3KeyPressed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jComboBox1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1MousePressed

    private void jComboBox1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1MouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    private void loadInitialInfo()
    {
        try
        {
            interfaceRailway object1=null;
            System.out.println("in loadInitial");
            try
            {
                object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception e)
            {
                System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
                getIPaddress.changeIP();
                try
                {
                    object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
                }
                catch(Exception ex)
                {
                    System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
                }
            }
            jComboBox1.removeAllItems();
            jComboBox2.removeAllItems();
            jComboBox1.addItem("Select");
            jComboBox2.addItem("Select");
            String qry="select unit_nm from unit_list order by unit_nm";
            String arr[]=object1.getResultSetAs_1D_Array(qry, Main.year);
            if(arr.length>0)
            {
                for(int i=0;i<arr.length;i++)
                {
                    jComboBox1.addItem(arr[i]);
                    jComboBox2.addItem(arr[i]);
                }
            }
        }
        catch(Exception e)
        {
            System.out.println("Error ! In loadInitialInfo Method "+e);
        }
    }

    /*public boolean addItem()
    {
        String arr[]=new String[6];
        arr[0]=""+(dtm.getRowCount()+1);
        arr[1]=jTextField1.getText();
        arr[2]=jComboBox1.getSelectedItem().toString();
        arr[3]=jTextField2.getText();
        arr[4]=jComboBox1.getSelectedItem().toString();
        arr[5]=jTextField3.getText();
        dtm.addRow(arr);
        return true;
    }*/

    public void save()
    {
        try
        {
            interfaceRailway object1=null;
            System.out.println("in loadInitial");
            try
            {
                object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception e)
            {
                System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
                getIPaddress.changeIP();
                try
                {
                    object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
                }
                catch(Exception ex)
                {
                    System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
                }
            }

            String qry="select max(sno) from compound_unit_list";
            String str=object1.getSigetngleValue(qry, Main.year);

            if(str==null || str.isEmpty())
            {
                System.out.println(str);
                str="0";
            }

            boolean bn=false;

            int sno=Integer.parseInt(str);

            String unit1=jComboBox1.getSelectedItem().toString();
            String qry1="select style_no from unit_list where unit_nm='"+unit1+"'";
            String str1=object1.getSigetngleValue(qry1, Main.year);
            int style=Integer.parseInt(str1);
            
            String iname=jTextField1.getText();
            unit1=jComboBox1.getSelectedItem().toString();
            String sname=jTextField2.getText();
            String unit2=jComboBox2.getSelectedItem().toString();
            String dvalue=jTextField3.getText();

            double vl1=Double.valueOf(iname);
            double vl2=Double.valueOf(sname);
            int dplace=Integer.parseInt(dvalue);

            qry="insert into compound_unit_list values("+(sno+1)+","+style+","+vl1+",'"+unit1+"',"+vl2+",'"+unit2+"',"+dplace+")";
            System.out.println("qry="+qry);
            bn=object1.saveInformation(qry, Main.year);

            if(bn==true)
            {
                dtm.setRowCount(0);
                loadJTable();
                
                jTextField1.setText("");
                jComboBox1.setSelectedIndex(0);
                jTextField2.setText("");
                jComboBox2.setSelectedIndex(0);
                jTextField3.setText("");
                jTextField1.requestFocus();

                javax.swing.JOptionPane.showMessageDialog(this, "Saving process completed.");
            }
        }
        catch(Exception e)
        {
            System.out.println("Error ! In getrecord Method "+e);
        }
    }

    public void loadJTable()
    {
        try
        {
            interfaceRailway object1=null;
            System.out.println("in loadInitial");
            try
            {
                object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception e)
            {
                System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
                getIPaddress.changeIP();
                try
                {
                    object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
                }
                catch(Exception ex)
                {
                    System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
                }
            }

            String qry="select * from compound_unit_list";
            String arr[][]=object1.getInformationDD(qry, 7, Main.year);

            for(int i=0;i<arr.length;i++)
            {
                String arr1[]=new String[7];
                arr1[0]=""+(i+1);
                arr1[1]=arr[i][2];
                arr1[2]=arr[i][3];
                arr1[3]=arr[i][4];
                arr1[4]=arr[i][5];
                arr1[5]=arr[i][6];
                arr1[6]=arr[i][0];
                dtm.addRow(arr1);
            }
        }
        catch(Exception e)
        {
            System.out.println("Error ! In loadInitialInfo Method "+e);
        }
    }

    public void deleteRecord()
    {
        try
        {
            interfaceRailway object1=null;
            System.out.println("in loadInitial");
            try
            {
                object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception e)
            {
                System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
                getIPaddress.changeIP();
                try
                {
                    object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
                }
                catch(Exception ex)
                {
                    System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
                }
            }

            int i=jTable1.getSelectedRow();
            String pseudo_no=(""+jTable1.getValueAt(i, 6));

            int pseudo=Integer.parseInt(pseudo_no);

            String qry="delete from compound_unit_list where sno="+pseudo+"";
            boolean bn=object1.saveInformation(qry, Main.year);
            
            if(bn==true)
            {
                dtm.setRowCount(0);
                loadJTable();
                jTextField1.setText("");
                jComboBox1.setSelectedIndex(0);
                jTextField2.setText("");
                jComboBox2.setSelectedIndex(0);
                jTextField3.setText("");
                jTextField1.requestFocus();
            }
        }
        catch(Exception e)
        {
            System.out.println("Error ! In loadInitialInfo Method "+e);
        }
    }

    public void loadUnit(String unit1)
    {
        try
        {
            interfaceRailway object1=null;
            System.out.println("in loadInitial");
            try
            {
                object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception e)
            {
                System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
                getIPaddress.changeIP();
                try
                {
                    object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
                }
                catch(Exception ex)
                {
                    System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
                }
            }
            
            String qry1="select style_no from unit_list where unit_nm='"+unit1+"'";
            String str1=object1.getSigetngleValue(qry1, Main.year);

            int style=Integer.parseInt(str1);

            String qry="select unit_nm from unit_list where style_no="+style+"";
            String arr[]=object1.getResultSetAs_1D_Array(qry, Main.year);

            jComboBox2.removeAllItems();
            jComboBox2.addItem("Select");

            if(arr.length>0)
            {
                for(int i=0;i<arr.length;i++)
                {
                    jComboBox2.addItem(arr[i]);
                }

                jComboBox2.removeItem(""+unit1);
            }
        }
        catch(Exception e)
        {
            System.out.println("Error ! In getrecord Method "+e);
        }
    }
}