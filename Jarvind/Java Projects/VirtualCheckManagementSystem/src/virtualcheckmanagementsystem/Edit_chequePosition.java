/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Edit_chequePosition.java
 *
 * Created on Mar 20, 2013, 2:16:24 PM
 */

package virtualcheckmanagementsystem;

/**
 *
 * @author user2
 */
public class Edit_chequePosition extends javax.swing.JInternalFrame {

    /** Creates new form Edit_chequePosition */
    public Edit_chequePosition() {
        initComponents();
        loadInitialInfo();
        setimagefromdb();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setClosable(true);
        setIconifiable(true);
        setTitle("Edit Master Cheque Position Window");
        getContentPane().setLayout(null);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Preview");
        jLabel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLabel14.setRequestFocusEnabled(false);
        jLabel14.setVerifyInputWhenFocusTarget(false);
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel14MousePressed(evt);
            }
        });
        getContentPane().add(jLabel14);
        jLabel14.setBounds(10, 40, 580, 280);

        jComboBox1.setFont(new java.awt.Font("Verdana", 0, 12));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jComboBox1MousePressed(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(150, 10, 350, 25);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12));
        jLabel1.setText("Select Bank Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 130, 20);

        jButton1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualcheckmanagementsystem/dustbeen.gif"))); // NOI18N
        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(10, 340, 270, 28);

        jButton2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/virtualcheckmanagementsystem/Close1.gif"))); // NOI18N
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(300, 340, 290, 28);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel14MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MousePressed
        // TODO add your handling code here:
        if(evt.getModifiers()==4) {
            //jPopupMenu1.show(jLabel14, evt.getX(), evt.getY());
        }
}//GEN-LAST:event_jLabel14MousePressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        //setimagefromdb();
}//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Delete();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            setimagefromdb();
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void jComboBox1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MousePressed
        // TODO add your handling code here:
        setimagefromdb();
    }//GEN-LAST:event_jComboBox1MousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private static javax.swing.JLabel jLabel14;
    // End of variables declaration//GEN-END:variables

    private void loadInitialInfo()
    {
    String qry="";
    try
    {
        java.util.Date dt=new java.util.Date();
        int date=dt.getDate();
        int month=dt.getMonth()+1;
        int year=dt.getYear()+1900;
        int hour=dt.getHours();
        int min=dt.getMinutes();
        int sec=dt.getSeconds();
        String tfor="AM";
        if(hour>12)
        {
            hour=hour-12;
            tfor="PM";
        }

        qry="Select Bank_name From Bank_Creation ";
        String load[][]=Utility.getInformationDD(qry,1);
        System.out.println(load.length);
        if(load.length>0)
        {
           jComboBox1.removeAllItems();
           for(int i=0;i<load.length;i++)
            {
                jComboBox1.addItem(load[i][0]);
            }
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In  loadInitialInfo Method."+e);
    }
}
    private void setimagefromdb()
{
        try
        {
            System.out.println("Starting setimagefromdb.................");
            java.sql.Connection conn=Utility.makeConnection();
            java.sql.Statement st=conn.createStatement(java.sql.ResultSet.TYPE_SCROLL_INSENSITIVE,java.sql.ResultSet.CONCUR_UPDATABLE);
            //int selrow=jTable1.getSelectedRow();
            //String slipno=""+jTable1.getValueAt(selrow, 2);
            String cb1=jComboBox1.getSelectedItem().toString();
            java.sql.ResultSet rs=st.executeQuery("select check_pic from Bank_Creation where Bank_name='"+cb1+"'");
            if(rs.next())
            {
                System.out.println("rs.next == true "+rs.toString() );
                java.io.InputStream inputImage = rs.getBinaryStream(1);
                byte[] buffer = new byte[8192];
                int bytesRead;
                java.io.ByteArrayOutputStream output = new java.io.ByteArrayOutputStream();
                while ((bytesRead = inputImage.read(buffer)) != -1)
                {
                    output.write(buffer, 0, bytesRead);
                }
                System.out.println("after the loop (bytesRead = inputImage.read(buffer)) != -1");
                byte btimg[]=output.toByteArray();
                java.awt.image.BufferedImage bufferedImage = javax.imageio.ImageIO.read(new java.io.ByteArrayInputStream(btimg));
                javax.imageio.ImageIO.write(bufferedImage, "jpg", new java.io.File("image.jpg"));
                java.io.File canonicalpath=new java.io.File(".");
                System.out.println("path="+canonicalpath.getCanonicalPath());
                setimage(canonicalpath.getCanonicalPath()+"\\image.jpg");
            }
        }
        catch(Exception ex)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Oh exception found at time of image fetching..."+ex);
            System.out.println("error..."+ex);
        }

}
private void setimage(String filename)
{
        //javax.swing.JFileChooser jfc=new javax.swing.JFileChooser();
        //jfc.showOpenDialog(this);
        //java.io.File fl=jfc.getSelectedFile();
        try
        {
            // scale image on disk
            java.io.File fl=new java.io.File(filename);
            //filename=fl.getAbsolutePath();  //file name with path to save in database
            //next coding to show image on screen
            //-----------------------------------
            java.awt.image.BufferedImage originalImage = javax.imageio.ImageIO.read(fl);
            int imagewidth=originalImage.getWidth();
            int imageheight=originalImage.getHeight();
            System.out.println("selected file name="+fl.getAbsolutePath()+"\n"+"width="+imagewidth+"\n"+"height="+imageheight);
            System.out.println("fl.getName()="+fl.getName());
            java.awt.Dimension imgSize = new java.awt.Dimension(imagewidth,imageheight);
            java.awt.Dimension boundary = new java.awt.Dimension(648,259);
            java.awt.Dimension newImgSize=getScaledDimension(imgSize,boundary);
            //System.out.println("ok1");
            int type = originalImage.getType() == 0? java.awt.image.BufferedImage.TYPE_INT_ARGB : originalImage.getType();
            //System.out.println("type:"+type+",w="+newImgSize.width+",h="+newImgSize.height);
            java.awt.image.BufferedImage resizeImageJpg = resizeImage(originalImage, type, newImgSize.width, newImgSize.height);
            String dummyfilename=fl.getName();
            dummyfilename=dummyfilename.substring(0,dummyfilename.indexOf("."));
            //System.out.println("dummyfilename="+dummyfilename);
            java.io.File newFL=new java.io.File(fl.getParent()+"\\"+dummyfilename+"200"+".jpg");

            //javax.swing.JOptionPane.showMessageDialog(this, "clear1...");
            //System.out.println("file:"+newFL.getName()+", "+newFL.exists());
            javax.imageio.ImageIO.write(resizeImageJpg, "jpg", newFL);
            jLabel14.setIcon(null);
            //javax.swing.JOptionPane.showMessageDialog(this, "clear2..."+newFL.getAbsolutePath());
            javax.swing.ImageIcon imgThisImg = new javax.swing.ImageIcon(newFL.getAbsolutePath());
            jLabel14.setText("");
            jLabel14.setIcon(imgThisImg);
            //jButton3.requestFocus();
            if(newFL.exists()==true)
            {
                boolean ret=newFL.delete();
                ret=(new java.io.File(filename)).delete();
                //System.out.println("is deleted?"+ret);
            }

        }
        catch(Exception e)
        {
           System.out.println("er no 192="+e);
       }
}

private static java.awt.image.BufferedImage resizeImage(java.awt.image.BufferedImage originalImage, int type,
                                         Integer img_width, Integer img_height)
{
    java.awt.image.BufferedImage resizedImage = new java.awt.image.BufferedImage(img_width, img_height, type);
    java.awt.Graphics2D g = resizedImage.createGraphics();
    g.drawImage(originalImage, 0, 0, img_width, img_height, null);
    System.out.println("Image width = "+img_width+"    image height= "+img_height);
    jLabel14.setBounds(0, 45, img_width, img_height);
    g.dispose();

    return resizedImage;
}

public static java.awt.Dimension getScaledDimension(java.awt.Dimension imgSize, java.awt.Dimension boundary) {

    int original_width = imgSize.width;
    int original_height = imgSize.height;
    int bound_width = boundary.width;
    int bound_height = boundary.height;
    int new_width = 0;
    int new_height = 0;

    // first check if we need to scale width
    if (original_width > bound_width) {
        //scale width to fit
        new_width = bound_width;
        //scale height to maintain aspect ratio
        new_height = (new_width*original_height)/original_width;
    //}

    // then check if we need to scale even with the new height
    if (new_height > bound_height) {
        //scale height to fit instead
        new_height = bound_height;
        //scale width to maintain aspect ratio
        new_width = (new_height*original_width)/original_height;
    }
    }
 else
    {
    if (original_height > bound_height) {
        //scale height to fit instead
        new_height = bound_height;
        //scale width to maintain aspect ratio
        new_width = (new_height*original_width)/original_height;

        if (original_width > bound_width) {
        //scale width to fit
        new_width = bound_width;
        //scale height to maintain aspect ratio
        new_height = (new_width*original_height)/original_width;
        }
    }
    }
    if(new_width==0 && new_height==0)
    {
        new_height=original_height;
        new_width=original_width;
    }
    return new java.awt.Dimension(new_width, new_height);
}
private void Delete()
{
    //String are=
    try
    {
        //System.out.println("hello");
        String qry="DELETE FROM XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
        Utility.saveInformation(qry);
        javax.swing.JOptionPane.showMessageDialog(this, "Congratulations! bank name has been deleted");
        loadInitialInfo();
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadInitialInfo Method."+e);
    }
}

}
