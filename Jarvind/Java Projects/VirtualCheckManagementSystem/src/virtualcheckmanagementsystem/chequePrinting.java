/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * chequePrinting.java
 *
 * Created on Mar 18, 2013, 5:46:27 PM
 */

package virtualcheckmanagementsystem;

/**
 *
 * @author user2
 */
public class chequePrinting extends javax.swing.JInternalFrame {
javax.swing.table.DefaultTableModel dtm;
String setDate;
    String time;
    /** Creates new form chequePrinting */
    public chequePrinting() {
        initComponents();
            dtm=new javax.swing.table.DefaultTableModel();
            javax.swing.table.DefaultTableCellRenderer CRLeft = new javax.swing.table.DefaultTableCellRenderer();
            javax.swing.table.DefaultTableCellRenderer CRRight = new javax.swing.table.DefaultTableCellRenderer();
            javax.swing.table.DefaultTableCellRenderer CRCenter = new javax.swing.table.DefaultTableCellRenderer();
            CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
            CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
            CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
            javax.swing.table.TableColumn column;
            String heading1[]={"Acount Name"};
            dtm=new javax.swing.table.DefaultTableModel(heading1,0);
            jTable1.setModel(dtm);
            column=jTable1.getColumn("Acount Name");
            column.setCellRenderer(CRCenter);
            column.setPreferredWidth(180);
            //jScrollPane1.setVisible(false);
            loadInitialInfo();
            getValue();
            jComboBox1.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cheque Printing Window");
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Verdana 12", 0, 12));
        jLabel2.setText("Cheque Date");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 20, 80, 25);

        jLabel5.setBackground(new java.awt.Color(195, 191, 191));
        jLabel5.setFont(new java.awt.Font("Verdana 14", 1, 12));
        jLabel5.setFocusable(false);
        jLabel5.setRequestFocusEnabled(false);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(100, 20, 90, 25);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/calendar.png"))); // NOI18N
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.setRequestFocusEnabled(false);
        jButton1.setRolloverEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(170, 20, 28, 25);

        jLabel1.setFont(new java.awt.Font("Verdana 12", 0, 12));
        jLabel1.setText("Bank Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 60, 90, 25);

        jComboBox1.setFont(new java.awt.Font("Verdana 12", 0, 12));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(100, 60, 240, 25);

        jLabel3.setFont(new java.awt.Font("Verdana 12", 0, 12));
        jLabel3.setText("Account Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 100, 90, 25);

        jTextField2.setFont(new java.awt.Font("Verdana 12", 0, 12));
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField2FocusLost(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });
        getContentPane().add(jTextField2);
        jTextField2.setBounds(100, 100, 240, 25);

        jLabel4.setFont(new java.awt.Font("Verdana 12", 0, 12));
        jLabel4.setText("Amount ( In Rs )");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 140, 90, 25);

        jTextField3.setFont(new java.awt.Font("Verdana 12", 0, 12));
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField3);
        jTextField3.setBounds(100, 140, 110, 25);

        jButton2.setFont(new java.awt.Font("Verdana 12", 1, 12));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/PRINT.GIF"))); // NOI18N
        jButton2.setText("Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(5, 220, 170, 30);

        jButton3.setFont(new java.awt.Font("Verdana 12", 1, 12));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons/Close1.gif"))); // NOI18N
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(180, 220, 160, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setFocusable(false);
        jTable1.setRequestFocusEnabled(false);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(345, 10, 185, 240);

        jCheckBox1.setFont(new java.awt.Font("Verdana", 0, 12));
        jCheckBox1.setText("A/c Payee only");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(220, 135, 120, 30);

        jCheckBox2.setFont(new java.awt.Font("Verdana", 0, 12));
        jCheckBox2.setText("Hide Date Option");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox2);
        jCheckBox2.setBounds(200, 20, 140, 25);

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel6.setText("Enter Cheque NO");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 180, 120, 20);

        jTextField1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextField1.setText("11111");
        getContentPane().add(jTextField1);
        jTextField1.setBounds(130, 180, 210, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Cal d=new Cal();
        jLabel5.setText(d.getdate());
        //set=c.getdate();
        String dt[]=d.getdate().split("-");
        //set=dt[1]+"/"+dt[0]+"/"+dt[2];
}//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jTextField2.requestFocus();
        }
}//GEN-LAST:event_jComboBox1KeyPressed

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
        // TODO add your handling code here:
        jScrollPane1.setVisible(true);
        jTextField2.selectAll();
        //jTable1.setVisible(true);
    }//GEN-LAST:event_jTextField2FocusGained

    private void jTextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusLost
        // TODO add your handling code here:
        //jScrollPane1.setVisible(false);
        jTextField2.selectAll();
        //jTable1.setVisible(false);
}//GEN-LAST:event_jTextField2FocusLost

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            if(jTable1.getRowCount()>0) {
                jTextField2.setText(""+jTable1.getValueAt(jTable1.getSelectedRow(), 0));
                jTextField3.requestFocus();
            } else if(jTable1.getRowCount()==0)
                jTextField3.requestFocus();
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:

        if(evt.getKeyCode()==38) {
            jTable1.getSelectionModel().setSelectionInterval(jTable1.getSelectedRow()-1, jTable1.getSelectedRow()-1);
            //if(jTable1.getSelectedRow()<0)
            // jTable1.getSelectionModel().setSelectionInterval(jTable1.getRowCount()-1, jTable1.getRowCount()-1);

        } else if(evt.getKeyCode() == 40) {
            jTable1.getSelectionModel().setSelectionInterval(jTable1.getSelectedRow()+1, jTable1.getSelectedRow()+1);
            //if(jTable1.getRowCount()==jTable1.getRowCount())
            // jTable1.getSelectionModel().setSelectionInterval(0, 0);

        }else
            getValue();
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusGained
        // TODO add your handling code here:
        jTextField3.selectAll();
}//GEN-LAST:event_jTextField3FocusGained

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jButton2.requestFocus();
        }
}//GEN-LAST:event_jTextField3KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(!(jTextField2.getText().isEmpty()&&jTextField2.getText().isEmpty()))
        {
        int x=javax.swing.JOptionPane.showConfirmDialog(this, "Are you soure for printing ?", "Verification Window", javax.swing.JOptionPane.YES_NO_OPTION);
        System.out.println("javax.swing.JOptionPane.showConfirmDialog x= "+x);
        if(!(x==1)) {
            save();
            
        }
        }
        
        /*if(jComboBox1.getSelectedItem()=="State Bank Of India")
        {
            //printchallan2 print=new printchallan2();
        }

        else if(jComboBox1.getSelectedItem()=="Federal Bank")
        {
            //printchallan prin=new printchallan();
        }*/

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            if(!(jTextField2.getText().isEmpty()&&jTextField2.getText().isEmpty()))
            {
                int x=javax.swing.JOptionPane.showConfirmDialog(this, "Are you soure for printing ?", "Verification Window", javax.swing.JOptionPane.YES_NO_OPTION);
                System.out.println("javax.swing.JOptionPane.showConfirmDialog x= "+x);
                if(!(x==1))
                {
                    save();
                    
                }
            }
        }
        
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jTextField2.setText(""+jTable1.getValueAt(jTable1.getSelectedRow(), 0));
        }
}//GEN-LAST:event_jTable1KeyPressed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
int c=1,n1=0;
String rupee="";
    private void loadInitialInfo()
    {
    String qry="";
    try
    {
        java.util.Date dt=new java.util.Date();
        int date=dt.getDate();
        int month=dt.getMonth()+1;
        int year=dt.getYear()+1900;
        int hour=dt.getHours();
        int min=dt.getMinutes();
        int sec=dt.getSeconds();
        String tfor="AM";
        if(hour>12)
        {
            hour=hour-12;
            tfor="PM";
        }
        time=hour+":"+min+" "+tfor;
        //set=date+"/"+month+"/"+year;
        setDate=date+"-"+month+"-"+year;
        jLabel5.setText(setDate);
        qry="Select Bank_name From Bank_Creation ";
        String load[][]=Utility.getInformationDD(qry,1);
        System.out.println(load.length);
        if(load.length>0)
        {
           jComboBox1.removeAllItems();
           for(int i=0;i<load.length;i++)
            {
                jComboBox1.addItem(load[i][0]);
            }
        }
        qry="select max(Cheque_No) from cheque_detail";
        String chkno=Utility.getSingleValue(qry);
        if(chkno==null)
        {
            
        }
 else
        jTextField1.setText(""+(Integer.parseInt(chkno)+1));
     }
    catch(Exception e)
    {
        System.out.println("Error ! In  loadInitialInfo Method."+e);
    }
}
    private boolean save()
    {
        String qry="";
        try
        {
            if(!Utility.isBlank(jTextField2.getText().trim())==false)
            {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please input Account Name..");
            jTextField2.requestFocus();
            return false;
            }
            if(!Utility.isBlank(jTextField1.getText().trim())==false)
            {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please input Cheque No....");
            jTextField1.requestFocus();
            return false;
            }
            if(!Utility.isBlank(jTextField3.getText().trim())==false)
            {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please input amount..");
            jTextField3.requestFocus();
            return false;
            }
            String d[]=jLabel5.getText().split("-");
            String dat=d[1]+"-"+d[0]+"-"+d[2];
            qry="insert into cheque_detail values ('"+(""+jComboBox1.getSelectedItem())+"',#"+dat+"#,'"+jTextField2.getText().trim()+"','"+jTextField3.getText().trim()+"',"+Integer.parseInt(jTextField1.getText().trim())+")";
            System.out.println(qry);
            boolean bn=Utility.saveInformation(qry);
            System.out.println("55555555555555555555");
            printchallan2 print=new printchallan2();
            loadInitialInfo();
                return true;
            }
        catch(Exception ae)
        {
             System.out.println("Error in save method........."+ae);
        }

        return true;
    }
    private void getValue()
    {
        try
        {
            dtm.setRowCount(0);
            String qry="Select distinct(Acount_name) from cheque_detail where Acount_name like '"+jTextField2.getText()+"%'";
            System.out.println(qry);
            String load[][]=Utility.getInformationDD(qry,1);
            System.out.println(load.length);
            String arr[]=null;
            if(load.length>0)
            {
                arr=new String[1];
                for(int i=0;i<load.length;i++)
                {
                    //arr[0]=""+(i+1);
                    arr[0]=load[i][0];
                    //arr[2]=load[i][1];
                    //arr[3]=load[i][2];
                    //arr[4]=load[i][3];
                    dtm.addRow(arr);
                    jTable1.getSelectionModel().setSelectionInterval(jTable1.getRowCount()-2, jTable1.getRowCount()-2);
                    jTable1.scrollRectToVisible(new java.awt.Rectangle(jTable1.getCellRect(jTable1.getRowCount()-1, 0, true)));


                }
            }
        }
        catch(Exception ae)
        {
            System.out.println("Error in getValue method........."+ae);
        }
    }
    class constNumtoLetter
  {
      String[] unitdo ={"", " One", " Two", " Three", " Four", " Five",
         " Six", " Seven", " Eight", " Nine", " Ten", " Eleven", " Twelve",
         " Thirteen", " Fourteen", " Fifteen",  " Sixteen", " Seventeen",
         " Eighteen", " Nineteen"};
      String[] tens =  {"", "Ten", " Twenty", " Thirty", " Forty", " Fifty",
         " Sixty", " Seventy", " Eighty"," Ninety"};
      String[] digit = {"", " Hundred", " Thousand", " Lakh", " Crore"};
     int r;


      //Count the number of digits in the input number
      int numberCount(int num)
      {
          int cnt=0;

          while (num>0)
          {
            r = num%10;
            cnt++;
            num = num / 10;
          }

            return cnt;
      }


      //Function for Conversion of two digit

      String twonum(int numq)
      {
           int numr, nq;
           String ltr="";

           nq = numq / 10;
           numr = numq % 10;

           if (numq>19)
             {
           ltr=ltr+tens[nq]+unitdo[numr];
             }
           else
             {
           ltr = ltr+unitdo[numq];
             }

           return ltr;
      }

      //Function for Conversion of three digit

      String threenum(int numq)
      {
             int numr, nq;
             String ltr = "";

             nq = numq / 100;
             numr = numq % 100;

             if (numr == 0)
              {
              ltr = ltr + unitdo[nq]+digit[1];
               }
             else
              {
              ltr = ltr +unitdo[nq]+digit[1]+" and"+twonum(numr);
              }
             return ltr;

      }

}

 class originalNumToLetter

   {

      //public static void main(String[] args) throws Exception
      {

          //Defining variables q is quotient, r is remainder

          int len, q=0, r=0;
          String ltr = " ";
          String Str = "";
          constNumtoLetter n = new constNumtoLetter();
          int num = Integer.parseInt(jTextField3.getText());

          if (num <= 0) System.out.println("Zero or Negative number not for conversion");

          while (num>0)
          {

             len = n.numberCount(num);

             //Take the length of the number and do letter conversion

             switch (len)

             {
                 case 10:
                          q=num/100000000;
                          r=num%100000000;
                          ltr = n.twonum(q);
                          Str = Str+ltr+n.digit[5];
                          num = r;
                          break;

                  case 9:
                  case 8:
                          q=num/10000000;
                          r=num%10000000;
                          ltr = n.twonum(q);
                          Str = Str+ltr+n.digit[4];
                          num = r;
                          break;

                  case 7:
                  case 6:
                          q=num/100000;
                          r=num%100000;
                          ltr = n.twonum(q);
                          Str = Str+ltr+n.digit[3];
                          num = r;
                          break;

                  case 5:
                  case 4:

                           q=num/1000;
                           r=num%1000;
                           ltr = n.twonum(q);
                           Str= Str+ltr+n.digit[2];
                           num = r;
                           break;

                  case 3:


                            if (len == 3)
                                r = num;
                            ltr = n.threenum(r);
                            Str = Str + ltr;
                            num = 0;
                            break;

                  case 2:

                           ltr = n.twonum(num);
                           Str = Str + ltr;
                           num=0;
                           break;

                  case 1:
                           Str = Str + n.unitdo[num];
                           num=0;
                           break;
                  default:

                          num=0;
                          System.out.println("Exceeding Crore....No conversion");
                          //System.exit(1);


              }
                          if (num==0)
                          System.out.println(Str+" Only");

             //System.out.println("hello     "+Str+" Only");
             //jTextField2.setText(Str+" only");
             int n1=0;

            }
          //int n1=0;
          rupee=Str+" Only";
             
         }

      }


    boolean firsttime1=false;
    class printchallan2
    {

                PrintPanel2 canvas;
	        java.awt.print.PageFormat pageFormat;

        	public printchallan2()
        	{

                    System.out.println("print constructor");

                                canvas=new PrintPanel2();
                                java.awt.print.PrinterJob printJob=java.awt.print.PrinterJob.getPrinterJob();
                                double width=3.6*72;
                                double height=9*72;

                                java.awt.print.Paper paper=new java.awt.print.Paper();

                                paper.setSize(width,height);
                                java.awt.print.PageFormat page=new java.awt.print.PageFormat();
                                page.setOrientation(java.awt.print.PageFormat.LANDSCAPE);
                                paper.setImageableArea(5,10,paper.getWidth(),paper.getHeight());
                                page.setOrientation(java.awt.print.PageFormat.LANDSCAPE);
                                page.setPaper(paper);
                                pageFormat=printJob.defaultPage(page);
                                pageFormat.setPaper(paper);
                                pageFormat.setOrientation(java.awt.print.PageFormat.LANDSCAPE);
                                printJob.setPrintable(canvas,pageFormat);
                                System.out.println("width="+width+","+"height="+height);
                                System.out.println("orientation="+page.getOrientation());

                                try
                                {
					//no of pages
                                        printJob.print();
                                }
                                catch(Exception exception)
                                {
                                        javax.swing.JOptionPane.showMessageDialog(null,"error2="+exception);
                                }
                                //jButton5.setEnabled(true);
        		    }
	}//print class


    class PrintPanel2 extends javax.swing.JPanel implements java.awt.print.Printable
	{

        int page=100;
		java.awt.font.TextLayout layout;
		java.awt.Font f,f1,f2,f3,f4,f5,f6;
		java.awt.Graphics2D g2;
		int row=0;
		java.awt.font.FontRenderContext context;


        public PrintPanel2()
        {
                //ChallanNo=JOptionPane.showInputDialog(null,"Enter Challan Number:");
        }
        public void paintComponent(java.awt.Graphics g)
        {
                super.paintComponent(g);
                System.out.println("BPPRINT");
                java.awt.Graphics2D g2=(java.awt.Graphics2D)g;
                drawPage(g2);

        }

        public int print(java.awt.Graphics g,java.awt.print.PageFormat pf,int page) throws java.awt.print.PrinterException
        {
                if(page>=1)
                return java.awt.print.Printable.NO_SUCH_PAGE;
                java.awt.Graphics2D g2=(java.awt.Graphics2D)g;
                g2.setPaint(java.awt.Color.black);
                g2.translate(pf.getImageableX(),pf.getImageableY());

                System.out.println("W1="+pf.getImageableWidth()+"H1="+pf.getImageableHeight());

                //if(printflag==5)
                //{
                	drawPage(g2);
                //}

                return java.awt.print.Printable.PAGE_EXISTS;
        }
        public void drawPage(java.awt.Graphics2D g2)
        {
            String  qry;
            this.g2=g2;
	    System.out.println("Hellospecial"+firsttime1);
            //System.out.println("inside draw page..."+totalamt);
            context=g2.getFontRenderContext();
            //System.out.println("11111111111111111");
            f1=new java.awt.Font("Times New Roman",java.awt.Font.BOLD,10);
            f2=new java.awt.Font("Arial",java.awt.Font.PLAIN,8);
            f3=new java.awt.Font("Arial",java.awt.Font.PLAIN,30);
            f4=new java.awt.Font("Verdana",java.awt.Font.PLAIN,8);
            f5=new java.awt.Font("Verdana",java.awt.Font.PLAIN,10);
            f6=new java.awt.Font("Verdana",java.awt.Font.BOLD,10);
            java.awt.Font f7=new java.awt.Font("Arial",java.awt.Font.BOLD,13);
            java.awt.Font f8=new java.awt.Font("Times New Roman",java.awt.Font.BOLD,25);
            java.awt.Font f9=new java.awt.Font("Arial narrow",java.awt.Font.PLAIN,2);
            java.awt.FontMetrics fm;
            //System.out.println("222222222222");
            java.awt.geom.GeneralPath clipShape=new java.awt.geom.GeneralPath();
            String str=" fdfg dfg dfg";
            String str1="d fgf dgdfg df";
            g2.setFont(f1);
            layout=new java.awt.font.TextLayout(str,f1,context);
            java.awt.geom.AffineTransform transform=java.awt.geom.AffineTransform.getTranslateInstance(10,20);

            g2.setFont(f3);
            //System.out.println("3333333333333333333333");
            fm=g2.getFontMetrics();

			if(firsttime1==false)
			{
				firsttime1=true;
            		}
            else
{

                            int row=10;
                            firsttime1=false;
//System.out.println("444444444444444444444");
                            int top=20;
                            String temp="";
                            String temp1="";
                            String temp2="";
                            String temp3="";
                            String temp4="";
                            String temp5="";
                            String temp6="";
                            String temp7="";
                            String temp8="";

                            g2.setFont(f5);
                            fm=g2.getFontMetrics();
                            temp=jLabel5.getText().trim();
                            String arr[]=temp.split("-");
                            System.out.println(arr[0]+"   "+arr[1]+"   "+arr[2]);
                            if(arr[0].length()==1)
                                arr[0]=0+arr[0];
                            if(arr[1].length()==1)
                                arr[1]=0+arr[1];

                            String d1=""+arr[0].charAt(0);
                            String d2=""+arr[0].charAt(1);
                            String m1=""+arr[1].charAt(0);
                            String m2=""+arr[1].charAt(1);
                            String y1=""+arr[2].charAt(0);
                            String y2=""+arr[2].charAt(1);
                            String y3=""+arr[2].charAt(2);
                            String y4=""+arr[2].charAt(3);
                            System.out.println("yea r= "+y1+" "+y2+" "+y3+" "+y4);
                                    if(jCheckBox2.isSelected()==false)
                                    {
                                    qry="select D1_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    int w=Integer.parseInt(Utility.getSingleValue(qry));
                                    qry="select D1_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    int y=Integer.parseInt(Utility.getSingleValue(qry));
                                    g2.drawString(d1,w,y);
                                    qry="select D2_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    w=Integer.parseInt(Utility.getSingleValue(qry));
                                    qry="select D2_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    y=Integer.parseInt(Utility.getSingleValue(qry));
                                    g2.drawString(d2,w,y);
                                    qry="select m1_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    w=Integer.parseInt(Utility.getSingleValue(qry));
                                    qry="select m1_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    y=Integer.parseInt(Utility.getSingleValue(qry));
                                    g2.drawString(m1,w,y);
                                    qry="select m2_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    w=Integer.parseInt(Utility.getSingleValue(qry));
                                    qry="select m2_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    y=Integer.parseInt(Utility.getSingleValue(qry));
                                    g2.drawString(m2,w,y);
                                    qry="select y1_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    w=Integer.parseInt(Utility.getSingleValue(qry));
                                    qry="select y1_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    y=Integer.parseInt(Utility.getSingleValue(qry));
                                    g2.drawString(y1,w,y);
                                    qry="select y2_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    w=Integer.parseInt(Utility.getSingleValue(qry));
                                    qry="select y2_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    y=Integer.parseInt(Utility.getSingleValue(qry));
                                    g2.drawString(y2,w,y);
                                    qry="select y3_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    w=Integer.parseInt(Utility.getSingleValue(qry));
                                    qry="select y3_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    y=Integer.parseInt(Utility.getSingleValue(qry));
                                    g2.drawString(y3,w,y);
                                    qry="select y4_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    w=Integer.parseInt(Utility.getSingleValue(qry));
                                    qry="select y4_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                    y=Integer.parseInt(Utility.getSingleValue(qry));
                                    g2.drawString(y4,w,y);
                                    }
                           System.out.println(temp);

                           originalNumToLetter on=new originalNumToLetter();
                           System.out.println("rupee    "+rupee);

                            temp4=jTextField2.getText().toUpperCase();
                            temp5=jTextField3.getText().trim()+"/-";
                            System.out.println("rupee length"+rupee.length());
                            //if(fm.stringWidth(rupee)<550)
                            {

                            }
                            String a[]=rupee.trim().split(" ");
                            System.out.println("length a= "+a.length);
                            int x=0,j=0,k=0;
                            if(a.length>0)
                            {
                                for(int i=0;i<a.length;i++)
                                {
                                    x=x+fm.stringWidth(a[i]);
                                    System.out.println("x="+x+"  a[i] = "+a[i]);
                                    if(x<=270)
                                    {
                                         System.out.println("555555555555555555");
                                        qry="Select rupeeInWord1_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                        int wid=Integer.parseInt(Utility.getSingleValue(qry));
                                        qry="Select rupeeInWord1_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                        int hie=Integer.parseInt(Utility.getSingleValue(qry));
                                        g2.drawString(a[i], wid+j, hie);
                                        j=j+fm.stringWidth(a[i])+5;
                                    }
                                else
                                    {
                                        System.out.println("111111111111111111111");
                                        qry="Select rupeeInWord2_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                        int wid=Integer.parseInt(Utility.getSingleValue(qry));
                                        qry="Select rupeeInWord2_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                                        int hie=Integer.parseInt(Utility.getSingleValue(qry));
                                        g2.drawString(a[i], wid+k, hie);
                                        k=k+fm.stringWidth(a[i])+5;
                                    }
                                }

                            }
                            
                            g2.setFont(f6);
                            qry="select amount_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                            int wid=Integer.parseInt(Utility.getSingleValue(qry));
                            qry="select amount_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                            int hie=Integer.parseInt(Utility.getSingleValue(qry));
                            g2.drawString(temp5,wid,hie);
                            //party name
                            //System.out.println(temp4);
                            g2.setFont(f6);
                            qry="select pay_x from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                            wid=Integer.parseInt(Utility.getSingleValue(qry));
                            qry="select pay_y from XYPosition where Bank_name='"+jComboBox1.getSelectedItem()+"'";
                            hie=Integer.parseInt(Utility.getSingleValue(qry));
                            g2.drawString(temp4,wid,hie); //amount in digits
                            temp6="A/C Payee only";
                            if(jCheckBox1.isSelected())
                            {
                                g2.drawLine(307, 178, 415, 178);
                                g2.drawString(temp6, 318, 190);
                                g2.drawLine(307, 195, 415, 195);
                            }
                            
            }
        }
    }
    
}
