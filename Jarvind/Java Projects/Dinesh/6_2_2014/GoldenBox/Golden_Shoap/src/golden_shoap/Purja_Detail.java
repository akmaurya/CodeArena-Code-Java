/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Police_customer_work.java
 *
 * Created on Dec 12, 2013, 10:25:21 AM
 */

package golden_shoap;
import java.math.RoundingMode;
import java.sql.*;
import javax.swing.table.AbstractTableModel;
/**
 *
 * @author user1
 */
public class Purja_Detail extends javax.swing.JInternalFrame {
 javax.swing.table.DefaultTableModel dtm;
 int gPurjaNumber=0;
// static int sNo=0;
    /** Creates new form Police_customer_work */
    public Purja_Detail(int purjaNumber1) {
        initComponents();
            gPurjaNumber=purjaNumber1;
            dtm=new javax.swing.table.DefaultTableModel();
            javax.swing.table.DefaultTableCellRenderer CRLeft = new javax.swing.table.DefaultTableCellRenderer();
            javax.swing.table.DefaultTableCellRenderer CRRight = new javax.swing.table.DefaultTableCellRenderer();
            javax.swing.table.DefaultTableCellRenderer CRCenter = new javax.swing.table.DefaultTableCellRenderer();
            CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
            CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
            CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
            javax.swing.table.TableColumn column;
            String heading1[]={"S.No","Payment Apply","Item Name","Polih Type","Quantity","Unit","Weight Bef/polish","Unit","Weight Af/Polish","Rate","Unit","Amount"};
            dtm=new javax.swing.table.DefaultTableModel(heading1,0);
            jTable1.setModel(dtm);
            column=jTable1.getColumn("S.No");
            column.setCellRenderer(CRCenter);
            column.setPreferredWidth(35);

            column=jTable1.getColumn("Payment Apply");
            column.setCellRenderer(CRCenter);
            column.setPreferredWidth(90);

            column=jTable1.getColumn("Item Name");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(170);

            column=jTable1.getColumn("Polih Type");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(90);

            column=jTable1.getColumn("Quantity");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(60);

            column=jTable1.getColumn("Unit");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(80);

            column=jTable1.getColumn("Weight Bef/polish");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(80);

            column=jTable1.getColumn("Unit");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(50);

            column=jTable1.getColumn("Weight Af/Polish");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(80);

            column=jTable1.getColumn("Rate");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(60);

            column=jTable1.getColumn("Unit");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(80);

            column=jTable1.getColumn("Amount");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(95);
            //for zerox of payable amount
            jLabel22.setVisible(false);
            //End
            jLabel11.setText(""+purjaNumber1);
            String qry="Select rec_date,ac_code from polish_details where purja_number="+purjaNumber1+"";
            //to set date
            String data[][]=Utility.getInformationDD(qry,2);
            String d[]=(data[0][0]).split(" ");
            String d1[]=d[0].split("-");
            jLabel10.setText((d1[2]+"-"+d1[1]+"-"+d1[0]));
            //End
            qry="select ac_name from ac_master where ac_code="+(Integer.parseInt(data[0][1]))+"";
            String name=Utility.getSingleValue(qry);
            jLabel4.setText(name);
            
            //load data on the table
            loadData(purjaNumber1);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setTitle("Purja Details");
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setRowHeight(20);
        jTable1.setSelectionBackground(new java.awt.Color(255, 204, 255));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 80, 990, 240);

        jLabel21.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel21.setText("Total Amount( in Rs)");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(750, 340, 120, 25);

        jTextField4.setFont(new java.awt.Font("Arial", 1, 12));
        jTextField4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jTextField4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 51)));
        jTextField4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jTextField4.setOpaque(true);
        getContentPane().add(jTextField4);
        jTextField4.setBounds(880, 340, 120, 25);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel16.setText("Discount ( in Rs)");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(750, 400, 110, 25);

        jTextField6.setBackground(new java.awt.Color(236, 233, 216));
        jTextField6.setEditable(false);
        jTextField6.setFont(new java.awt.Font("Verdana", 1, 12));
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 51)));
        jTextField6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextField6MousePressed(evt);
            }
        });
        getContentPane().add(jTextField6);
        jTextField6.setBounds(880, 440, 120, 23);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel18.setText("Payable Amount");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(750, 440, 100, 25);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel20.setText("Rounding value  ");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(750, 370, 110, 25);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 51)));
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(880, 370, 120, 25);
        getContentPane().add(jLabel22);
        jLabel22.setBounds(780, 460, 40, 0);
        getContentPane().add(jLabel23);
        jLabel23.setBounds(780, 480, 0, 0);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel6.setText("Paid  Amount");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(510, 440, 90, 25);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 51)));
        jLabel7.setOpaque(true);
        getContentPane().add(jLabel7);
        jLabel7.setBounds(600, 440, 110, 25);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel3.setText("Customer's A/C");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 20, 130, 23);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setOpaque(true);
        jPanel1.add(jLabel4);
        jLabel4.setBounds(130, 20, 260, 23);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel1.setText("Receiving Date");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(470, 20, 110, 23);

        jLabel10.setBackground(new java.awt.Color(235, 217, 254));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("jLabel10");
        jLabel10.setOpaque(true);
        jPanel1.add(jLabel10);
        jLabel10.setBounds(580, 20, 130, 23);

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel2.setText("Purja Number");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(810, 20, 100, 23);

        jLabel11.setBackground(new java.awt.Color(235, 217, 254));
        jLabel11.setFont(new java.awt.Font("Arial", 1, 14));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("jLabel11");
        jLabel11.setOpaque(true);
        jPanel1.add(jLabel11);
        jLabel11.setBounds(910, 20, 70, 23);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 10, 990, 60);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(750, 430, 250, 10);

        jTextField5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jTextField5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 51)));
        jTextField5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jTextField5.setOpaque(true);
        getContentPane().add(jTextField5);
        jTextField5.setBounds(880, 400, 120, 25);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/PRINT.GIF"))); // NOI18N
        jButton1.setMnemonic('p');
        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(160, 350, 140, 30);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.gif"))); // NOI18N
        jButton2.setMnemonic('c');
        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(10, 350, 140, 30);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/DeskTopTextureEdit.png"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 1010, 490);

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    
 
    public void loadData(int purjaNumber)
    {
       dtm.setRowCount(0);
       int count=0;
       String qry="Select * from polish_details where purja_number="+purjaNumber+"";
                            String load[][]=Utility.getInformationDD(qry, 15);
                            System.out.println(qry+" length="+load.length);
                            double total=0;
                            String totamt="";
                            int itemno=0;
                            String arr[];
                            if(load.length>0)
                            {
                                arr=new String[12];
                                    for(int i=0;i<load.length;i++)
                                    {
                                        arr[0]=""+(i+1);
                                        arr[1]=load[i][12];
                                        arr[2]=load[i][3];
                                        arr[3]=load[i][4];
                                        arr[4]=load[i][5];
                                        arr[5]=load[i][6];
                                        arr[6]=load[i][7];
                                        arr[7]=load[i][8];
                                        arr[8]=load[i][9];
                                        arr[9]=load[i][10];
                                        System.out.println("Value="+load[i][10]);
                                        arr[10]=load[i][11];
                                        System.out.println("Value="+load[i][11]);
                                       
                                        arr[11]=load[i][13];

                                        total=total+Double.valueOf(arr[11]);
                                          
                                      java.math.BigDecimal bd=new java.math.BigDecimal(arr[6]);
                                      arr[6]=(""+bd.setScale(3,5));
                                      bd=new java.math.BigDecimal(arr[8]);
                                      arr[8]=(""+bd.setScale(3,5));
                                      bd=new java.math.BigDecimal(arr[9]);
                                      arr[9]=(""+bd.setScale(2,5));
                                      bd=new java.math.BigDecimal(arr[11]);
                                      arr[11]=(""+bd.setScale(2,5));
                                       
                                      dtm.addRow(arr);
                                    }
                            }
                                                             int count1=dtm.getRowCount();
                                                             double oldAmount=0;
                                                             double newAmount=0;
                                                             double discount=0;
                                                             for(int i=0;i<count1;i++)
                                                             {
                                                                oldAmount=Double.valueOf(""+dtm.getValueAt(i,11));
                                                                newAmount= newAmount+oldAmount;
                                                             } 
                                                              java.math.BigDecimal bd4=new java.math.BigDecimal(newAmount);
                                                              jTextField4.setText(""+bd4.setScale(2,5));
                                                              
                                                               discount();
                                                               payableAmount();
                                                              //label22 visibility false
                                                              double afterRounding=Double.valueOf(""+bd4.setScale(0,java.math.BigDecimal.ROUND_HALF_UP));
                                                              //jLabel22.setText(""+bd4.setScale(2,5));
                                                              double rounding=((Double.valueOf(jTextField4.getText()))-(afterRounding));
                                                              bd4=new java.math.BigDecimal(rounding);
                                                              jLabel9.setText(""+bd4.setScale(2,5));
                                                              paidAmount();
                                                             

 }
    public void payableAmount()
    {
                            String qry="Select payable_amount from polish_details where purja_number="+gPurjaNumber+"";
                            double payableAmount=Double.valueOf(Utility.getSingleValue(qry));
                            java.math.BigDecimal bd4=new java.math.BigDecimal(payableAmount);
                            jTextField6.setText(""+bd4.setScale(2,5));
    }
    public void discount()
   {                        String qry="Select discount from polish_details where purja_number="+gPurjaNumber+"";
                           
                            String data=Utility.getSingleValue(qry);
                             
                            if(data.isEmpty()|| data==null)
                            {jTextField5.setText("0");}
                            else
                            {
                            java.math.BigDecimal bd4=new java.math.BigDecimal(data);
                            jTextField5.setText(""+bd4.setScale(2,5));
                            }
    }
   public void paidAmount()
  {                         String qry="Select voucher_amount from receive_voucher where purja_number="+gPurjaNumber+" and voucher_type='Receive'";
                            String data=Utility.getSingleValue(qry);
                            System.out.println("Hiii");
                            if(data.isEmpty()|| data==null)
                            {jLabel7.setText("0");}
                            else
                            {      java.math.BigDecimal bd4=new java.math.BigDecimal(data);
                                   jLabel7.setText(""+bd4.setScale(2,5));
                            }
   }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTextField6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField6MousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField6MousePressed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        // TODO add your handling code here:

      
    }//GEN-LAST:event_jTable1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         String str=javax.swing.JOptionPane.showInputDialog(this, "Please enter Purja no.","Print Purja",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        boolean flag=false;
        if(str!=null || (str.isEmpty()==false))
        {   if(Utility.isInteger(str))
            {
                int purja=Integer.parseInt(str);
                String qry="select distinct purja_number from polish_details";
                String data[][]=Utility.getInformationDD(qry,1);
                for(int i=0;i<data.length;i++)
                {
                    int purjaNumber=Integer.parseInt(data[i][0]);
                    if(purjaNumber==purja)
                    {       flag=true;
                    }

                }
            }
        }
        if(flag==true)
        {
                        printchallan2 pt=new printchallan2(str);
        }
        else
        {
             javax.swing.JOptionPane.showMessageDialog(this,"Error... Please enter vlaid purja number . " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
     if(evt.getKeyCode()==10)
     {
                    String str=javax.swing.JOptionPane.showInputDialog(this, "Please enter Purja no.","Print Purja",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    boolean flag=false;
                    if(str!=null || (str.isEmpty()==false))
                    {   if(Utility.isInteger(str))
                        {
                            int purja=Integer.parseInt(str);
                            String qry="select distinct purja_number from polish_details";
                            String data[][]=Utility.getInformationDD(qry,1);
                            for(int i=0;i<data.length;i++)
                            {
                                int purjaNumber=Integer.parseInt(data[i][0]);
                                if(purjaNumber==purja)
                                {       flag=true;
                                }

                            }
                        }
                    }
                    if(flag==true)
                    {
                                    printchallan2 pt=new printchallan2(str);
                    }
                    else
                    {
                         javax.swing.JOptionPane.showMessageDialog(this,"Error... Please enter vlaid purja number . " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    }
       }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            this.dispose();
        }
    }//GEN-LAST:event_jButton2KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jTextField4;
    private javax.swing.JLabel jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables

     boolean firsttime1=false;
    int purjano;
    class printchallan2
    {

                PrintPanel2 canvas;
	        java.awt.print.PageFormat pageFormat;

        	public printchallan2(String str)
        	{
                    purjano=Integer.parseInt(str);
                    System.out.println("print constructor");

                                canvas=new PrintPanel2();
                                java.awt.print.PrinterJob printJob=java.awt.print.PrinterJob.getPrinterJob();
                                double width=8.27 * 72;
                                double height=(11.69 * 72);

                                java.awt.print.Paper paper=new java.awt.print.Paper();

                                paper.setSize(width,height);

                                java.awt.print.PageFormat page=new java.awt.print.PageFormat();
                                page.setOrientation(java.awt.print.PageFormat.PORTRAIT);
                                paper.setImageableArea(5,10,paper.getWidth(),paper.getHeight());
                                page.setOrientation(java.awt.print.PageFormat.PORTRAIT);
                                page.setPaper(paper);
                                pageFormat=printJob.defaultPage(page);
                                pageFormat.setPaper(paper);
                                pageFormat.setOrientation(java.awt.print.PageFormat.PORTRAIT);
                                printJob.setPrintable(canvas,pageFormat);

                                try
                                {
					//no of pages
                                        printJob.print();
                                }
                                catch(Exception exception)
                                {
                                        javax.swing.JOptionPane.showMessageDialog(null,"error2="+exception);
                                }
                                //jButton5.setEnabled(true);
        		    }
	}//print class


    class PrintPanel2 extends javax.swing.JPanel implements java.awt.print.Printable
	{

        int page=100;
		java.awt.font.TextLayout layout;
		java.awt.Font f,f1,f2,f3,f4,f5,f6;
		java.awt.Graphics2D g2;
		int row=0;
		java.awt.font.FontRenderContext context;


        public PrintPanel2()
        {
                //ChallanNo=JOptionPane.showInputDialog(null,"Enter Challan Number:");
        }
        public void paintComponent(java.awt.Graphics g)
        {
                super.paintComponent(g);
                System.out.println("BPPRINT");
                java.awt.Graphics2D g2=(java.awt.Graphics2D)g;
                drawPage(g2);

        }

        public int print(java.awt.Graphics g,java.awt.print.PageFormat pf,int page) throws java.awt.print.PrinterException
        {
                if(page>=1)
                return java.awt.print.Printable.NO_SUCH_PAGE;
                java.awt.Graphics2D g2=(java.awt.Graphics2D)g;
                g2.setPaint(java.awt.Color.black);
                g2.translate(pf.getImageableX(),pf.getImageableY());

                System.out.println("W1="+pf.getImageableWidth()+"H1="+pf.getImageableHeight());

                //if(printflag==5)
                //{
                	drawPage(g2);
                //}

                return java.awt.print.Printable.PAGE_EXISTS;
        }
        public void drawPage(java.awt.Graphics2D g2)
        {
            this.g2=g2;
	    System.out.println("Hellospecial"+firsttime1);
            //System.out.println("inside draw page..."+totalamt);
            context=g2.getFontRenderContext();
            f1=new java.awt.Font("Times New Roman",java.awt.Font.BOLD,10);
            f2=new java.awt.Font("Arial",java.awt.Font.PLAIN,8);
            f3=new java.awt.Font("Arial",java.awt.Font.PLAIN,30);
            f4=new java.awt.Font("Arial",java.awt.Font.BOLD,10);
            f5=new java.awt.Font("Verdana",java.awt.Font.PLAIN,10);
            f6=new java.awt.Font("Verdana",java.awt.Font.BOLD,10);
            java.awt.Font f7=new java.awt.Font("Arial",java.awt.Font.BOLD,13);
            java.awt.Font f8=new java.awt.Font("Times New Roman",java.awt.Font.BOLD,25);
            java.awt.Font f9=new java.awt.Font("Arial narrow",java.awt.Font.PLAIN,2);
            java.awt.FontMetrics fm;
            java.awt.geom.GeneralPath clipShape=new java.awt.geom.GeneralPath();
            String str=" fdfg dfg dfg";
            String str1="d fgf dgdfg df";
            g2.setFont(f1);
            layout=new java.awt.font.TextLayout(str,f1,context);
            java.awt.geom.AffineTransform transform=java.awt.geom.AffineTransform.getTranslateInstance(10,20);

            g2.setFont(f2);
            fm=g2.getFontMetrics();

			if(firsttime1==false)
			{
				firsttime1=true;
            		}
                        else
                        {   firsttime1=false;
                            int top=20;
                            int i=0;
                            int j=0;
                            int z=0;
                            double receiveAmount=0;
                            double discount=0;
                            double payableAmount=0;
                            String date="";
                            int pur=purjano;
                            String qry="Select rec_date from polish_details where purja_number="+pur+"";
                            String dd=Utility.getSingleValue(qry);
                            String d[]=dd.split(" ");
                            String d1[]=d[0].split("-");
                            date=d1[2]+"-"+d1[1]+"-"+d1[0];
                            g2.setFont(f6);
                            fm=g2.getFontMetrics();
                            String temp="Receiving Dt : "+date;
                            g2.drawString(temp,15,top+10);
                            qry="Select ac_code from polish_details where purja_number="+pur+"";
                            int cid=Integer.parseInt(Utility.getSingleValue(qry));
                            qry="Select ac_name from ac_master where ac_code="+cid+"";
                            String accountName=""+(Utility.getSingleValue(qry));
                            temp="Customer Name : "+accountName;
                            g2.drawString(temp,200,top+10);
                            temp="Purja Number :"+purjano;
                            g2.drawString(temp,465,top+10);
                            top=top+25;
                            g2.drawLine(15, top, 575, top);
                            //for heading
                            top=top+15;
                            temp="S.No       Weight     Item Name                    Polish Type      Quantity              Rate                  Amount";
                            g2.drawString(temp,15,top);
                            top=top+10;
                            g2.drawLine(15, top, 575, top);
                            //End
                            //for data printing
                            g2.setFont(f5);
                            fm=g2.getFontMetrics();
                            qry="Select * from polish_details where purja_number="+pur+"";
                            String load[][]=Utility.getInformationDD(qry,17);
                            double total=0;
                            double totamt=0;
                            String weight="";
                            String itemName="";
                            String polishType="";
                            String quantity="";
                            String unit="";
                            String rate="";
                            String rateUnit="";
                            String amount="";
                            String temp1="";
                            String temp2="";
                            String temp3="";
                            String temp4="";
                            String temp5="";
                            String temp6="";
                            String temp7="";
                            String temp8="";
                            String temp9="";
                            String temp10="";
                            String temp11="";
                            String temp12="";

                            top=top+25;
                            if(load.length>0)
                            {
                                    for(i=0,j=(-10);i<load.length;i++,j=j+15)
                                    {
                                        weight=load[i][7];
                                        itemName=load[i][3];
                                        polishType=load[i][4];
                                        quantity=load[i][5];
                                        unit=load[i][6];
                                        rate=load[i][10];
                                        rateUnit=load[i][11];
                                        amount=load[i][13];
                                        total=total+Double.valueOf(amount);
                                        temp4=(i+1)+".";
                                        z=fm.stringWidth(temp4);
                                        java.math.BigDecimal bd=new java.math.BigDecimal(weight);
                                        temp5=""+bd.setScale(3,5);
                                        temp6=itemName;
                                        temp7=polishType;
                                        temp8=quantity;
                                        temp9=unit;
                                        bd=new java.math.BigDecimal(rate);
                                        temp10=""+bd.setScale(2,5);
                                        temp11=rateUnit;
                                        bd=new java.math.BigDecimal(amount);
                                        temp12=""+bd.setScale(2,5);
                                        g2.drawString(temp4,40-z,top+j);
                                        //to display weight in bold if rate*weight
                                        if(rateUnit.equals("Kg"))
                                        {           g2.setFont(f6);
                                                    z=fm.stringWidth(temp5);
                                                    g2.drawString(temp5,100-z,top+j);
                                                    g2.setFont(f5);
                                        }
                                        else
                                        {
                                                    z=fm.stringWidth(temp5);
                                                    g2.drawString(temp5,100-z,top+j);
                                        }
                                        g2.drawString(temp6,120,top+j);
                                        g2.drawString(temp7,250,top+j);
                                        if(rateUnit.equals("Kg")==false)
                                        {
                                                    g2.setFont(f6);
                                                    z=fm.stringWidth(temp8);
                                                    g2.drawString((temp8+" "),350-z,top+j);
                                                    g2.setFont(f5);
                                        }
                                        else
                                        {
                                                    z=fm.stringWidth(temp8);
                                                    g2.drawString((temp8+" "),350-z,top+j);
                                        }
                                        //b=fm.stringWidth(temp9);
                                        g2.drawString(temp9,356,top+j);
                                        z=fm.stringWidth(temp10);
                                        g2.drawString(temp10+" / ",450-z,top+j);
                                        //b=fm.stringWidth(temp11);
                                        g2.drawString(temp11,460,top+j);
                                        int a=fm.stringWidth(temp12);
                                        g2.drawString(temp12,570-a,top+j);
                                        //Start Coading for total balance(Down ward)

                                        //g2.drawString("Hiii",100,840);

                                }
                            }
                            int down=312;
                            str="select discount from polish_details where purja_number="+purjano+"";
                            discount=Double.valueOf(Utility.getSingleValue(str));
                            str="select payable_amount from polish_details where purja_number="+purjano+"";
                            payableAmount=Double.valueOf(Utility.getSingleValue(str));
                            //To find roundingvalue
                            java.math.BigDecimal bd4=new java.math.BigDecimal(total);
                            double aa=Double.valueOf(""+bd4.setScale(0,java.math.BigDecimal.ROUND_HALF_UP));
                            Double rounding=(aa-total);

                                if(total>0)
                                {
                                                if(discount==0 && rounding==0)
                                                {

                                                }
                                                else if(rounding==0)
                                                {
                                                                     //for discount
                                                                    temp="Discount :";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),down );
                                                                    java.math.BigDecimal bd=new java.math.BigDecimal(discount);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,down );

                                                                    //for total
                                                                    temp="Total Amount : ";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),(down-15) );
                                                                    bd=new java.math.BigDecimal(total);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,(down-15));


                                                }
                                                else if(discount==0)
                                                {
                                                                    temp="Rounding : ";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),down );
                                                                    java.math.BigDecimal bd=new java.math.BigDecimal(rounding);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,down );

                                                                    //for total
                                                                    temp="Total Amount : ";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),(down-15) );
                                                                    bd=new java.math.BigDecimal(total);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,(down-15));
                                                                    //for Rounding
                                                 }
                                                 else
                                                {
                                                                    //for discount
                                                                    temp="Discount :";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),down );
                                                                    java.math.BigDecimal bd=new java.math.BigDecimal(discount);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,down );
                                                                    //rounding
                                                                    temp="Rounding : ";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),(down-15) );
                                                                    bd=new java.math.BigDecimal(rounding);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,(down-15) );

                                                                    //for total
                                                                    temp="Total Amount : ";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),(down-30) );
                                                                    bd=new java.math.BigDecimal(total);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,(down-30));

                                                 }
                                  }
                            g2.drawLine(400, 320, 575,320);

                            //for net amount
                            if(discount==0 && rounding==0)
                            {
                                    temp="Total Amount : ";
                                     z=fm.stringWidth(temp);
                                    g2.drawString(temp,(500-z),335 );

                            }
                            else
                            {
                                    temp="Net Amount : ";
                                    z=fm.stringWidth(temp);
                                    g2.drawString(temp,(500-z),335 );
                            }

                            //str="select payable_amount from polish_details where purja_number="+purjano+"";
                            //payableAmount=Double.valueOf(Utility.getSingleValue(str));
                                    g2.setFont(f6);
                                    java.math.BigDecimal bd=new java.math.BigDecimal(payableAmount);
                                    temp=""+bd.setScale(2,5);
                                    z=fm.stringWidth(temp);
                                    g2.drawString(temp,565-z,335 );
                                    g2.setFont(f5);
                            g2.drawLine(400, 340, 575,340);
                            //for received amount
                            temp="Received Amount : ";
                            z=fm.stringWidth(temp);
                            g2.drawString(temp,(500-z),355);

                            str="select voucher_amount from receive_voucher where purja_number="+purjano+" and voucher_type='Receive'";
                            String paidAmount=""+Utility.getSingleValue(str);
                            if(paidAmount==null || paidAmount.isEmpty())
                            {       paidAmount="0";
                                    receiveAmount=0;
                                    bd=new java.math.BigDecimal(receiveAmount);
                                    temp=""+bd.setScale(2,5);
                                    z=fm.stringWidth(temp);
                                    g2.drawString(temp,570-z,355 );
                            }
                            else
                            {
                                    receiveAmount=Double.valueOf(paidAmount);
                                    bd=new java.math.BigDecimal(receiveAmount);
                                    temp=""+bd.setScale(2,5);
                                    z=fm.stringWidth(temp);
                                    g2.drawString(temp,570-z,355 );
                            }
                            g2.drawLine(15, 365, 575,365);
                            //for total items
                            fm=g2.getFontMetrics();
                            temp="Total Items : "+(i);
                            g2.drawString(temp,20,380);

                            //for Balance Account

                            temp="Balance Amount : ";
                            z=fm.stringWidth(temp);
                            g2.drawString(temp,(500-z),380 );
                            double balanceAmount=(payableAmount-receiveAmount);
                            bd=new java.math.BigDecimal(balanceAmount);
                            temp=""+bd.setScale(2,5);
                            z=fm.stringWidth(temp);
                            g2.setFont(f6);
                            g2.drawString(temp,565-z,380 );
                            g2.drawLine(15, (385), 575, (385));



                        }
        }
    }


}
