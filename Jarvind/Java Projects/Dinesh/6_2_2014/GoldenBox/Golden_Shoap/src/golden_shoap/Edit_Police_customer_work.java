/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Police_customer_work.java
 *
 * Created on Dec 12, 2013, 10:25:21 AM
 */

package golden_shoap;
import java.awt.Color;
import java.math.RoundingMode;
import java.sql.*;
/**
 *
 * @author user1
 */
public class Edit_Police_customer_work extends javax.swing.JInternalFrame {
 javax.swing.table.DefaultTableModel dtm;
// static int sNo=0;
    /** Creates new form Police_customer_work */
    public Edit_Police_customer_work(int purjaNumber1) {
        initComponents();

         dtm=new javax.swing.table.DefaultTableModel();
            javax.swing.table.DefaultTableCellRenderer CRLeft = new javax.swing.table.DefaultTableCellRenderer();
            javax.swing.table.DefaultTableCellRenderer CRRight = new javax.swing.table.DefaultTableCellRenderer();
            javax.swing.table.DefaultTableCellRenderer CRCenter = new javax.swing.table.DefaultTableCellRenderer();
            CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
            CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
            CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
            javax.swing.table.TableColumn column;
            String heading1[]={"S.No","Payment Apply","Item Name","Polish Type","Quantity","Unit","Weight","Unit","Rate","Unit","Amount"};
            dtm=new javax.swing.table.DefaultTableModel(heading1,0);
            jTable1.setModel(dtm);
            column=jTable1.getColumn("S.No");
            column.setCellRenderer(CRCenter);
            column.setPreferredWidth(40);

            column=jTable1.getColumn("Payment Apply");
            column.setCellRenderer(CRCenter);
            column.setPreferredWidth(90);

            column=jTable1.getColumn("Item Name");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(165);

            column=jTable1.getColumn("Polish Type");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(100);

            column=jTable1.getColumn("Quantity");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(60);

            column=jTable1.getColumn("Unit");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(80);

            column=jTable1.getColumn("Weight");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(70);

            column=jTable1.getColumn("Unit");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(30);

            column=jTable1.getColumn("Rate");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(70);

            column=jTable1.getColumn("Unit");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(80);

            column=jTable1.getColumn("Amount");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(90);

            
            comboItemName();
            ComboPolishType();
            quantityCombo();
            applyOnCombo();
            jTextField1.requestFocus();
            jTextField4.setText("0");
            jTextField5.setText("0");
            jTextField6.setText("0");
            jTextField7.setText("0");

             jComboBox6.addItem("Before Polish");
            jComboBox6.addItem("After Polish");
            //for zerox of payable amount
            jLabel22.setVisible(false);
            //End
            jLabel11.setText(""+purjaNumber1);
            String qry="Select rec_date,ac_code from polish_details where purja_number="+purjaNumber1+"";
            comboCustomerName();
            //to set date
            String data[][]=Utility.getInformationDD(qry,2);
            String d[]=(data[0][0]).split(" ");
            String d1[]=d[0].split("-");
            jLabel10.setText((d1[2]+"-"+d1[1]+"-"+d1[0]));
            //End

            qry="select ac_name from ac_master where ac_code="+(Integer.parseInt(data[0][1]))+"";
            String name=Utility.getSingleValue(qry);
            jComboBox1.setSelectedItem(name);

            //To manage account when deliver process is cancle and allot another user
            jLabel25.setText(name);
            jLabel25.setVisible(false);

            //end

            //load data on the table
            
            loadData(purjaNumber1);
            
          
            //End
           
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField3 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(245, 245, 182));
        setClosable(true);
        setIconifiable(true);
        setTitle("Edit Receive Work");
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel1.setText("Receiving Date");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(470, 20, 110, 23);

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel2.setText("Purja Number");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(750, 20, 100, 23);

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel3.setText("Select Customer's A/C");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 20, 150, 23);

        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox1KeyReleased(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(170, 20, 230, 23);

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel5.setText("Item Name");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(220, 80, 80, 23);

        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox2KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox2);
        jComboBox2.setBounds(300, 80, 150, 23);

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel6.setText("Quantity");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(700, 80, 60, 23);

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel7.setText("Rate");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(220, 130, 35, 23);

        jComboBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox3MouseClicked(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jComboBox3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox3KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox3);
        jComboBox3.setBounds(540, 80, 150, 23);

        jLabel8.setBackground(new java.awt.Color(235, 217, 254));
        jLabel8.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(390, 130, 60, 23);

        jButton1.setFont(new java.awt.Font("Verdana", 1, 14));
        jButton1.setMnemonic('r');
        jButton1.setText("Receive");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(710, 130, 190, 23);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.gif"))); // NOI18N
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(900, 130, 30, 23);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setRowHeight(20);
        jTable1.setSelectionBackground(new java.awt.Color(255, 204, 255));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 170, 920, 240);

        jLabel21.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel21.setText("Total Amount( in Rs)");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(690, 430, 140, 20);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/receive2.png"))); // NOI18N
        jButton3.setMnemonic('u');
        jButton3.setText("Update & Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(10, 510, 160, 30);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/receive1.png"))); // NOI18N
        jButton4.setMnemonic('o');
        jButton4.setText("Only Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(180, 510, 160, 30);

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.gif"))); // NOI18N
        jButton6.setMnemonic('c');
        jButton6.setText("Cloce");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton6KeyPressed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(520, 510, 160, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 550, 920, 10);

        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField3);
        jTextField3.setBounds(300, 130, 80, 23);

        jLabel10.setBackground(new java.awt.Color(235, 217, 254));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("jLabel10");
        jLabel10.setOpaque(true);
        getContentPane().add(jLabel10);
        jLabel10.setBounds(580, 20, 90, 23);

        jLabel11.setBackground(new java.awt.Color(235, 217, 254));
        jLabel11.setFont(new java.awt.Font("Arial", 1, 14));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("jLabel11");
        jLabel11.setOpaque(true);
        getContentPane().add(jLabel11);
        jLabel11.setBounds(860, 20, 70, 23);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/golden_shoap/cal.png"))); // NOI18N
        jLabel12.setText("jLabel12");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jLabel12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel12KeyPressed(evt);
            }
        });
        getContentPane().add(jLabel12);
        jLabel12.setBounds(670, 20, 30, 23);

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField2);
        jTextField2.setBounds(760, 80, 60, 23);

        jTextField4.setBackground(new java.awt.Color(235, 217, 254));
        jTextField4.setFont(new java.awt.Font("Arial", 1, 12));
        jTextField4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jTextField4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 51)));
        jTextField4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jTextField4.setOpaque(true);
        getContentPane().add(jTextField4);
        jTextField4.setBounds(830, 430, 100, 23);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/PRINT.GIF"))); // NOI18N
        jButton5.setMnemonic('p');
        jButton5.setText("Print");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton5KeyPressed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(350, 510, 160, 30);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(10, 60, 1020, 10);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("/");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(380, 130, 10, 23);

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel13.setText("Rate Apply on");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(10, 130, 100, 23);

        jComboBox4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox4KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox4);
        jComboBox4.setBounds(830, 80, 100, 23);

        jLabel14.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel14.setText("Weight");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(10, 80, 60, 23);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(60, 80, 100, 23);

        jLabel15.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel15.setText("Polish Type");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(460, 80, 80, 23);

        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jComboBox5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox5KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox5);
        jComboBox5.setBounds(110, 130, 100, 23);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel16.setText("Discount ( in Rs)");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(690, 490, 110, 20);

        jLabel17.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel17.setText("Paid Amount (in Rs)");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(690, 560, 120, 20);

        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setBorder(null);
        jTextField5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextField5MousePressed(evt);
            }
        });
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField5FocusGained(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });
        getContentPane().add(jTextField5);
        jTextField5.setBounds(830, 490, 100, 23);

        jTextField6.setBackground(new java.awt.Color(235, 217, 254));
        jTextField6.setEditable(false);
        jTextField6.setFont(new java.awt.Font("Arial", 1, 12));
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 51)));
        jTextField6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextField6MousePressed(evt);
            }
        });
        getContentPane().add(jTextField6);
        jTextField6.setBounds(830, 520, 100, 23);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel18.setText("Payable Amount");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(690, 520, 130, 20);

        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField7.setBorder(null);
        jTextField7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextField7MousePressed(evt);
            }
        });
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField7KeyReleased(evt);
            }
        });
        getContentPane().add(jTextField7);
        jTextField7.setBounds(830, 560, 100, 23);

        jLabel19.setBackground(new java.awt.Color(235, 217, 254));
        jLabel19.setFont(new java.awt.Font("Arial", 0, 12));
        jLabel19.setText(" Kg");
        jLabel19.setOpaque(true);
        getContentPane().add(jLabel19);
        jLabel19.setBounds(170, 80, 40, 23);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel20.setText("Rounding value  ");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(690, 460, 120, 20);

        jComboBox6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox6KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox6);
        jComboBox6.setBounds(460, 130, 230, 23);

        jLabel9.setBackground(new java.awt.Color(235, 217, 254));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 51)));
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(830, 460, 100, 23);
        getContentPane().add(jLabel22);
        jLabel22.setBounds(780, 460, 40, 0);
        getContentPane().add(jLabel23);
        jLabel23.setBounds(780, 480, 0, 0);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh.gif"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton7KeyPressed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(400, 20, 20, 25);

        jLabel25.setText("jLabel25");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(20, 10, 130, 14);

        jLabel24.setBackground(new java.awt.Color(235, 217, 254));
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/DeskTopTextureEdit.png"))); // NOI18N
        jLabel24.setText("jLabel24");
        getContentPane().add(jLabel24);
        jLabel24.setBounds(0, 0, 950, 620);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadData(int purjaNumber)
    {
       dtm.setRowCount(0);
       int count=0;

       String qry="Select * from polish_details where purja_number="+purjaNumber+"";
                            String load[][]=Utility.getInformationDD(qry, 15);
                            System.out.println(qry+" length="+load.length);
                            double total=0;
                            String totamt="";
                            int itemno=0;
                            String arr[];
                            if(load.length>0)
                            {
                                arr=new String[11];
                                    for(int i=0;i<load.length;i++)
                                    {
                                        arr[0]=""+(i+1);
                                        arr[1]=load[i][12];
                                        arr[2]=load[i][3];
                                        arr[3]=load[i][4];
                                        arr[4]=load[i][5];
                                        arr[5]=load[i][6];
                                        arr[6]=load[i][7];
                                        arr[7]=load[i][8];
                                        arr[8]=load[i][10];
                                        arr[9]=load[i][11];
                                        arr[10]=load[i][13];

                                        total=total+Double.valueOf(arr[10]);

                                  java.math.BigDecimal bd=new java.math.BigDecimal(arr[4]);
                                  arr[4]=(""+bd);//.setScale(2,5));
                                  bd=new java.math.BigDecimal(arr[6]);
                                  arr[6]=(""+bd.setScale(3,5));
                                  bd=new java.math.BigDecimal(arr[8]);
                                  arr[8]=(""+bd.setScale(2,5));
                                  bd=new java.math.BigDecimal(arr[10]);
                                  arr[10]=(""+bd.setScale(2,5));

                                        dtm.addRow(arr);
                                    }
                            }
                            java.math.BigDecimal bd=new java.math.BigDecimal(total);
                            jTextField4.setText(""+bd.setScale(2,5));

                            qry="Select payable_amount from polish_details where purja_number="+purjaNumber+"";
                            double payableAmount=Double.valueOf(Utility.getSingleValue(qry));
                            java.math.BigDecimal bd4=new java.math.BigDecimal(payableAmount);
                            jTextField6.setText(""+bd4.setScale(2,5));
                            //label23 and 22 visibility false
                            jLabel22.setText(""+payableAmount);

                            qry="Select discount from polish_details where purja_number="+purjaNumber+"";
                            double discount=Double.valueOf(Utility.getSingleValue(qry));
                            bd4=new java.math.BigDecimal(discount);
                            jTextField5.setText(""+bd4.setScale(2,5));
                            jLabel23.setText(""+discount);

                            double rounding=((payableAmount+discount)-(Double.valueOf(jTextField4.getText())));
                            bd4=new java.math.BigDecimal(rounding);
                            jLabel9.setText(""+bd4.setScale(2,5));

                           
                            qry="Select voucher_amount from receive_voucher where purja_number="+purjaNumber+" and voucher_type='Receive'";
                            String data=Utility.getSingleValue(qry);
                          
                            if(data.isEmpty())
                            {
                                   jTextField7.setText("0");
                            }
                            else
                            {
                                    bd4=new java.math.BigDecimal(data);
                                   jTextField7.setText(""+bd4.setScale(2,5));

                            }

  


 }

     public void calenderDate()
    {
         Calender c=new Calender();
        jLabel10.setText(c.getdate());

    }
    public void comboCustomerName()
    {
                      jComboBox1.removeAllItems();
                      int accountCategory=1;
                      int accountGroup=11;
                      String qry="select ac_name from ac_master where ac_group_code="+accountGroup+" and ac_category_code="+accountCategory+"";
                      String[][] data=Utility.getInformationDD(qry,1);
                      int length= data.length;
                      for(int i=0;i<length;i++)
                      {   jComboBox1.addItem(data[i][0]);
                      }

    }
    public void comboItemName()
    {
                      String qry="select item_name from item_master"  ;
                      String[][] data=Utility.getInformationDD(qry,1);
                      //jComboBox2.addItem("Select");
                      int length= data.length;
                      for(int i=0;i<length;i++)
                      {   jComboBox2.addItem(data[i][0]);
                      }

    }
    public void ComboPolishType()
    {
                      String qry="select polish_type from polish_type_combo"  ;
                      String[][] data=Utility.getInformationDD(qry,1);
                      //jComboBox2.addItem("Select");
                      int length= data.length;
                      for(int i=0;i<length;i++)
                      {   jComboBox3.addItem(data[i][0]);
                      }


    }

     public void quantityCombo()
    {
                      String qry="select unit_name from polish_table_unit"  ;
                      String[][] data=Utility.getInformationDD(qry,1);
                     // jComboBox3.addItem("Select");
                      int length= data.length;
                      for(int i=0;i<length;i++)
                      {   jComboBox4.addItem(data[i][0]);
                      }

    }
     public void applyOnCombo()
    {
         jComboBox5.addItem("Weight");
         jComboBox5.addItem("Quantity");
     }
     public void rollback()
    {
         rollBackPaidAmount();
         rollBackDiscount();
         //To manage balance of polish and usetaccount
                           int purjaNumber=Integer.parseInt(jLabel11.getText());
                            String qry="select ac_code from polish_details where purja_number="+purjaNumber+"";
                            int acCode=Integer.parseInt(Utility.getSingleValue(qry));

                            qry="select payable_amount from polish_details where purja_number="+purjaNumber+"";
                            double payableAmount=Double.valueOf(Utility.getSingleValue(qry));

                            qry="select discount from polish_details where purja_number="+purjaNumber+"";
                            double discount=Double.valueOf(Utility.getSingleValue(qry));

                            qry="select ac_dr from ac_smry where ac_code="+acCode+"";
                            double acDr=Double.valueOf(Utility.getSingleValue(qry));
                            acDr=(acDr-(payableAmount));
                            qry="Update ac_smry set ac_dr="+acDr+" where ac_code="+acCode+"";
                            Utility.saveInformation(qry);

                            qry="select ac_cr from ac_smry where ac_code="+10+"";
                            double acCr=Double.valueOf(Utility.getSingleValue(qry));
                            System.out.println("Helllooooooooooooooooo");
                            acCr=(acCr-(payableAmount+discount));
                            qry="Update ac_smry set ac_cr="+acCr+" where ac_code="+10+"";
                            Utility.saveInformation(qry);

                            // Delete record from polish details
                            qry="delete * from polish_details where purja_number="+purjaNumber+"";
                            Utility.saveInformation(qry);
                            qry="delete * from receive_voucher where purja_number="+purjaNumber+" and voucher_type='Receive'";
                            boolean bn=Utility.saveInformation(qry);


     }
     public void del()
    {
          // Delete record from polish details
                            int purjaNumber=Integer.parseInt(jLabel11.getText());
                            String qry="delete * from receive_voucher where purja_number="+purjaNumber+" and voucher_type='Receive'";
                            Utility.saveInformation(qry);
     }
    public boolean save()
    {
        String qry="select cancle from polish_details where purja_number="+(Integer.parseInt(jLabel11.getText()))+"";
        String cancle=Utility.getSingleValue(qry);
        if(cancle.equals("No"))
        {      rollback();
               
        }
        else
        {
            qry="delete * from polish_details where purja_number="+(Integer.parseInt(jLabel11.getText()))+"";
            Utility.saveInformation(qry);
            qry="delete * from receive_voucher where purja_number="+(Integer.parseInt(jLabel11.getText()))+" and voucher_type='Receive'";
            boolean bn=Utility.saveInformation(qry);
        }

            //Check the validation of discount and paid amount text box

                   //Discount
                    if(Utility.isBlank(jTextField5.getText())==false)
                    {
                      if(Utility.isDouble(jTextField5.getText()))
                      {
                           if((Double.valueOf(jTextField5.getText()))>0)
                           {
                            discount();

                           }
                      }
                      else
                      {
                        javax.swing.JOptionPane.showMessageDialog(this,"Error..... Enter valid discount." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                         jTextField5.requestFocus();
                         return false;
                      }
                    }
                    else
                    {
                        jTextField5.setText("0");
                    }
                    //End
                    //paid amount

                    if(Utility.isBlank(jTextField7.getText())==false)
                    { 
                      if(Utility.isDouble(jTextField7.getText()))
                      {
                           if((Double.valueOf(jTextField7.getText()))>0)
                           {
                                managePaidAmount();
                           }
                      }
                      else
                      {
                        javax.swing.JOptionPane.showMessageDialog(this,"Error..... Enter valid paid amount." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        jTextField7.requestFocus();
                        return false;
                      }
                    }
                    else
                    {
                        jTextField7.setText("0");
                    }
                    //End
          if((dtm.getRowCount())>=1)
          {   
              String date=jLabel10.getText();
              String d[]=date.split("-");
              date=d[1]+"/"+d[0]+"/"+d[2];
              int purjaNumber=Integer.parseInt(jLabel11.getText());
              //rollback(purjaNumber);
              String accountName=""+jComboBox1.getSelectedItem();
              qry="select ac_code from ac_master where ac_name='"+accountName+"'";
              int accountCode=Integer.parseInt(Utility.getSingleValue(qry));
              double paidAtReceive=Double.valueOf(jTextField7.getText());

              int status=0;
              String itemName="";
              String polishType="";
              double quantity=0;
              String quantityUnit="";
              double weight=0;
              String weightUnit="";
              double rate=0;
              String rateUnit="";
              int row=dtm.getRowCount();
              double amount=0;
              double weightAfterPolish=0;
              String paymentApply=""+jComboBox6.getSelectedItem();
              boolean bn=false;
              cancle="No";
              int quantityAfterPolish=0;
              for(int i=0;i<row;i++)
              {
                      itemName=""+dtm.getValueAt(i,2);
                      polishType=""+dtm.getValueAt(i,3);
                      quantity=Double.valueOf(""+dtm.getValueAt(i,4));
                      quantityUnit=(""+dtm.getValueAt(i,5));
                      weight=Double.valueOf(""+dtm.getValueAt(i,6));
                      weightUnit=(""+dtm.getValueAt(i,7));
                      rate=Double.valueOf(""+dtm.getValueAt(i,8));
                      rateUnit=(""+dtm.getValueAt(i,9));
                      paymentApply=""+dtm.getValueAt(i,1);
                      amount=Double.valueOf(""+dtm.getValueAt(i,10));
                      qry="insert into polish_details values(#"+date+"#,"+purjaNumber+","+accountCode+",'"+itemName+"','"+polishType+"',"+quantity+",'"+quantityUnit+"',"+weight+",'"+weightUnit+"',"+weightAfterPolish+","+rate+",'"+rateUnit+"','"+paymentApply+"',"+amount+","+status+","+(Double.valueOf(jTextField5.getText()))+","+(Double.valueOf(jTextField6.getText()))+","+paidAtReceive+","+(Double.valueOf(jTextField5.getText()))+",'"+cancle+"',"+quantityAfterPolish+")";
                      bn=Utility.saveInformation(qry);
              }
              if(bn==true)
              {
                            //to manage ac_balance in ac_smry table
                            String acName=""+jComboBox1.getSelectedItem();

                            qry="select ac_code from ac_master where ac_name='"+acName+"'";
                            int acCode=Integer.parseInt(Utility.getSingleValue(qry));

                            qry="select ac_dr from ac_smry where ac_code="+acCode+"";
                            double acDr=Double.valueOf(Utility.getSingleValue(qry));
                            acDr=acDr+((Double.valueOf(jTextField6.getText())));
                            qry="Update ac_smry set ac_dr="+acDr+" where ac_code="+acCode+"";
                            Utility.saveInformation(qry);

                            qry="select ac_cr from ac_smry where ac_code="+10+"";
                            double acCr=Double.valueOf(Utility.getSingleValue(qry));
                            acCr=acCr+(((Double.valueOf(jTextField6.getText()))+(Double.valueOf(jTextField5.getText()))));
                            qry="Update ac_smry set ac_cr="+acCr+" where ac_code="+10+"";
                            Utility.saveInformation(qry);

                         //End
                                  jTextField1.setText("");
                                  jTextField2.setText("");
                                  jTextField3.setText("");
                                  jTextField4.setText("");
                                  jTextField5.setText("");
                                  jTextField6.setText("");
                                  jTextField7.setText("");
                                  jComboBox3.setSelectedItem("Lekar");
                                  jComboBox4.setSelectedItem("Piece");
                                  jComboBox5.setSelectedItem("Weight");
                                  jComboBox6.setSelectedItem("Before Polish");
                                  jTextField1.requestFocus();
                                  jLabel9.setText("");
                                  dtm.setRowCount(0);
                                 
                        }
                        else
                        {
                        javax.swing.JOptionPane.showMessageDialog(this,"Error." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);

                        }
                           
           }
           else
           {
                javax.swing.JOptionPane.showMessageDialog(this,"There is no record." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jComboBox2.requestFocus();
           }
        
          return true;

    }

    public boolean save1()
    {
           del();
        //rollBack();

            //Check the validation of discount and paid amount text box

                   //Discount
                    if(Utility.isBlank(jTextField5.getText())==false)
                    {
                      if(Utility.isDouble(jTextField5.getText()))
                      {
                           if((Double.valueOf(jTextField5.getText()))>0)
                           {
                            discount();

                           }
                      }
                      else
                      {
                        javax.swing.JOptionPane.showMessageDialog(this,"Error..... Enter valid discount." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                         jTextField5.requestFocus();
                         return false;
                      }
                    }
                    else
                    {
                        jTextField5.setText("0");
                    }
                    //End
                    //paid amount

                    if(Utility.isBlank(jTextField7.getText())==false)
                    {
                      if(Utility.isDouble(jTextField7.getText()))
                      {
                           if((Double.valueOf(jTextField7.getText()))>0)
                           {
                                managePaidAmount();
                           }
                      }
                      else
                      {
                        javax.swing.JOptionPane.showMessageDialog(this,"Error..... Enter valid paid amount." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        jTextField7.requestFocus();
                        return false;
                      }
                    }
                    else
                    {
                        jTextField7.setText("0");
                    }
                    //End
          if((dtm.getRowCount())>=1)
          {
              String date=jLabel10.getText();
              String d[]=date.split("-");
              date=d[1]+"/"+d[0]+"/"+d[2];
              int purjaNumber=Integer.parseInt(jLabel11.getText());
              //rollback(purjaNumber);
              String accountName=""+jComboBox1.getSelectedItem();
              String qry="select ac_code from ac_master where ac_name='"+accountName+"'";
              int accountCode=Integer.parseInt(Utility.getSingleValue(qry));
              double paidAtReceive=Double.valueOf(jTextField7.getText());

              int status=0;
              String itemName="";
              String polishType="";
              double quantity=0;
              String quantityUnit="";
              double weight=0;
              String weightUnit="";
              double rate=0;
              String rateUnit="";
              int row=dtm.getRowCount();
              double amount=0;
              double weightAfterPolish=0;
              String paymentApply=""+jComboBox6.getSelectedItem();
              boolean bn=false;
              for(int i=0;i<row;i++)
              {
                      itemName=""+dtm.getValueAt(i,2);
                      polishType=""+dtm.getValueAt(i,3);
                      quantity=Double.valueOf(""+dtm.getValueAt(i,4));
                      quantityUnit=(""+dtm.getValueAt(i,5));
                      weight=Double.valueOf(""+dtm.getValueAt(i,6));
                      weightUnit=(""+dtm.getValueAt(i,7));
                      rate=Double.valueOf(""+dtm.getValueAt(i,8));
                      rateUnit=(""+dtm.getValueAt(i,9));
                      paymentApply=""+dtm.getValueAt(i,1);
                      amount=Double.valueOf(""+dtm.getValueAt(i,10));
                      qry="insert into polish_details values(#"+date+"#,"+purjaNumber+","+accountCode+",'"+itemName+"','"+polishType+"',"+quantity+",'"+quantityUnit+"',"+weight+",'"+weightUnit+"',"+weightAfterPolish+","+rate+",'"+rateUnit+"','"+paymentApply+"',"+amount+","+status+","+(Double.valueOf(jTextField5.getText()))+","+(Double.valueOf(jTextField6.getText()))+","+paidAtReceive+","+(Double.valueOf(jTextField5.getText()))+")";
                      bn=Utility.saveInformation(qry);
              }
              if(bn==true)
              {
                            //to manage ac_balance in ac_smry table
                            String acName=""+jComboBox1.getSelectedItem();

                            qry="select ac_code from ac_master where ac_name='"+acName+"'";
                            int acCode=Integer.parseInt(Utility.getSingleValue(qry));

                            qry="select ac_dr from ac_smry where ac_code="+acCode+"";
                            double acDr=Double.valueOf(Utility.getSingleValue(qry));
                            acDr=acDr+((Double.valueOf(jTextField6.getText())));
                            qry="Update ac_smry set ac_dr="+acDr+" where ac_code="+acCode+"";
                            Utility.saveInformation(qry);

                            qry="select ac_cr from ac_smry where ac_code="+10+"";
                            double acCr=Double.valueOf(Utility.getSingleValue(qry));
                            acCr=acCr+(((Double.valueOf(jTextField6.getText()))+(Double.valueOf(jTextField5.getText()))));
                            qry="Update ac_smry set ac_cr="+acCr+" where ac_code="+10+"";
                            Utility.saveInformation(qry);

                         //End
                                  jTextField1.setText("");
                                  jTextField2.setText("");
                                  jTextField3.setText("");
                                  jTextField4.setText("");
                                  jTextField5.setText("");
                                  jTextField6.setText("");
                                  jTextField7.setText("");
                                  jComboBox3.setSelectedItem("Lekar");
                                  jComboBox4.setSelectedItem("Piece");
                                  jComboBox5.setSelectedItem("Weight");
                                  jComboBox6.setSelectedItem("Before Polish");
                                  jTextField1.requestFocus();
                                  jLabel9.setText("");
                                  dtm.setRowCount(0);

                        }
                        else
                        {
                        javax.swing.JOptionPane.showMessageDialog(this,"Error." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);

                        }

           }
           else
           {
                javax.swing.JOptionPane.showMessageDialog(this,"There is no record." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jComboBox2.requestFocus();
           }

          return true;

    }
    public void rollBackDiscount()
    {
                            int acCode=8;//code of discount a/c
                            int purjaNumber=Integer.parseInt(jLabel11.getText());
                            String qry="select discount from polish_details where purja_number="+purjaNumber+"";
                            double oldDiscount=Double.valueOf(Utility.getSingleValue(qry));
                            qry="select ac_dr from ac_smry where ac_code="+acCode+"";
                            double acDr=Double.valueOf(Utility.getSingleValue(qry));
                            acDr=(acDr-oldDiscount);
                            qry="Update ac_smry set ac_dr="+acDr+" where ac_code="+acCode+"";
                            Utility.saveInformation(qry);
     }
     public void discount()
    {
                            int acCode=8;
                            String qry="select ac_dr from ac_smry where ac_code="+acCode+"";
                            double acDr=Double.valueOf(Utility.getSingleValue(qry));
                            acDr=acDr+(Double.valueOf(jTextField5.getText()));
                            qry="Update ac_smry set ac_dr="+acDr+" where ac_code="+acCode+"";
                            Utility.saveInformation(qry);


     }
     public void dataAddToTable()
    {   

      try
      {
             if((jTextField1.getText()).equals(""))
             {
                javax.swing.JOptionPane.showMessageDialog(this,"Please enter weight of items. " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField1.requestFocus();
             }
             else if(Utility.isDouble(jTextField1.getText()) == false)
             {
                javax.swing.JOptionPane.showMessageDialog(this,"Error....Please enter valid weight. " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField1.requestFocus();
             }
             else if((jTextField2.getText()).equals("")&& (jComboBox5.getSelectedItem().equals("Quantity")))
             {
                javax.swing.JOptionPane.showMessageDialog(this,"Enter item quantity. " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField2.requestFocus();
             }
             else if((Utility.isInteger(jTextField2.getText()) == false)&& (jComboBox5.getSelectedItem().equals("Quantity")))
             {
                javax.swing.JOptionPane.showMessageDialog(this,"Error.... Please enter item quantity in whole number formate. " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField2.requestFocus();
             }
             else if((jTextField3.getText()).equals(""))
             {
                javax.swing.JOptionPane.showMessageDialog(this,"Enter rate. " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField3.requestFocus();
             }
             else if(Utility.isDouble(jTextField3.getText()) == false)
             {
                javax.swing.JOptionPane.showMessageDialog(this,"Error.... Please enter valid rate. " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField3.requestFocus();
             }
            else
             {                      //to set quantity = 0 if rate apply on weight and quantity is blank
                                    if(jComboBox5.getSelectedItem().equals("Weight"))
                                    {
                                        if(jTextField2.getText().isEmpty())
                                        {
                                            jTextField2.setText("0");
                                        }
                                    }
              if((jButton1.getLabel()).equals("Receive"))
                {
                                int sNo=(Integer.parseInt(""+jTable1.getRowCount())+1);
                                String str[]=new String[11];
                                 str[0]=""+sNo;
                                 str[1]=""+jComboBox6.getSelectedItem();
                                 str[2]=""+jComboBox2.getSelectedItem();
                                 str[3]=""+jComboBox3.getSelectedItem();
                                 str[4]=jTextField2.getText();
                                 str[5]=""+jComboBox4.getSelectedItem();
                                 java.math.BigDecimal bd=new java.math.BigDecimal(""+jTextField1.getText());
                                 str[6]=""+bd.setScale(3,5);
                                 str[7]="Kg";
                                 java.math.BigDecimal bd3=new java.math.BigDecimal(""+jTextField3.getText());
                                 str[8]=""+bd3.setScale(2,5);
                                 str[9]=""+jLabel8.getText();
                                 //to manage before polish and after polish
                                 if((jComboBox6.getSelectedItem()).equals("Before Polish"))
                                 {
                                         double weight=0;
                                         if((jComboBox5.getSelectedItem()).equals("Weight"))
                                          {
                                                weight=(Double.valueOf(jTextField1.getText()));
                                          }
                                         else
                                         {
                                              weight =(Double.valueOf(jTextField2.getText()));
                                          }
                                         double rate =(Double.valueOf(jTextField3.getText()));
                                         double amount=(weight*rate);
                                         java.math.BigDecimal bd1=new java.math.BigDecimal(amount);
                                         str[10]=""+bd1.setScale(2,5);
                                 }
                                else
                                 {
                                         str[10]="0";
                                }

                                 //end

                                                             dtm.addRow(str);
                                                             int count=dtm.getRowCount();
                                                             double oldAmount=0;
                                                             double newAmount=0;
                                                             double discount=Double.valueOf(jTextField5.getText());
                                                             for(int i=0;i<count;i++)
                                                             {
                                                                oldAmount=Double.valueOf(""+dtm.getValueAt(i,10));
                                                                newAmount= newAmount+oldAmount;
                                                             }
                                                              java.math.BigDecimal bd4=new java.math.BigDecimal(newAmount);
                                                              jTextField4.setText(""+bd4.setScale(2,5));
                                                              double payableAmount=Double.valueOf(""+bd4.setScale(0,java.math.BigDecimal.ROUND_HALF_UP));
                                                              jTextField6.setText(""+(payableAmount-discount));
                                                              //label22 visibility false
                                                              jLabel22.setText(""+payableAmount);
                                                              System.out.println("Before9999"+jLabel22.getText()+"0000000");
                                                              //end
                                                              double rounding=(payableAmount-(Double.valueOf(jTextField4.getText())));
                                                              bd4=new java.math.BigDecimal(rounding);
                                                              jLabel9.setText(""+bd4.setScale(2,5));

                                                                 // System.out.println(bd4.setScale(2,java.math.BigDecimal.ROUND_CEILING));
                                                              
                                                              /*int index=(jTextField4.getText()).indexOf('.',0);
                                                              index=Integer.parseInt(""+(jTextField4.getText()).charAt(index+1));
                                                              double roundingAmount=newAmount;
                                                              if(index>=5)
                                                              {
                                                                  roundingAmount=roundingAmount+1;
                                                              }*/
                                                              //jLabel20.setText("After rounding     "+(roundingAmount));
                                                              jTextField1.setText("");
                                                              jTextField2.setText("");
                                                              jTextField3.setText("");
                                                              jComboBox3.setSelectedItem("Lekar");
                                                              jComboBox4.setSelectedItem("Piece");
                                                              jComboBox5.setSelectedItem("Weight");
                                                              jComboBox6.setSelectedItem("Before Polish");
                                                              jTextField1.requestFocus();

                 }
                else
                {
                  if(jTable1.getRowCount()>0)
                    {
                        if(jTable1.getSelectedRowCount()==1)
                        {

                             int check=javax.swing.JOptionPane.showConfirmDialog(this,"Are you sure to update record ?" ,"Confirm Window",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
                             if(check==javax.swing.JOptionPane.YES_OPTION)
                             {
                                 java.math.BigDecimal bd4=new java.math.BigDecimal(jTextField1.getText());
                                 String tweight=(""+bd4.setScale(3,5));
                                 bd4=new java.math.BigDecimal(jTextField3.getText());
                                 String trate=(""+bd4.setScale(2,5));
                                int row=jTable1.getSelectedRow();
                                jTable1.setValueAt((""+jComboBox6.getSelectedItem()), row, 1);
                                jTable1.setValueAt((""+jComboBox2.getSelectedItem()), row, 2);
                                jTable1.setValueAt((""+jComboBox3.getSelectedItem()), row, 3);
                                jTable1.setValueAt((""+jTextField2.getText()), row, 4);
                                jTable1.setValueAt((""+jComboBox4.getSelectedItem()), row, 5);
                               jTable1.setValueAt((tweight), row, 6);
                                jTable1.setValueAt((""+trate), row, 8);
                                jTable1.setValueAt((""+jLabel8.getText()), row, 9);

                                          if((jComboBox6.getSelectedItem()).equals("Before Polish"))
                                            {

                                                     double weight=0;
                                                     if((jComboBox5.getSelectedItem()).equals("Weight"))
                                                      {
                                                                          weight=(Double.valueOf(jTextField1.getText()));
                                                      }
                                                     else
                                                     {
                                                                         weight =(Double.valueOf(jTextField2.getText()));
                                                      }
                                                     double rate =(Double.valueOf(jTextField3.getText()));
                                                     double amount=(weight*rate);
                                                     bd4=new java.math.BigDecimal(amount);
                                                     jTable1.setValueAt((""+bd4.setScale(2,5)), row, 10);
                                            }
                                            else
                                              {
                                                     jTable1.setValueAt("0.00", row, 10);
                                               }

                                                     int count=dtm.getRowCount();
                                                     double oldAmount=0;
                                                     double newAmount=0;
                                                     for(int i=0;i<count;i++)
                                                     {
                                                        oldAmount=Double.valueOf(""+dtm.getValueAt(i,10));
                                                        newAmount= newAmount+oldAmount;
                                                     }
                                                      bd4=new java.math.BigDecimal(newAmount);
                                                      jTextField4.setText(""+bd4.setScale(2,5));
                                                      double payableAmount=Double.valueOf(""+bd4.setScale(0,java.math.BigDecimal.ROUND_HALF_UP));
                                                      double discount=Double.valueOf(jTextField5.getText());
                                                      bd4=new java.math.BigDecimal((payableAmount-discount));
                                                      jTextField6.setText(""+bd4.setScale(2,5));
                                                      double rounding=(payableAmount-(Double.valueOf(jTextField4.getText())));
                                                      bd4=new java.math.BigDecimal(rounding);
                                                      jLabel9.setText(""+bd4.setScale(2,5));

                                                      int index=(jTextField4.getText()).indexOf('.',0);
                                                      index=Integer.parseInt(""+(jTextField4.getText()).charAt(index+1));
                                                      double roundingAmount=newAmount;
                                                      if(index>=5)
                                                      {
                                                          roundingAmount=roundingAmount+1;
                                                      }
                                                      jLabel20.setText("After rounding     "+(roundingAmount));
                                                      jTextField1.setText("");
                                                      jTextField2.setText("");
                                                      jTextField3.setText("");
                                                      jComboBox3.setSelectedItem("Lekar");
                                                      jComboBox4.setSelectedItem("Piece");
                                                      jComboBox6.setSelectedItem("Before Polish");

                                                      jTextField1.requestFocus();
                                                      jButton1.setLabel("Receive");
   
                                }
                                 if(check==javax.swing.JOptionPane.NO_OPTION)
                                {
                                  jTextField1.requestFocus();
                                }
                            }
                        else
                        {
                          javax.swing.JOptionPane.showMessageDialog(this,"Error... please select rocord from the table that you want to update." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        }
                        }
                        else
                        {
                          javax.swing.JOptionPane.showMessageDialog(this,"Error... There is no record in the table." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        }

                }
             }
        }
        catch(NullPointerException ex)
        {
             javax.swing.JOptionPane.showMessageDialog(this,"All field must be entered. " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
        
     }

    public int setVoucherNumber()
    {   int voucherNumber=0;
        try
        {
                   String qry="select max(voucher_number) from receive_voucher where voucher_type='Receive'";
                    String str=Utility.getSingleValue(qry);
                     if(str==null)
                     {
                            voucherNumber=1;
                     }
                    else
                     {
                        voucherNumber=(Integer.parseInt(str)+1);
                        
                    }
        }
        catch(NullPointerException npe)
        {
            System.out.println(npe);
        }
        return voucherNumber;
   }

    public void managePaidAmount()
    {
               int purjaNumber=Integer.parseInt(""+(jLabel11.getText()));                   // for amount validation
               System.out.println(purjaNumber);
               double paidAmount=0;
               if(Utility.isDouble(jTextField7.getText()))
               {              System.out.println("A.............................................");
                              paidAmount=Double.valueOf(jTextField7.getText());
                              int voucherNumber=setVoucherNumber();
                              String date=""+jLabel10.getText();
                              String byAccount=""+jComboBox1.getSelectedItem();
                              String qry="select ac_code from ac_master where ac_name='"+byAccount+"'";
                              System.out.println(qry);
                              int byAccountCode=Integer.parseInt(Utility.getSingleValue(qry));
                              int toAccountCode=9;
                             // System.out.println(date);
                              qry="insert into receive_voucher values('Receive',"+voucherNumber+",'"+date+"',"+byAccountCode+","+toAccountCode+","+paidAmount+",'',"+purjaNumber+")";
                              System.out.println(qry);
                              boolean bn=Utility.saveInformation(qry);
                              if(bn==true)
                              {
                                  //to manage ac_smry table
                                            qry="select ac_cr from ac_smry where ac_code="+byAccountCode+"";
                                            double acCr=Double.valueOf(Utility.getSingleValue(qry));
                                            System.out.println("paid amount="+paidAmount);
                                            acCr=(acCr+paidAmount);
                                            qry="Update ac_smry set ac_cr="+acCr+" where ac_code="+byAccountCode+"";
                                            Utility.saveInformation(qry);
                                            qry="select ac_Dr from ac_smry where ac_code="+toAccountCode+"";
                                            double acDr=Double.valueOf(Utility.getSingleValue(qry));
                                            acDr=(acDr+paidAmount);
                                           
                                            qry="Update ac_smry set ac_dr="+acDr+" where ac_code="+toAccountCode+"";
                                            Utility.saveInformation(qry);


                                  //End
                                  setVoucherNumber();

                              }
                              else
                              {
                                  javax.swing.JOptionPane.showMessageDialog(this,"Error.. Please try again " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                              }
              }
           else
              {
                    javax.swing.JOptionPane.showMessageDialog(this,"Error... amount is not valid. " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    jTextField1.requestFocus();
              }



    }

    public void rollBackPaidAmount()
    {          
               int purjaNumber=Integer.parseInt(""+(jLabel11.getText()));                   // for amount validation
               double paidAmount=0;
               int byAccountCode=0;
               String qry="select distinct ac_code from polish_details where purja_number="+purjaNumber+"";
               String data[][]=Utility.getInformationDD(qry,1);
               byAccountCode=Integer.parseInt(data[0][0]);

               qry="select voucher_amount from receive_voucher where purja_number="+purjaNumber+" and voucher_type='Receive'";
               String str=(Utility.getSingleValue(qry));
               if(str.isEmpty()|| str==null)
               {
                    paidAmount=0;
               }
                else
               {
                    paidAmount=Double.valueOf(str);
               }
               int toAccountCode=9;
                                  //to manage ac_smry table
                                            //update party a/c
                                            qry="select ac_cr from ac_smry where ac_code="+byAccountCode+"";
                                            double acCr=Double.valueOf(Utility.getSingleValue(qry));
                                            acCr=(acCr-paidAmount);
                                            qry="Update ac_smry set ac_cr="+acCr+" where ac_code="+byAccountCode+"";
                                            Utility.saveInformation(qry);

                                            //udate CASH a/c
                                            qry="select ac_Dr from ac_smry where ac_code="+toAccountCode+"";
                                            double acDr=Double.valueOf(Utility.getSingleValue(qry));
                                            acDr=(acDr-paidAmount);
                                            qry="Update ac_smry set ac_dr="+acDr+" where ac_code="+toAccountCode+"";
                                            Utility.saveInformation(qry);
                                  //End
                                            //setVoucherNumber();
              


    }

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
          if(evt.getKeyCode()==10)
        {
           jTextField1.requestFocus();
        }
        
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void jComboBox2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode()==10)
        {
           jComboBox3.requestFocus();
        }
    }//GEN-LAST:event_jComboBox2KeyPressed

    private void jComboBox3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox3KeyPressed
        // TODO add your handling code here:
          if(evt.getKeyCode()==10)
        {
              jTextField2.requestFocus();
        }
    }//GEN-LAST:event_jComboBox3KeyPressed

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            if(jComboBox6.isEnabled())
            {
              jComboBox6.requestFocus();
            }
            else
            {
                jButton1.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jComboBox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox3MouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jComboBox3MouseClicked

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
         //String qry="select customer_id from customer_master where customer_name='"+jComboBox1.getSelectedItem()+"'";
        // String str=Utility.getSingleValue(qry);
        //jLabel25.setText(jComboBox1.getSelectedItem().toString());
      
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        // TODO add your handling code here:
     /*     String qry="select ac_code from polish_details where purja_number="+(Integer.parseInt(jLabel11.getText()))+"";
        int code=Integer.parseInt(Utility.getSingleValue(qry));
        qry="select ac_name from ac_master where ac_code="+code+"";
        String name=Utility.getSingleValue(qry);
        if((jComboBox1.getSelectedItem()).equals(name)==false)
        {
            int check=javax.swing.JOptionPane.showConfirmDialog(this,"Are you sure to update customer name ?" ,"Confirm Window",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
            if(check==0)
            {
                jComboBox1.setSelectedItem(name);
            }
            else
            {
                String n1=""+jComboBox1.getSelectedItem();
                qry="select ac_code from ac_master where ac_name='"+n1+"'";
                int c1=Integer.parseInt(Utility.getSingleValue(qry));
                qry="update polish_details set ac_code="+c1+" where purja_number="+(Integer.parseInt(jLabel11.getText()))+"";
                Utility.saveInformation(qry);

            }
        }*/
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
            dataAddToTable();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
                dataAddToTable();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode()==10)
        {
              jComboBox4.requestFocus();
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        String str=jButton1.getLabel();
        if(str.equals("Receive"))
        {
            jButton1.setLabel("Update");
        }
        else
        {
            jButton1.setLabel("Receive");
             jTextField2.setText("");
              jTextField3.setText("");
               jTextField1.setText("");
              //jComboBox2.setSelectedItem("Select");
              //jComboBox3.setSelectedItem("Select");
              jComboBox3.requestFocus();

        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
      int row= jTable1.getSelectedRow();
      jComboBox6.setSelectedItem(""+jTable1.getValueAt(row,1));
      jComboBox2.setSelectedItem(""+jTable1.getValueAt(row,2));
      jComboBox3.setSelectedItem(""+jTable1.getValueAt(row,3));
      jTextField2.setText(""+jTable1.getValueAt(row,4));
      jComboBox4.setSelectedItem(""+jTable1.getValueAt(row,5));
      jTextField1.setText(""+jTable1.getValueAt(row,6));
      jTextField3.setText(""+jTable1.getValueAt(row,8));
      jLabel8.setText(""+jTable1.getValueAt(row,9));
      String rateUnit=(""+jTable1.getValueAt(row,9));
      System.out.println(rateUnit);
      if(rateUnit.equalsIgnoreCase("Kg"))
      {
          jComboBox5.setSelectedItem("Weight");
      }
      else
      {
          jComboBox5.setSelectedItem("Quantity");
      }
      jButton1.setLabel("Update");
      
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==127)
        {
            int check=javax.swing.JOptionPane.showConfirmDialog(this,"Are you sure to delete record ?" ,"Confirm Window",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
             if(check==javax.swing.JOptionPane.YES_OPTION)
             {

                        int selectedRow= jTable1.getSelectedRow();
                        double amount=Double.valueOf(""+jTable1.getValueAt(selectedRow,10));
                        double totalAmount=(Double.valueOf(jTextField4.getText())-amount);
                        java.math.BigDecimal bd4=new java.math.BigDecimal(totalAmount);
                        jTextField4.setText(""+bd4.setScale(2,5));
                        dtm.removeRow(selectedRow);

                          double payableAmount=Double.valueOf(""+bd4.setScale(0,java.math.BigDecimal.ROUND_HALF_UP));

                          bd4=new java.math.BigDecimal(totalAmount-payableAmount);
                          jLabel9.setText(""+bd4.setScale(2,5));


                          double discount=Double.valueOf(jTextField5.getText());
                          bd4=new java.math.BigDecimal(payableAmount-discount);
                          jTextField6.setText(""+bd4.setScale(2,5));

                         jTextField1.requestFocus();
                         jButton1.setLabel("Receive");
                         jTextField2.setText("");
                         jTextField3.setText("");
                         jTextField1.setText("");
                         jComboBox3.setSelectedItem("Lekar");
                         jComboBox4.setSelectedItem("Piece");
                         jComboBox5.setSelectedItem("Weight");
                         jComboBox6.setSelectedItem("Before Weight");

              }
            if(check==javax.swing.JOptionPane.NO_OPTION)
             {
                 jTextField1.requestFocus();
            }

        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.dispose();

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton6KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
                        this.dispose();
        }

    }//GEN-LAST:event_jButton6KeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if((jTextField7.getText()).isEmpty() == false && (jTextField5.getText()).isEmpty() == false)
        {
                 if((Double.valueOf(jTextField5.getText()))>(Double.valueOf(jTextField6.getText())))
                 {
                                javax.swing.JOptionPane.showMessageDialog(this,"Discount is greater than payable amount." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                jTextField5.requestFocus();
                 }
                 else if(Utility.isDouble((jTextField5.getText())) == true)
                 {
                        if(Utility.isDouble((jTextField7.getText()))==true)
                        {           //if(jComboBox1.getSelectedItem().toString().equals((jLabel25.getText())))
                                    //{
                                        if(save()==true)
                                       { javax.swing.JOptionPane.showMessageDialog(this,"Record updated sucessfully" ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                          this.dispose();
                                       }
                                    /*}
                                    else if(jComboBox1.getSelectedItem().toString().equals((jLabel25.getText()))==false)
                                    {
                                       if(save1()==true)
                                       {jComboBox1.setEnabled(false);
                                           javax.swing.JOptionPane.showMessageDialog(this,"Record updated sucessfully" ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                                          this.dispose();
                                       }
                                    }*/

                                       
                        }
                        else
                        {javax.swing.JOptionPane.showMessageDialog(this,"Error..... Invalid paid amount.","Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                         jTextField7.requestFocus();
                        }

                }
                else
                {javax.swing.JOptionPane.showMessageDialog(this,"Error..... Invalid discount.","Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                 jTextField5.requestFocus();
                }

        }
        else
        {javax.swing.JOptionPane.showMessageDialog(this,"Error..... paid amount and discount does not empty. Minimum  '0' is required.","Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
         jTextField7.requestFocus();
        }
        
       // setPurjaNumber();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String str=javax.swing.JOptionPane.showInputDialog(this, "Please enter Purja no.","Print Purja",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        boolean flag=false;
        if(str!=null || (str.isEmpty()==false))
        {   if(Utility.isInteger(str))
            {
                int purja=Integer.parseInt(str);
                String qry="select distinct purja_number from polish_details";
                String data[][]=Utility.getInformationDD(qry,1);
                for(int i=0;i<data.length;i++)
                {
                    int purjaNumber=Integer.parseInt(data[i][0]);
                    if(purjaNumber==purja)
                    {       flag=true;
                    }

                }
            }
        }
        if(flag==true)
        {
                        printchallan2 pt=new printchallan2(str);
        }
        else
        {
             javax.swing.JOptionPane.showMessageDialog(this,"Error... Please enter vlaid purja number . " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }

        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        // TODO add your handling code here:
      if(evt.getKeyCode()==10)
        {

            save();
        }
//       setPurjaNumber();
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton5KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
                        String str=javax.swing.JOptionPane.showInputDialog(this, "Please enter Purja no.","Print Purja",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        boolean flag=false;
                        if(str!=null || (str.isEmpty()==false))
                        {   if(Utility.isInteger(str))
                            {
                                int purja=Integer.parseInt(str);
                                String qry="select distinct purja_number from polish_details";
                                String data[][]=Utility.getInformationDD(qry,1);
                                for(int i=0;i<data.length;i++)
                                {
                                    int purjaNumber=Integer.parseInt(data[i][0]);
                                    if(purjaNumber==purja)
                                    {       flag=true;
                                    }

                                }
                            }
                        }
                        if(flag==true)
                        {
                                        printchallan2 pt=new printchallan2(str);
                        }
                        else
                        {
                             javax.swing.JOptionPane.showMessageDialog(this,"Error... Please enter vlaid purja number . " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        }

        }
    }//GEN-LAST:event_jButton5KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if((dtm.getRowCount())>=1)
       {
        save();
        String str=jLabel11.getText().trim();
        printchallan2 pt=new printchallan2(str);

       }
        else
       {
               javax.swing.JOptionPane.showMessageDialog(this,"Error... There is no record in the table. " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }

        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            if((dtm.getRowCount())>=1)
              {
                    save();
                    String str=jLabel11.getText().trim();
                    printchallan2 pt=new printchallan2(str);

                   }
                    else
                   {
                           javax.swing.JOptionPane.showMessageDialog(this,"Error... There is no record in the table. " ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    }
             }
    }//GEN-LAST:event_jButton3KeyPressed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jLabel12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel12KeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jLabel12KeyPressed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        calenderDate();
}//GEN-LAST:event_jLabel12MouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jComboBox2.requestFocus();
        }
}//GEN-LAST:event_jTextField1KeyPressed

    private void jComboBox4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox4KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jComboBox5.requestFocus();
        }
}//GEN-LAST:event_jComboBox4KeyPressed

    private void jComboBox5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox5KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jTextField3.requestFocus();
        }
}//GEN-LAST:event_jComboBox5KeyPressed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
        if(jComboBox5.getSelectedItem().equals("Weight"))
        {
            jLabel8.setText("Kg");
        }
        else
        {
            jLabel8.setText(""+jComboBox4.getSelectedItem());
        }
        if(jComboBox5.getSelectedItem().equals("Quantity"))
        {
            jComboBox6.setSelectedItem("Before Polish");
            jComboBox6.setEnabled(false);
        }
        else
        {
            jComboBox6.setEnabled(true);
        }
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox6KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
              jButton1.requestFocus();
        }
    }//GEN-LAST:event_jComboBox6KeyPressed

    private void jTextField6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField6MousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField6MousePressed

    private void jTextField7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField7MousePressed
        // TODO add your handling code here:
        jTextField7.selectAll();
    }//GEN-LAST:event_jTextField7MousePressed

    private void jTextField7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jButton4.requestFocus();
        }

    }//GEN-LAST:event_jTextField7KeyReleased

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        comboCustomerName();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton7KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            comboCustomerName();
        }
    }//GEN-LAST:event_jButton7KeyPressed

    private void jComboBox1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyReleased
        // TODO add your handling code here:
       /* if(evt.getKeyCode()==10)
        {
              String qry="select ac_code from polish_details where purja_number="+(Integer.parseInt(jLabel11.getText()))+"";
        int code=Integer.parseInt(Utility.getSingleValue(qry));
        qry="select ac_name from ac_master where ac_code="+code+"";
        String name=Utility.getSingleValue(qry);
        if((jComboBox1.getSelectedItem()).equals(name)==false)
        {
            int check=javax.swing.JOptionPane.showConfirmDialog(this,"Are you sure to update customer name ?" ,"Confirm Window",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
            if(check==0)
            {
                jComboBox1.setSelectedItem(name);
            }
            else
            {
                String n1=""+jComboBox1.getSelectedItem();
                qry="select ac_code from ac_master where ac_name='"+n1+"'";
                int c1=Integer.parseInt(Utility.getSingleValue(qry));
                qry="update polish_details set ac_code="+c1+" where purja_number="+(Integer.parseInt(jLabel11.getText()))+"";
                Utility.saveInformation(qry);

            }
        }
        }*/
    }//GEN-LAST:event_jComboBox1KeyReleased

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField5KeyTyped

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        // TODO add your handling code here:
        if(Utility.isBlank(jTextField5.getText())==false) {

            if((Utility.isDouble(jTextField5.getText()))) {
                if((Double.valueOf(jTextField5.getText()))>=0) {
                    double payableAmount=(Double.valueOf(jTextField4.getText()));
                    java.math.BigDecimal bd4=new java.math.BigDecimal(payableAmount);
                    payableAmount=Double.valueOf(""+bd4.setScale(0,java.math.BigDecimal.ROUND_HALF_UP));

                    double a=((payableAmount)-(Double.valueOf(jTextField5.getText())));
                    java.math.BigDecimal bd=new java.math.BigDecimal(a);
                    jTextField6.setText(""+bd.setScale(2,5));
                }
            } else {
                if((evt.getKeyCode())==127 || (evt.getKeyCode())==8) {
                } else {

                    javax.swing.JOptionPane.showMessageDialog(this,"Discount is not valid." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    String str=jTextField5.getText().substring(0, jTextField5.getText().length()-1);
                    jTextField5.setText(str);
                }
            }
        } else {
            double payableAmount=(Double.valueOf(jTextField4.getText()));
            java.math.BigDecimal bd4=new java.math.BigDecimal(payableAmount);
            payableAmount=Double.valueOf(""+bd4.setScale(0,java.math.BigDecimal.ROUND_HALF_UP));
            java.math.BigDecimal bd=new java.math.BigDecimal(payableAmount);
            jTextField6.setText(""+bd.setScale(2,5));
        }
        //to check does discount is greater than payable amount or not
        if(Double.valueOf(jTextField6.getText())<0) {
            javax.swing.JOptionPane.showMessageDialog(this,"Error..... Discount is greater than payable amount. ." ,"Message Box",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            jTextField5.setText("0");
            jTextField5.requestFocus();
            jTextField6.setText(""+(Double.valueOf(jTextField4.getText())-(Double.valueOf(jTextField4.getText()))));

        }

    }//GEN-LAST:event_jTextField5KeyReleased

    private void jTextField5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField5FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5FocusGained

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MousePressed
        // TODO add your handling code here:
        jTextField5.selectAll();
}//GEN-LAST:event_jTextField5MousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables

     boolean firsttime1=false;
    int purjano;
    class printchallan2
    {

                PrintPanel2 canvas;
	        java.awt.print.PageFormat pageFormat;

        	public printchallan2(String str)
        	{
                    purjano=Integer.parseInt(str);
                    System.out.println("print constructor");

                                canvas=new PrintPanel2();
                                java.awt.print.PrinterJob printJob=java.awt.print.PrinterJob.getPrinterJob();
                                double width=8.27 * 72;
                                double height=(11.69 * 72);

                                java.awt.print.Paper paper=new java.awt.print.Paper();

                                paper.setSize(width,height);

                                java.awt.print.PageFormat page=new java.awt.print.PageFormat();
                                page.setOrientation(java.awt.print.PageFormat.PORTRAIT);
                                paper.setImageableArea(5,10,paper.getWidth(),paper.getHeight());
                                page.setOrientation(java.awt.print.PageFormat.PORTRAIT);
                                page.setPaper(paper);
                                pageFormat=printJob.defaultPage(page);
                                pageFormat.setPaper(paper);
                                pageFormat.setOrientation(java.awt.print.PageFormat.PORTRAIT);
                                printJob.setPrintable(canvas,pageFormat);

                                try
                                {
					//no of pages
                                        printJob.print();
                                }
                                catch(Exception exception)
                                {
                                        javax.swing.JOptionPane.showMessageDialog(null,"error2="+exception);
                                }
                                //jButton5.setEnabled(true);
        		    }
	}//print class


    class PrintPanel2 extends javax.swing.JPanel implements java.awt.print.Printable
	{

        int page=100;
		java.awt.font.TextLayout layout;
		java.awt.Font f,f1,f2,f3,f4,f5,f6;
		java.awt.Graphics2D g2;
		int row=0;
		java.awt.font.FontRenderContext context;


        public PrintPanel2()
        {
                //ChallanNo=JOptionPane.showInputDialog(null,"Enter Challan Number:");
        }
        public void paintComponent(java.awt.Graphics g)
        {
                super.paintComponent(g);
                System.out.println("BPPRINT");
                java.awt.Graphics2D g2=(java.awt.Graphics2D)g;
                drawPage(g2);

        }

        public int print(java.awt.Graphics g,java.awt.print.PageFormat pf,int page) throws java.awt.print.PrinterException
        {
                if(page>=1)
                return java.awt.print.Printable.NO_SUCH_PAGE;
                java.awt.Graphics2D g2=(java.awt.Graphics2D)g;
                g2.setPaint(java.awt.Color.black);
                g2.translate(pf.getImageableX(),pf.getImageableY());

                System.out.println("W1="+pf.getImageableWidth()+"H1="+pf.getImageableHeight());

                //if(printflag==5)
                //{
                	drawPage(g2);
                //}

                return java.awt.print.Printable.PAGE_EXISTS;
        }
        public void drawPage(java.awt.Graphics2D g2)
        {
            this.g2=g2;
	    System.out.println("Hellospecial"+firsttime1);
            //System.out.println("inside draw page..."+totalamt);
            context=g2.getFontRenderContext();
            f1=new java.awt.Font("Times New Roman",java.awt.Font.BOLD,10);
            f2=new java.awt.Font("Arial",java.awt.Font.PLAIN,8);
            f3=new java.awt.Font("Arial",java.awt.Font.PLAIN,30);
            f4=new java.awt.Font("Arial",java.awt.Font.BOLD,10);
            f5=new java.awt.Font("Verdana",java.awt.Font.PLAIN,10);
            f6=new java.awt.Font("Verdana",java.awt.Font.BOLD,10);
            java.awt.Font f7=new java.awt.Font("Arial",java.awt.Font.BOLD,13);
            java.awt.Font f8=new java.awt.Font("Times New Roman",java.awt.Font.BOLD,25);
            java.awt.Font f9=new java.awt.Font("Arial narrow",java.awt.Font.PLAIN,2);
            java.awt.FontMetrics fm;
            java.awt.geom.GeneralPath clipShape=new java.awt.geom.GeneralPath();
            String str=" fdfg dfg dfg";
            String str1="d fgf dgdfg df";
            g2.setFont(f1);
            layout=new java.awt.font.TextLayout(str,f1,context);
            java.awt.geom.AffineTransform transform=java.awt.geom.AffineTransform.getTranslateInstance(10,20);

            g2.setFont(f2);
            fm=g2.getFontMetrics();

			if(firsttime1==false)
			{
				firsttime1=true;
            		}
                        else
                        {   firsttime1=false;
                            int top=20;
                            int i=0;
                            int j=0;
                            int z=0;
                            double receiveAmount=0;
                            double discount=0;
                            double payableAmount=0;
                            String date="";
                            int pur=purjano;
                            String qry="Select rec_date from polish_details where purja_number="+pur+"";
                            String dd=Utility.getSingleValue(qry);
                            String d[]=dd.split(" ");
                            String d1[]=d[0].split("-");
                            date=d1[2]+"-"+d1[1]+"-"+d1[0];
                            g2.setFont(f6);
                            fm=g2.getFontMetrics();
                            String temp="Receiving Dt : "+date;
                            g2.drawString(temp,15,top+10);
                            qry="Select ac_code from polish_details where purja_number="+pur+"";
                            int cid=Integer.parseInt(Utility.getSingleValue(qry));
                            qry="Select ac_name from ac_master where ac_code="+cid+"";
                            String accountName=""+(Utility.getSingleValue(qry));
                            temp="Customer Name : "+accountName;
                            g2.drawString(temp,200,top+10);
                            temp="Purja Number :"+purjano;
                            g2.drawString(temp,465,top+10);
                            top=top+25;
                            g2.drawLine(15, top, 575, top);
                            //for heading
                            top=top+15;
                            temp="S.No       Weight     Item Name                    Polish Type      Quantity              Rate                  Amount";
                            g2.drawString(temp,15,top);
                            top=top+10;
                            g2.drawLine(15, top, 575, top);
                            //End
                            //for data printing
                            g2.setFont(f5);
                            fm=g2.getFontMetrics();
                            qry="Select * from polish_details where purja_number="+pur+"";
                            String load[][]=Utility.getInformationDD(qry,17);
                            double total=0;
                            double totamt=0;
                            String weight="";
                            String itemName="";
                            String polishType="";
                            String quantity="";
                            String unit="";
                            String rate="";
                            String rateUnit="";
                            String amount="";
                            String temp1="";
                            String temp2="";
                            String temp3="";
                            String temp4="";
                            String temp5="";
                            String temp6="";
                            String temp7="";
                            String temp8="";
                            String temp9="";
                            String temp10="";
                            String temp11="";
                            String temp12="";

                            top=top+25;
                            if(load.length>0)
                            {
                                    for(i=0,j=(-10);i<load.length;i++,j=j+15)
                                    {
                                        weight=load[i][7];
                                        itemName=load[i][3];
                                        polishType=load[i][4];
                                        quantity=load[i][5];
                                        unit=load[i][6];
                                        rate=load[i][10];
                                        rateUnit=load[i][11];
                                        amount=load[i][13];
                                        total=total+Double.valueOf(amount);
                                        temp4=(i+1)+".";
                                        z=fm.stringWidth(temp4);
                                        java.math.BigDecimal bd=new java.math.BigDecimal(weight);
                                        temp5=""+bd.setScale(3,5);
                                        temp6=itemName;
                                        temp7=polishType;
                                        temp8=quantity;
                                        temp9=unit;
                                        bd=new java.math.BigDecimal(rate);
                                        temp10=""+bd.setScale(2,5);
                                        temp11=rateUnit;
                                        bd=new java.math.BigDecimal(amount);
                                        temp12=""+bd.setScale(2,5);
                                        g2.drawString(temp4,40-z,top+j);
                                        //to display weight in bold if rate*weight
                                        if(rateUnit.equals("Kg"))
                                        {           if((load[i][12]).equals("Before Polish"))
                                                    {
                                                        g2.setFont(f6);
                                                    }
                                                    z=fm.stringWidth(temp5);
                                                    g2.drawString(temp5,100-z,top+j);
                                                    g2.setFont(f5);
                                        }
                                        else
                                        {
                                                    z=fm.stringWidth(temp5);
                                                    g2.drawString(temp5,100-z,top+j);
                                        }
                                        g2.drawString(temp6,120,top+j);
                                        g2.drawString(temp7,250,top+j);
                                        if(rateUnit.equals("Kg")==false)
                                        {
                                                    g2.setFont(f6);
                                                    z=fm.stringWidth(temp8);
                                                    g2.drawString((temp8+" "),350-z,top+j);
                                                    g2.setFont(f5);
                                        }
                                        else
                                        {
                                                    z=fm.stringWidth(temp8);
                                                    g2.drawString((temp8+" "),350-z,top+j);
                                        }
                                        //b=fm.stringWidth(temp9);
                                        g2.drawString(temp9,356,top+j);
                                        z=fm.stringWidth(temp10);
                                        g2.drawString(temp10+" / ",450-z,top+j);
                                        //b=fm.stringWidth(temp11);
                                        g2.drawString(temp11,460,top+j);
                                        int a=fm.stringWidth(temp12);
                                        g2.drawString(temp12,570-a,top+j);
                                        //Start Coading for total balance(Down ward)

                                        //g2.drawString("Hiii",100,840);

                                }
                            }
                            int down=312;
                            str="select discount from polish_details where purja_number="+purjano+"";
                            discount=Double.valueOf(Utility.getSingleValue(str));
                            str="select payable_amount from polish_details where purja_number="+purjano+"";
                            payableAmount=Double.valueOf(Utility.getSingleValue(str));
                            //To find roundingvalue
                            java.math.BigDecimal bd4=new java.math.BigDecimal(total);
                            double aa=Double.valueOf(""+bd4.setScale(0,java.math.BigDecimal.ROUND_HALF_UP));
                            Double rounding=(aa-total);

                                if(total>0)
                                {
                                                if(discount==0 && rounding==0)
                                                {

                                                }
                                                else if(rounding==0)
                                                {
                                                                     //for discount
                                                                    temp="Discount :";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),down );
                                                                    java.math.BigDecimal bd=new java.math.BigDecimal(discount);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,down );

                                                                    //for total
                                                                    temp="Total Amount : ";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),(down-15) );
                                                                    bd=new java.math.BigDecimal(total);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,(down-15));


                                                }
                                                else if(discount==0)
                                                {
                                                                    temp="Rounding : ";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),down );
                                                                    java.math.BigDecimal bd=new java.math.BigDecimal(rounding);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,down );

                                                                    //for total
                                                                    temp="Total Amount : ";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),(down-15) );
                                                                    bd=new java.math.BigDecimal(total);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,(down-15));
                                                                    //for Rounding
                                                 }
                                                 else
                                                {
                                                                    //for discount
                                                                    temp="Discount :";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),down );
                                                                    java.math.BigDecimal bd=new java.math.BigDecimal(discount);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,down );
                                                                    //rounding
                                                                    temp="Rounding : ";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),(down-15) );
                                                                    bd=new java.math.BigDecimal(rounding);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,(down-15) );

                                                                    //for total
                                                                    temp="Total Amount : ";
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,(500-z),(down-30) );
                                                                    bd=new java.math.BigDecimal(total);
                                                                    temp=""+bd.setScale(2,5);
                                                                    z=fm.stringWidth(temp);
                                                                    g2.drawString(temp,570-z,(down-30));

                                                 }
                                  }
                            g2.drawLine(400, 320, 575,320);

                            //for net amount
                            if(discount==0 && rounding==0)
                            {
                                    temp="Total Amount : ";
                                     z=fm.stringWidth(temp);
                                    g2.drawString(temp,(500-z),335 );

                            }
                            else
                            {
                                    temp="Net Amount : ";
                                    z=fm.stringWidth(temp);
                                    g2.drawString(temp,(500-z),335 );
                            }

                            //str="select payable_amount from polish_details where purja_number="+purjano+"";
                            //payableAmount=Double.valueOf(Utility.getSingleValue(str));
                                    g2.setFont(f6);
                                    java.math.BigDecimal bd=new java.math.BigDecimal(payableAmount);
                                    temp=""+bd.setScale(2,5);
                                    z=fm.stringWidth(temp);
                                    g2.drawString(temp,565-z,335 );
                                    g2.setFont(f5);
                            g2.drawLine(400, 340, 575,340);
                            //for received amount
                            temp="Received Amount : ";
                            z=fm.stringWidth(temp);
                            g2.drawString(temp,(500-z),355);

                            str="select voucher_amount from receive_voucher where purja_number="+purjano+" and voucher_type='Receive'";
                            String paidAmount=""+Utility.getSingleValue(str);
                           if(paidAmount==null || paidAmount.isEmpty())
                            {        paidAmount="0";
                                    receiveAmount=0;
                                    bd=new java.math.BigDecimal(receiveAmount);
                                    temp=""+bd.setScale(2,5);
                                    z=fm.stringWidth(temp);
                                    g2.drawString(temp,570-z,355 );
                            }
                            else
                            {
                                    receiveAmount=Double.valueOf(paidAmount);
                                    bd=new java.math.BigDecimal(receiveAmount);
                                    temp=""+bd.setScale(2,5);
                                    z=fm.stringWidth(temp);
                                    g2.drawString(temp,570-z,355 );
                            }
                            g2.drawLine(15, 365, 575,365);
                            //for total items
                            fm=g2.getFontMetrics();
                            temp="Total Items : "+(i);
                            g2.drawString(temp,20,380);

                            //for Balance Account

                            temp="Balance Amount : ";
                            z=fm.stringWidth(temp);
                            g2.drawString(temp,(500-z),380 );
                            double balanceAmount=(payableAmount-receiveAmount);
                            bd=new java.math.BigDecimal(balanceAmount);
                            temp=""+bd.setScale(2,5);
                            z=fm.stringWidth(temp);
                            g2.setFont(f6);
                            g2.drawString(temp,565-z,380 );
                            g2.drawLine(15, (385), 575, (385));



                        }
        }
    }
}
