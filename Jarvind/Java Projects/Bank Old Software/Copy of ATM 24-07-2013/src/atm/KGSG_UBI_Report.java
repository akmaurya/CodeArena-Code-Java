/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * KGSG_UBI_Report.java
 *
 * Created on Jul 22, 2013, 2:33:27 PM
 */

package atm;

/**
 *
 * @author welcome
 */
public class KGSG_UBI_Report extends javax.swing.JInternalFrame {
javax.swing.table.DefaultTableModel dtm;
    /** Creates new form KGSG_UBI_Report */
    public KGSG_UBI_Report(String paymentno) {
        initComponents();
        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();

        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        String heading[]={"Sr.No","Date","Txn ID","Card No/Record No","Debit","Credit","Balance"," ","Date","Txn ID","Card No/Record No","Debit","Credit","Balance","Traced(Y/N)","Comment","Date","Reversed to A/c","Txn ID"};
        dtm=new javax.swing.table.DefaultTableModel(heading,0);

        jTable1.setModel(dtm);
        jTable1.setRowHeight(25);
        javax.swing.table.TableColumn column;

//jTable1.getTableHeader().setFont(new Font("Vardana", Font.BOLD, 12));
        column=jTable1.getColumn("Sr.No");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(45);
        column=jTable1.getColumn("Txn ID");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(50);
        column=jTable1.getColumn("Date");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(70);
        column=jTable1.getColumn("Card No/Record No");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(200);
        column=jTable1.getColumn("Debit");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(80);
        column=jTable1.getColumn("Credit");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(80);
        column=jTable1.getColumn("Balance");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(90);
        column=jTable1.getColumn("Traced(Y/N)");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(60);
        column=jTable1.getColumn("Comment");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(80);
        column=jTable1.getColumn("Reversed to A/c");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(50);
        column=jTable1.getColumn("Txn ID");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(60);
        column=jTable1.getColumn(" ");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(2);
        table(paymentno);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("UBI And KGSG Matching Report");
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 20, 1000, 620);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables


    public void table(String paymentno)
    {
        try
        {
            interfaceATM object1=null;
            try
            {
		object1=(interfaceATM)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception e)
            {
		System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
                getIPaddress.changeIP();
		try
		{
			object1=(interfaceATM)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception ex)
		{
			System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
		}
            }
            String qry="select tran_date,tran_id,particular,tran_debit_amt,tran_credit_amt,balanceamt from ubi_bill_of_kgsg_cards where ubi_payment_no="+Integer.parseInt(paymentno)+"";
            System.out.println(qry);
            String load[][]=object1.getInformationDD(qry, 6);
            System.out.println(load.length);

            String upart[]=load[0][2].split("/");
            String uparticular=upart[0]+"/"+upart[1].substring(3, upart[1].length())+"/";
            qry="select entry_no from kgsg_n_ubi where (particular like '"+uparticular+"%' )";
            System.out.println(qry);
            String start=object1.getSingleValue(qry);


            upart=load[load.length-1][2].split("/");
            uparticular=upart[0]+"/"+upart[1].substring(3, upart[1].length())+"/";
            qry="select entry_no from kgsg_n_ubi where (particular like '"+uparticular+"%' and recon_status<>0 )";
            System.out.println(qry);
            String last=object1.getSingleValue(qry);
            if(last.equalsIgnoreCase(""))
            {
                last=start;
            }
            System.out.println("Start="+start+"   last="+last);
            qry="select tran_date,tran_id,particular,tran_debit_amt,tran_credit_amt,balance_amt from kgsg_n_ubi where entry_no<"+Integer.parseInt(last)+" and entry_no>="+Integer.parseInt(start)+" ";
            System.out.println(qry);
            String load1[][]=object1.getInformationDD(qry, 6);
            System.out.println("load1.length == "+load1.length);
            
            String arr[]=null;
            //int total=0;
            int flag=0;
            dtm.setRowCount(0);
            String  dt[]=null;

            if(load.length>0 && load1.length==0)
            {
                 System.out.println("load.length>0 && load1.length==0 load.length ="+load.length);
                 arr=new String[15];
                for(int i=0;i<load.length;i++)
                {
                    System.out.println("in load part start ");
                                arr[0]=""+(dtm.getRowCount()+1);
                                dt=load[i][0].split("-");
                                arr[1]=dt[2]+"-"+dt[1]+"-"+dt[0];
                                arr[2]=load[i][1];
                                arr[3]=load[i][2];
                                arr[4]=load[i][3];
                                arr[5]=load[i][4];
                                arr[6]=load[i][5];
                                System.out.println("load part completed ");

                                arr[8]="";
                                arr[9]="";
                                arr[10]="";
                                arr[11]="";
                                arr[12]="";
                                arr[13]="";
                                dtm.addRow(arr);
                }
                System.out.println("records are inserted ");
            }

            if(load.length > 0 && load1.length > 0)
            {
                //System.out.println("hello111111111111111111111111111");
                arr=new String[15];
                System.out.println("load.length="+load.length);
                System.out.println("load1.length="+load1.length);
                String uparticular1="";
                
                /*for(int i=0;i<load.length;i++)
                {
                    upart=load[i][2].split("/");
                    uparticular=upart[0]+"/"+upart[1].substring(3, upart[1].length())+"/";

                    arr[0]=""+(dtm.getRowCount()+1);
                    dt=load[i][0].split("-");
                    arr[1]=dt[2]+"-"+dt[1]+"-"+dt[0];
                    arr[2]=load[i][1];
                    arr[3]=load[i][2];
                    arr[4]=load[i][3];
                    arr[5]=load[i][4];
                    arr[6]=load[i][5];

                    for(int j=0;j<load1.length;j++)
                    {
                        upart=load1[j][2].split("/");
                        uparticular1=upart[0]+"/"+upart[1]+"/";
                        //System.out.println("uparticular ="+uparticular+"   uparticular1"+uparticular1);
                        if(uparticular.equalsIgnoreCase(uparticular1))
                        {
                            System.out.println("uparticular ="+uparticular+"   uparticular1"+uparticular1);
                            

                            dt=load1[j][0].split("-");
                            arr[8]=dt[2]+"-"+dt[1]+"-"+dt[0];
                            arr[9]=load1[j][1];
                            arr[10]=load1[j][2];
                            arr[11]=load1[j][3];
                            arr[12]=load1[j][4];
                            arr[13]=load1[j][5];
                            break;
                        }
                        else
                        {
                            //System.out.println("uparticular ="+uparticular+"   uparticular1"+uparticular1);
                            arr[8]="";
                            arr[9]="";
                            arr[10]="";
                            arr[11]="";
                            arr[12]="";
                            arr[13]="";
                            //dtm.addRow(arr);
                        }
                        System.out.println("out side of condilion "+"uparticular ="+uparticular+"   uparticular1"+uparticular1);
                        dtm.addRow(arr);
                                                  
                    }
                }*/
                for(int i=0,j=0;i<load.length && j<load1.length;i++,j++)
                {


                    arr[0]=""+(dtm.getRowCount()+1);
                    dt=load[i][0].split("-");
                    arr[1]=dt[2]+"-"+dt[1]+"-"+dt[0];
                    arr[2]=load[i][1];
                    arr[3]=load[i][2];
                    arr[4]=load[i][3];
                    arr[5]=load[i][4];
                    arr[6]=load[i][5];


                    dt=load1[j][0].split("-");
                    arr[8]=dt[2]+"-"+dt[1]+"-"+dt[0];
                    arr[9]=load1[j][1];
                    arr[10]=load1[j][2];
                    arr[11]=load1[j][3];
                    arr[12]=load1[j][4];
                    arr[13]=load1[j][5];
                    upart=load[i][2].split("/");
                    uparticular=upart[0]+"/"+upart[1].substring(3, upart[1].length())+"/";
                    upart=load1[j][2].split("/");
                    uparticular1=upart[0]+"/"+upart[1]+"/";
                    System.out.println(uparticular+"     uparticular1 = "+uparticular1);
                    if(uparticular.equalsIgnoreCase(uparticular1))
                    {
                        dtm.addRow(arr);
                        /*upart=load[i+1][2].split("/");
                        uparticular=upart[0]+"/"+upart[1].substring(3, upart[1].length())+"/";
                        upart=load1[j+1][2].split("/");
                        uparticular1=upart[0]+"/"+upart[1]+"/";
                        if(!uparticular1.equalsIgnoreCase(uparticular))
                        {
                            flag=1;
                        }*/
                    }
                    else if(!(uparticular.equalsIgnoreCase(uparticular1)) )
                    {
                        System.out.println("uparticular = "+uparticular);
                        qry="select tran_date,tran_id,particular,tran_debit_amt,tran_credit_amt,balance_amt from kgsg_n_ubi where (particular like '"+uparticular+"%' ) and entry_no<="+Integer.parseInt(last)+" and entry_no>="+Integer.parseInt(start)+"";
                        String lo[][]=object1.getInformationDD(qry, 6);
                        System.out.println("lo.length = "+lo.length);
                        if(lo.length>0)
                        {
                            for(int k=0;k<1;k++)
                            {
                                arr[0]=""+(dtm.getRowCount()+1);
                                dt=load[i][0].split("-");
                                arr[1]=dt[2]+"-"+dt[1]+"-"+dt[0];
                                arr[2]=load[i][1];
                                arr[3]=load[i][2];
                                arr[4]=load[i][3];
                                arr[5]=load[i][4];
                                arr[6]=load[i][5];

                                dt=lo[k][0].split("-");
                                arr[8]=dt[2]+"-"+dt[1]+"-"+dt[0];
                                arr[9]=lo[k][1];
                                arr[10]=lo[k][2];
                                arr[11]=lo[k][3];
                                arr[12]=lo[k][4];
                                arr[13]=lo[k][5];
                                dtm.addRow(arr);
                            }
                        }
                        else
                        {
                            arr[0]=""+(dtm.getRowCount()+1);
                                dt=load[i][0].split("-");
                                arr[1]=dt[2]+"-"+dt[1]+"-"+dt[0];
                                arr[2]=load[i][1];
                                arr[3]=load[i][2];
                                arr[4]=load[i][3];
                                arr[5]=load[i][4];
                                arr[6]=load[i][5];


                                arr[8]="";
                                arr[9]="";
                                arr[10]="";
                                arr[11]="";
                                arr[12]="";
                                arr[13]="";
                                dtm.addRow(arr);
                        }
                        
                    }
                    /*else if(!(uparticular1.equalsIgnoreCase(uparticular)) )
                    {
                        arr[0]=""+(dtm.getRowCount()+1);
                        arr[1]="";
                        arr[2]="";
                        arr[3]="";
                        arr[4]="";
                        arr[5]="";
                        arr[6]="";
                        dt=load1[j][0].split("-");
                        arr[8]=dt[2]+"-"+dt[1]+"-"+dt[0];
                        arr[9]=load1[j][1];
                        arr[10]=load1[j][2];
                        arr[11]=load1[j][3];
                        arr[12]=load1[j][4];
                        arr[13]=load1[j][5];
                    }*/
                        
                    
                    //dtm.addRow(arr);
                    System.out.println("hello   "+i);
                }

            }
            //else
            {
                System.out.println("in else load.length="+load.length+"   load1.length="+load1.length);
                if (load1.length > load.length)
            {
                System.out.println("load1.length > load.length");
                qry="select tran_date,tran_id,particular,tran_debit_amt,tran_credit_amt,balance_amt from kgsg_n_ubi where entry_no<="+Integer.parseInt(last)+" and entry_no>="+Integer.parseInt(start)+" and recon_status<>"+2+"  ";
                System.out.println(qry);
                String lo[][]=object1.getInformationDD(qry, 6);
                System.out.println("lo.length ===== "+lo.length);
                
                for(int i=0;i<lo.length;i++)
                {
                    arr[0]=""+(dtm.getRowCount()+1);
                        arr[1]="";
                        arr[2]="";
                        arr[3]="";
                        arr[4]="";
                        arr[5]="";
                        arr[6]="";
                        dt=load1[i][0].split("-");
                        arr[8]=dt[2]+"-"+dt[1]+"-"+dt[0];
                        arr[9]=load1[i][1];
                        arr[10]=load1[i][2];
                        arr[11]=load1[i][3];
                        arr[12]=load1[i][4];
                        arr[13]=load1[i][5];
                        dtm.addRow(arr);
                }
            }
            }
        }
        catch(Exception ae)
        {
            System.out.println("Eror in table method"+ae);
        }
    }
}
