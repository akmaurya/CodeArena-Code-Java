/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * KGSG_ReconcilewithUbi.java
 *
 * Created on Jul 12, 2013, 6:07:06 PM
 */

package atm;

/**
 *
 * @author welcome
 */
public class KGSG_ReconcilewithUbi extends javax.swing.JInternalFrame {
javax.swing.table.DefaultTableModel dtm;
    /** Creates new form KGSG_ReconcilewithUbi */
    public KGSG_ReconcilewithUbi() {
        initComponents();
        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();

        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        String heading[]={"Sr. No","Date","Trans ID","Particular","Debit","Credit","Balance Amount","Status"};
        dtm=new javax.swing.table.DefaultTableModel(heading,0);

        jTable1.setModel(dtm);
        jTable1.setRowHeight(25);
        javax.swing.table.TableColumn column;
//jTable1.getTableHeader().setFont(new Font("Vardana", Font.BOLD, 12));
        column=jTable1.getColumn("Sr. No");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(50);
        column=jTable1.getColumn("Trans ID");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(90);
        column=jTable1.getColumn("Date");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(90);
        column=jTable1.getColumn("Particular");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(270);
        column=jTable1.getColumn("Debit");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(97);
        column=jTable1.getColumn("Credit");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Balance Amount");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(120);
        column=jTable1.getColumn("Status");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(100);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(186, 221, 221));
        setClosable(true);
        setIconifiable(true);
        setTitle("Searching Records");
        getContentPane().setLayout(null);

        jButton3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(153, 51, 0));
        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(640, 10, 290, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 50, 950, 2);

        jTable1.setFont(new java.awt.Font("Verdana", 1, 12));
        jTable1.setForeground(new java.awt.Color(78, 75, 71));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowHeight(20);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(5, 60, 930, 590);

        jTextField1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(153, 51, 0));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(10, 10, 310, 30);

        jButton1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(153, 51, 0));
        jButton1.setText("Done");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(360, 10, 270, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            this.dispose();
        }
}//GEN-LAST:event_jButton3KeyPressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_jTable1KeyPressed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        class task1 extends Thread {
            public void run() {
                try {
                    table1();
                    Thread.sleep(1000);
                } catch(Exception ex) {
                    System.out.println("error..."+ex);
                }

            }
        }
        task1 t1=new task1();
        t1.start();
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        class task1 extends Thread {
            public void run() {
                try {
                    table1();
                    Thread.sleep(1000);
                } catch(Exception ex) {
                    System.out.println("error..."+ex);
                }

            }
        }
        task1 t1=new task1();
        t1.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            class task1 extends Thread {
            public void run() {
                try {
                    table1();
                    Thread.sleep(1000);
                } catch(Exception ex) {
                    System.out.println("error..."+ex);
                }

            }
        }
        task1 t1=new task1();
        t1.start();
        }
    }//GEN-LAST:event_jButton1KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
private boolean table()
{
    String qry="";
        try
        {
            interfaceATM object1=null;
            try
            {
		object1=(interfaceATM)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception e)
            {
		System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
                getIPaddress.changeIP();
		try
		{
			object1=(interfaceATM)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception ex)
		{
			System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
		}
            }
            //double total=0.0;
            java.math.BigDecimal bd=null;
            qry="Select tran_date,tran_id,particular,tran_debit_amt,tran_credit_amt,balance_amt,recon_status from kgsg_n_ubi where recon_status=0 and recon_status<>"+10+" and recon_status<>"+20+" ";
            System.out.println(qry);
            String load[][]=object1.getInformationDD(qry,7);
            System.out.println(load.length);
            String arr[]=null;
            //int total=0;
            dtm.setRowCount(0);
            if(load.length>0)
            {
                //System.out.println("hello111111111111111111111111111");
                arr=new String[8];
                for(int i=0;i<load.length;i++)
                {


                    arr[0]=""+(dtm.getRowCount()+1);
                    String dt[]=load[i][0].split("-");
                    String date=dt[2]+"-"+dt[1]+"-"+dt[0];
                    arr[1]=date;
                    arr[2]=load[i][1];
                    arr[3]=load[i][2];
                    arr[4]=load[i][3];
                    arr[5]=load[i][4];
                    arr[6]=load[i][5];
                    String st=load[i][6];
                    if(Integer.parseInt(st)==0)
                    {
                        st="Not Reconcile";

                    }
                    else if(Integer.parseInt(st) == 2)
                    {
                        st="Reconcile";
                    }
                    arr[7]=st;

                    dtm.addRow(arr);
                    System.out.println("hello   "+i);
                }

            }
            return true;
        }
        catch(Exception ae)
        {
            System.out.println("Error in Table method...."+ae);
        }
        return true;

}

private boolean table1()
{
    String qry="";
        try
        {
            interfaceATM object1=null;
            try
            {
		object1=(interfaceATM)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception e)
            {
		System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
                getIPaddress.changeIP();
		try
		{
			object1=(interfaceATM)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception ex)
		{
			System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
		}
            }
            //double total=0.0;
            java.math.BigDecimal bd=null;
            qry="Select tran_date,tran_id,particular,tran_debit_amt,tran_credit_amt,balance_amt,recon_status from kgsg_n_ubi where recon_status<>"+10+" and recon_status<>"+20+" and (particular like '%"+jTextField1.getText()+"%' )";
            System.out.println(qry);
            String load[][]=object1.getInformationDD(qry,7);
            System.out.println(load.length);
            String arr[]=null;
            //int total=0;
            dtm.setRowCount(0);
            if(load.length>0)
            {
                //System.out.println("hello111111111111111111111111111");
                arr=new String[8];
                for(int i=0;i<load.length;i++)
                {


                    arr[0]=""+(dtm.getRowCount()+1);
                    String dt[]=load[i][0].split("-");
                    arr[1]=dt[2]+"-"+dt[1]+"-"+dt[0];
                    arr[2]=load[i][1];
                    arr[3]=load[i][2];
                    arr[4]=load[i][3];
                    arr[5]=load[i][4];
                    arr[6]=load[i][5];
                    String st=load[i][6];
                    if(Integer.parseInt(st)==0)
                    {
                        st="Not Reconcile";
                        
                    }
                    else if(Integer.parseInt(st) == 2)
                    {
                        st="Reconcile";
                    }
                    arr[7]=st;
                    dtm.addRow(arr);
                    System.out.println("hello   "+i);
                }
                //javax.swing.tablerowrenderer
            }
            return true;
        }
        catch(Exception ae)
        {
            System.out.println("Eror in Save Information111....."+ae);
        }
        return true;

}


}
