/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ubi_account_statement.java
 *
 * Created on May 13, 2013, 5:14:23 AM
 */

package atm;

/**
 *
 * @author user2
 */
public class ubi_account_statement extends javax.swing.JInternalFrame {

    /** Creates new form ubi_account_statement */
    public ubi_account_statement() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(149, 219, 219));
        setClosable(true);
        setIconifiable(true);
        setTitle("ACCOUNT STATEMENT Of UBI Bank");
        getContentPane().setLayout(null);

        jButton1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 51));
        jButton1.setText("Select File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(40, 90, 270, 27);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14));
        jLabel1.setForeground(new java.awt.Color(102, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Select UBI Account Statement ( CD )  File");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 30, 350, 30);

        jButton2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(102, 0, 51));
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(40, 130, 270, 27);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser jfc=new javax.swing.JFileChooser();
        jfc.showOpenDialog(this);
        //System.out.println(jfc.getSelectedFile().getAbsoluteFile());
        readfile(jfc.getSelectedFile().getAbsoluteFile().toString());
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            javax.swing.JFileChooser jfc=new javax.swing.JFileChooser();
        jfc.showOpenDialog(this);
        //System.out.println(jfc.getSelectedFile().getAbsoluteFile());
        readfile(jfc.getSelectedFile().getAbsoluteFile().toString());
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
private boolean readfile(String filename)
    {
        try
        {
            jButton1.setEnabled(false);
            //connect with server
            //-----------------------
            interfaceATM object1=null;
            try
            {
		object1=(interfaceATM)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception e)
            {
		System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
                getIPaddress.changeIP();
		try
		{
			object1=(interfaceATM)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception ex)
		{
			System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
		}
            }
            String check_string="";
            int position=-1;
            /*String query="select date from kgsg_n_ubi order by entry_no desc";
            String last_tran_date=object1.getSingleValue(query);
            query="select tran_id from kgsg_n_ubi order by entry_no desc";
            String last_tran_id=object1.getSingleValue(query);
            //System.out.println("last dt="+last_tran_date);
            //System.out.println("last id="+last_tran_id);
            String check_string="";
            int position=-1;
            if(last_tran_id.equals("")==false && last_tran_date.equals("")==false)
            {
                last_tran_date=last_tran_date.substring(8,10)+"-"+last_tran_date.substring(5,7)+"-"+last_tran_date.substring(0,4);
                check_string =" "+last_tran_date+"   "+last_tran_id;
                position=find(filename, check_string);
                //System.out.println("position find="+position);
            }*/
            String wholedata="";
            String line=null;
            String dashline="------------------------------------------------------------------------------------------------------------------------------------";
            String blankline="";
            boolean flag=false;
            int countline=0;
            String trandate="",tranid="";

            java.io.RandomAccessFile raf=new java.io.RandomAccessFile(filename, "r");

            if(position>=0)
                if(raf!=null)
                    raf.seek(position);

            while(raf.length()>raf.getFilePointer())
            {
                line=raf.readLine();
                if((line.length()>=58))
                {
                    //System.out.println(line.substring(0, 10));
                    //if(line.substring(45, 49).equals("4000"))
                    if(line.substring(0, 10).split("-").length==3)
                    {
                        wholedata=wholedata+line+"\n";
                        System.out.println(line);
                        countline++;
                    }
                    
                }
                /*if(line.indexOf("  Date")==0)
                {
                    line=raf.readLine();
                    if(line.equals(dashline))
                    {
                        line=raf.readLine();
                        flag=true;
                    }
                }

                if (line.equals(blankline))
                {
                    line=raf.readLine();
                    if(line.equals(dashline))
                        flag=false;
                }

                if (flag)
                {

                    wholedata=wholedata+line+"\n";
                    //System.out.println(line);
                    countline++;
                }*/
            }
            //System.out.println("total line read="+countline);
            //if(last_tran_id.equals("")==false && last_tran_date.equals("")==false)
            if(position>=0)
            {
                //last_tran_date=last_tran_date.substring(8,10)+"-"+last_tran_date.substring(5,7)+"-"+last_tran_date.substring(0,4);
                //String check_string =" "+last_tran_date+"   "+last_tran_id;
                //System.out.println("check_string="+check_string);
                //System.out.println(wholedata.indexOf(check_string));
                if(wholedata.indexOf(check_string)>=0)
                {
                    //System.out.println("ok");
                    wholedata=wholedata.substring(wholedata.indexOf(check_string),wholedata.length());
                    wholedata=wholedata.substring(wholedata.indexOf("\n")+1,wholedata.length());
                    //System.out.println("data="+wholedata);
                }
            }
            boolean response=object1.ubi_account_statement(wholedata);//.ubi_account_statement(wholedata);
            if(response==true)
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Congratulation! Information updated successfully.","Information",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jButton1.setEnabled(true);
            }
            else
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Sorry! Updation process terminated due to any reason.\nSo try again please.","Error Information",javax.swing.JOptionPane.ERROR_MESSAGE);
                jButton1.setEnabled(true);
            }

        }
        catch(Exception ex)
        {
            System.out.println("error no. 1..."+ex);
        }
        return true;
    }

    public int find(String f, String searchString) {
        int result = -1;
        int pos=-1;
        String str="";
        java.util.Scanner in = null;
        try {
            in = new java.util.Scanner(new java.io.FileReader(f));
            while(in.hasNextLine() && result<0)//&& !result)
            {
                str=in.nextLine();
                result = str.indexOf(searchString);
                //result = in.nextLine().indexOf(searchString) >= 0;
                if(result<0)
                {
                    pos=pos+str.length();
                }
            }
            if(result>=0)
                result=pos;
        }
        catch(java.io.IOException e) {
            e.printStackTrace();
        }
        finally {
            try { in.close() ; } catch(Exception e) { /* ignore */ }
        }
        return result;
    }
}
