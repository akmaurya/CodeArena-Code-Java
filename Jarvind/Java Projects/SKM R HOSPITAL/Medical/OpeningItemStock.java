/*
 * OpeningItemStock.java
 *
 * Created on May 17, 2010, 1:31 PM
 */

//package medretail;
import javax.swing.*;
import java.awt.*;
import javax.swing.table.DefaultTableCellRenderer.*;
import javax.swing.table.DefaultTableModel.*;
import java.rmi.*;
/**
 *
 * @author  Deep Pal
 */
public class OpeningItemStock extends javax.swing.JInternalFrame {
    
    /** Creates new form OpeningItemStock */
    public OpeningItemStock(javax.swing.JDesktopPane jDesktopPane1) {
        initComponents();
        
        java.util.Date dt11=new java.util.Date();
        jTextField3.setText(dt11.getDate()+"/"+(dt11.getMonth()+1)+"/"+(dt11.getYear()+1900));
        java.awt.Cursor cursor;
        cursor = new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR);
        
        jButton1.setCursor(cursor);
        jButton2.setCursor(cursor);
        jButton3.setCursor(cursor);
        jButton4.setCursor(cursor);
        jButton5.setCursor(cursor);
        jTable1.setCursor(cursor);
        ZedInterfaceForMedical inf1=null;
        String itemNm[]=null;
        try
        {
        	ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
        	itemNm=uc.getItemNames("");
        }
        catch(Exception e)
        {
        	System.out.println("Error.."+e);
        }
        //utilityClass uc=new utilityClass();
        //String itemNm[]=uc.getItemNames("");
        itemNmVc=new java.util.Vector();
        for(int i=1;i<itemNm.length;i++) {
            itemNmVc.addElement(itemNm[i]);
        }
        itemNmVc=new java.util.Vector();
        jList2.setListData(itemNmVc);
        jScrollPane4.setVisible(false);
        
        String heading[]={"Batch No.","Exp. Date","Qty."};
        dtm1=new javax.swing.table.DefaultTableModel(heading,0);
        jTable1.setModel(dtm1);
        javax.swing.table.DefaultTableCellRenderer CRLeft = new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight = new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter = new javax.swing.table.DefaultTableCellRenderer();
        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        javax.swing.table.TableColumn column;
        
        column=jTable1.getColumn("Batch No.");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(70);
        
        column=jTable1.getColumn("Exp. Date");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(80);
        
        column=jTable1.getColumn("Qty.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(90);
        
        
        java.awt.Dimension dm=java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        reshape((dm.width-700)/2,(dm.height-300)/2,720,220);
        jDesktopPane1.add(this);
        setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        setTitle("Opening Stock");
        jLabel1.setFont(new java.awt.Font("Arial", 1, 11));
        jLabel1.setText("Enter Item Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 91, 20);

        jTextField11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField11FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField11FocusLost(evt);
            }
        });
        jTextField11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField11KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField11KeyReleased(evt);
            }
        });
        jTextField11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField11MouseClicked(evt);
            }
        });

        getContentPane().add(jTextField11);
        jTextField11.setBounds(110, 10, 330, 19);

        jList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList2ValueChanged(evt);
            }
        });
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jList2MouseEntered(evt);
            }
        });

        jScrollPane4.setViewportView(jList2);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(110, 30, 330, 100);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11));
        jLabel2.setText("Enter Quantity");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 40, 77, 20);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        getContentPane().add(jTextField1);
        jTextField1.setBounds(110, 40, 150, 20);

        jLabel3.setBackground(new java.awt.Color(245, 245, 175));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(270, 40, 110, 20);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 11));
        jLabel4.setText("Batch Number");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 70, 77, 20);

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        getContentPane().add(jTextField2);
        jTextField2.setBounds(110, 70, 150, 20);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 11));
        jLabel5.setText("Expiry Date");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 100, 60, 20);

        jTextField3.setEditable(false);
        getContentPane().add(jTextField3);
        jTextField3.setBounds(110, 100, 100, 20);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar.gif")));
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(220, 100, 20, 20);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.gif")));
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(10, 150, 100, 30);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exit.gif")));
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(360, 150, 100, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(470, 30, 230, 150);

        jLabel6.setBackground(new java.awt.Color(204, 204, 204));
        jLabel6.setFont(new java.awt.Font("Arial", 1, 11));
        jLabel6.setText("Opening Stocks");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(450, 10, 280, 20);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.gif")));
        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(120, 150, 120, 30);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.gif")));
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton5KeyPressed(evt);
            }
        });

        getContentPane().add(jButton5);
        jButton5.setBounds(250, 150, 100, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
// TODO add your handling code here:
        int r=jTable1.getSelectedRow();
        String qty=jTable1.getValueAt(r,2).toString();
        jLabel3.setText(qty.substring(qty.lastIndexOf(" ")).trim());
        jTextField1.setText(qty.substring(0,qty.lastIndexOf(" ")).trim());
        jTextField2.setText(jTable1.getValueAt(r,0).toString());
        jTextField3.setText(jTable1.getValueAt(r,1).toString());
    }//GEN-LAST:event_jTable1MouseClicked
    
    private void jButton5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton5KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            int response=javax.swing.JOptionPane.showConfirmDialog(this,"Are you sure about deletion?","Confirmation",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
            if(response==javax.swing.JOptionPane.YES_OPTION) {
                if(rollBackRecords()==0) {
                    javax.swing.JOptionPane.showMessageDialog(this,"Deletion process completed, successfully.","Information",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    clearFullScrean();
                }
            }
        }
    }//GEN-LAST:event_jButton5KeyPressed
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
// TODO add your handling code here:
        int response=javax.swing.JOptionPane.showConfirmDialog(this,"Are you sure about deletion?","Confirmation",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
        if(response==javax.swing.JOptionPane.YES_OPTION) {
            if(rollBackRecords()==0) {
                javax.swing.JOptionPane.showMessageDialog(this,"Deletion process completed, successfully.","Information",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                clearFullScrean();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            int response=javax.swing.JOptionPane.showConfirmDialog(this,"Are you sure about updation?","Confirmation",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
            if(response==javax.swing.JOptionPane.YES_OPTION) {
                if(rollBackRecords()==0)
                    saveData(2);
            }
        }
    }//GEN-LAST:event_jButton4KeyPressed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
        int response=javax.swing.JOptionPane.showConfirmDialog(this,"Are you sure about updation?","Confirmation",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
        if(response==javax.swing.JOptionPane.YES_OPTION) {
            if(rollBackRecords()==0)
                saveData(2);
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    private int rollBackRecords() {
        int x=validation();
        if(x==1)
           return 1;
        if(jTable1.getSelectedRow()<0) {
            javax.swing.JOptionPane.showMessageDialog(this,"Please select any batch to update/delete?.","Error!",javax.swing.JOptionPane.ERROR_MESSAGE);
            if(jTable1.getRowCount()>0)
            {
                jTable1.requestFocus();
                jTable1.setRowSelectionInterval(0,0);
                int r=jTable1.getSelectedRow();
                String qty=jTable1.getValueAt(r,2).toString();
                jLabel3.setText(qty.substring(qty.lastIndexOf(" ")).trim());
                jTextField1.setText(qty.substring(0,qty.lastIndexOf(" ")).trim());
                jTextField2.setText(jTable1.getValueAt(r,0).toString());
                jTextField3.setText(jTable1.getValueAt(r,1).toString());
            }
            return 1;
        }
        try {
            /*ConnectDatabase cd=new ConnectDatabase();
            java.sql.Connection connection = cd.getConnection();
            java.sql.Statement st1=connection.createStatement();
            java.sql.Statement st2=connection.createStatement();
            java.sql.ResultSet rs1,rs2;*/
            ZedInterface inf=null;
ZedInterfaceForMedical inf1=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
            //utilityClass uc=new utilityClass();
            int itemcode=inf1.getItemCode(jTextField11.getText().trim());
            int r=jTable1.getSelectedRow();
            String batchno=""+jTable1.getValueAt(r,0);
            int quantity=0;
            
            //rs2=st2.executeQuery("select qty from openingDetails where itemCode="+itemcode+" and batchNo='"+batchno+"'");
            String qty=inf.getSingleValue("select qty from openingDetails where itemCode="+itemcode+" and batchNo='"+batchno+"'");
            quantity=Integer.parseInt(qty);
            /*if(rs2.next()) {
                quantity=rs2.getInt("qty");
            }*/
            qty=inf.getSingleValue("select qty from stockHolding where itemCode="+itemcode+" and batchNo='"+batchno+"'");
            if(qty!=null)
            {
            	quantity=Integer.parseInt(qty)-quantity;
            	if(quantity==0)
            		inf.executeUpdateQuery("delete * from stockHolding where itemCode="+itemcode+" and batchno='"+batchno+"'");
            	else
            		inf.executeUpdateQuery("update stockHolding set qty="+quantity+" where itemCode="+itemcode+" and batchNo='"+batchno+"'");
            }
            inf.executeUpdateQuery("delete * from openingDetails where itemCode="+itemcode+" and batchNo='"+batchno+"'");
            /*rs2=st2.executeQuery("select qty from stockHolding where itemCode="+itemcode+" and batchNo='"+batchno+"'");
            if(rs2.next()) {
                quantity=rs2.getInt("qty")-quantity;
                if(quantity==0)
                    st2.executeUpdate("delete * from stockHolding where itemCode="+itemcode+" and batchno='"+batchno+"'");
                else
                    st2.executeUpdate("update stockHolding set qty="+quantity+" where itemCode="+itemcode+" and batchNo='"+batchno+"'");
            }
            st2.executeUpdate("delete * from openingDetails where itemCode="+itemcode+" and batchNo='"+batchno+"'");
            */
            
        } catch(Exception ex) {
            System.out.println("Error..7343..."+ex);
        }
        return 0;
    }
    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            if(validation()==0) {
                saveData(1);
            }
        }
    }//GEN-LAST:event_jButton2KeyPressed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
        if(validation()==0) {
            saveData(1);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            this.dispose();
        }
    }//GEN-LAST:event_jButton3KeyPressed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
            jButton1.requestFocus();
        
    }//GEN-LAST:event_jTextField2KeyPressed
    
    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
            jTextField2.requestFocus();
    }//GEN-LAST:event_jTextField1KeyPressed
    
    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            Cal cal=new Cal();
            jTextField3.setText(cal.getdate());
            jButton2.requestFocus();
        }
    }//GEN-LAST:event_jButton1KeyPressed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        Cal cal=new Cal();
        jTextField3.setText(cal.getdate());
        jButton2.requestFocus();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jList2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseEntered
// TODO add your handling code here:
    }//GEN-LAST:event_jList2MouseEntered
    
    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
// TODO add your handling code here:
        jTextField11.setText(""+itemNmVc.elementAt(jList2.getSelectedIndex()));
        jScrollPane4.setVisible(false);
        try
        {
        ZedInterface inf=null;
ZedInterfaceForMedical inf1=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
        //utilityClass obj=new utilityClass();
        
        String packingType=inf1.getSmallestQtyType(jTextField11.getText().trim());//,jComboBox2.getSelectedItem().toString());
        jLabel3.setText(packingType);
        
        shopOpeningRecords();
        }
        catch(Exception e)
        {
        	System.out.println("Errrrrrrrrrr...."+e);
        }
        jTextField1.requestFocus();
    }//GEN-LAST:event_jList2MouseClicked
    
    private void jList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList2ValueChanged
// TODO add your handling code here:
        //jTextField5.setText(""+itemNmVc.elementAt(jList2.getSelectedIndex()));
    }//GEN-LAST:event_jList2ValueChanged
    
    private void jTextField11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField11MouseClicked
// TODO add your handling code here:
        jScrollPane4.setVisible(true);
    }//GEN-LAST:event_jTextField11MouseClicked
    
    private void jTextField11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyReleased
// TODO add your handling code here:
        if(evt.getKeyCode()>=evt.VK_A && evt.getKeyCode()<=evt.VK_Z) {
            //jPanel2.setVisible(true);
            String crntText=jTextField11.getText().toUpperCase();
            int l=itemNmVc.size();
            jList2.clearSelection();
            for(int i=0;i<l;i++) {
                String itemnm=""+itemNmVc.elementAt(i);
                int indx=itemnm.indexOf(crntText);
                if(indx==0) {
                    jList2.setSelectedIndex(i);
                    jList2.ensureIndexIsVisible(i);
                    break;
                }
            }
        } else if(evt.getKeyCode()!=evt.VK_ENTER && evt.getKeyCode()!=evt.VK_ESCAPE && evt.getKeyCode()!=evt.VK_DOWN && evt.getKeyCode()!=evt.VK_UP) {
            jList2.clearSelection();
        }
    }//GEN-LAST:event_jTextField11KeyReleased
    
    private void jTextField11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==evt.VK_ENTER) {
            if(jList2.getSelectedIndex()>=0){
                jTextField11.setText(""+itemNmVc.elementAt(jList2.getSelectedIndex()));
                shopOpeningRecords();
            }
            try
        	{
        		ZedInterface inf=null;
ZedInterfaceForMedical inf1=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
            //utilityClass obj=new utilityClass();
            String packingType=inf1.getSmallestQtyType(jTextField11.getText().trim());//,jComboBox2.getSelectedItem().toString());
            jLabel3.setText(packingType);
            }
            catch(Exception e)
            {
            	System.out.println("Er..."+e);
            }
            jScrollPane4.setVisible(false);
            jTextField1.requestFocus();
        } else if(evt.getKeyCode()==evt.VK_DOWN) {
            if(jScrollPane4.isVisible()==false)
                jScrollPane4.setVisible(true);
            jList2.setSelectedIndex(jList2.getSelectedIndex()+1);
            jList2.ensureIndexIsVisible(jList2.getSelectedIndex());
        } else if(evt.getKeyCode()==evt.VK_UP) {
            if(jScrollPane4.isVisible()==false)
                jScrollPane4.setVisible(true);
            jList2.setSelectedIndex(jList2.getSelectedIndex()-1);
            jList2.ensureIndexIsVisible(jList2.getSelectedIndex());
        }
        if(evt.getKeyCode()>=evt.VK_A && evt.getKeyCode()<=evt.VK_Z) {
            jScrollPane4.setVisible(true);
        }
        if(evt.getKeyCode()==evt.VK_ESCAPE) {
            jScrollPane4.setVisible(false);
        }
        if(evt.getKeyCode()==evt.VK_F1) {
            jScrollPane4.setVisible(true);
        }
    }//GEN-LAST:event_jTextField11KeyPressed
    
    private void jTextField11FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField11FocusLost
// TODO add your handling code here:
        //jPanel2.setVisible(false);
    }//GEN-LAST:event_jTextField11FocusLost
    
    private void jTextField11FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField11FocusGained
// TODO add your handling code here:
	try
	{
		ZedInterface inf=null;
ZedInterfaceForMedical inf1=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
        //utilityClass uc=new utilityClass();
        String itemNm[]=inf1.getItemNames("");//""+coNmVc.elementAt(jList1.getSelectedIndex()));
        itemNmVc.removeAllElements();
        for(int i=1;i<itemNm.length;i++) {
            itemNmVc.addElement(itemNm[i]);
        }
        jList2.setListData(itemNmVc);
     }
     catch(Exception e)   
     {
     	System.out.println("Errr....."+e);
     }
        //jPanel2.setVisible(true);
    }//GEN-LAST:event_jTextField11FocusGained
    private void shopOpeningRecords() {
        try {
        	ZedInterface inf=null;
ZedInterfaceForMedical inf1=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
            /*ConnectDatabase cd=new ConnectDatabase();
            java.sql.Connection connection = cd.getConnection();
            java.sql.ResultSet rs;
            java.sql.Statement st=connection.createStatement();*/
            //utilityClass uc=new utilityClass();
            int itemcode=inf1.getItemCode(jTextField11.getText().trim().toUpperCase());
            while(dtm1.getRowCount()>0)     dtm1.removeRow(0);
            //System.out.println("qry:"+"select * from openingDetails where itemCode="+itemcode);
            String arr1[][]=inf.getResultSetAs_2D_Array("select batchNo,ExpDate,qty,itemType from openingDetails where itemCode="+itemcode,4);
            //rs=st.executeQuery("select * from openingDetails where itemCode="+itemcode);
            if(arr1!=null)
            for(int i=0;i<arr1.length;i++) {
                String arr[]=new String[3];
                arr[0]=arr1[i][0];
                arr[1]=arr1[i][1];
                arr[1]=arr[1].substring(8,10)+"/"+arr[1].substring(5,7)+"/"+arr[1].substring(0,4);
                arr[2]=arr1[i][2]+" "+arr1[i][3];
                
                dtm1.addRow(arr);
                
            }
            //connection.close();
        } catch(Exception ex) {
            System.out.println("Error..183..."+ex);
        }
    }
    private int validation() {
        int flag=0;
        //utilityClass uc=new utilityClass();
        try
        {
        
        ZedInterface inf=null;
ZedInterfaceForMedical inf1=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
        if(inf1.isBlank(jTextField11.getText())==true) {
            javax.swing.JOptionPane.showMessageDialog(this,"Error!\nEnter name of item.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField11.requestFocus();
            flag=1;
        } else if(inf1.isBlank(jTextField1.getText())==true) {
            javax.swing.JOptionPane.showMessageDialog(this,"Error!\nEnter quantity.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField1.requestFocus();
            flag=1;
        } else if(inf1.isBlank(jTextField2.getText())==true) {
            javax.swing.JOptionPane.showMessageDialog(this,"Error!\nEnter batch number.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField2.requestFocus();
            flag=1;
        } else if(inf1.isBlank(jTextField3.getText())==true) {
            javax.swing.JOptionPane.showMessageDialog(this,"Error!\nSelect expiry date of item.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField3.requestFocus();
            flag=1;
        } else if(inf1.isInteger(jTextField1.getText())==false) {
            javax.swing.JOptionPane.showMessageDialog(this,"Error!\nInvalid character found in quantity.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField1.requestFocus();
            jTextField1.selectAll();
            flag=1;
        }
        
        } catch(Exception ex) {
            System.out.println("Error..183..."+ex);
        }
        return flag;
    }
    private boolean saveData(int purpose) {
        try {
            if(purpose==2) {
                if(jTable1.getSelectedRow()<=-1) {
                    javax.swing.JOptionPane.showMessageDialog(this,"Error!\nInvalid character found in quantity.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                    jTable1.requestFocus();
                    return false;
                }
            }
            /*ConnectDatabase cd=new ConnectDatabase();
            java.sql.Connection connection = cd.getConnection();
            java.sql.ResultSet rs;
            java.sql.Statement st=connection.createStatement();*/
            ZedInterface inf=null;
ZedInterfaceForMedical inf1=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		inf1=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
            
            //utilityClass uc=new utilityClass();
            int itemcode=inf1.getItemCode(jTextField11.getText().trim().toUpperCase());
            String btno=jTextField2.getText().trim().toUpperCase();
            int qty=Integer.parseInt(jTextField1.getText());
            String eqty=inf.getSingleValue("select qty from stockHolding where itemCode="+itemcode+" and batchNo='"+btno+"'");
            
            //rs=st.executeQuery("select qty from stockHolding where itemCode="+itemcode+" and batchNo='"+btno+"'");
            String typeofitem=jLabel3.getText();
            String expdate=""+jTextField3.getText();
            String arr[]=expdate.split("/");
            expdate=arr[1]+"/"+arr[0]+"/"+arr[2];
            if(eqty!=null) {
                int existingQty=Integer.parseInt(eqty);
                qty=qty+existingQty;
                inf.executeUpdateQuery("update stockHolding set qty="+qty+",expDate='"+expdate+"',batchNo='"+btno+"' where itemCode="+itemcode+" and batchNo='"+btno+"'");
                //st.executeUpdate("update stockHolding set qty="+qty+",expDate='"+expdate+"',batchNo='"+btno+"' where itemCode="+itemcode+" and batchNo='"+btno+"'");
            } else {
                
                inf.executeUpdateQuery("insert into stockHolding values("+itemcode+","+qty+",'"+typeofitem+"','"+btno+"','"+expdate+"')");
                //st.executeUpdate("insert into stockHolding values("+itemcode+","+qty+",'"+typeofitem+"','"+btno+"','"+expdate+"')");
            }
            inf.executeUpdateQuery("insert into openingDetails values("+itemcode+","+Integer.parseInt(jTextField1.getText())+",'"+typeofitem+"','"+btno+"','"+expdate+"')");
            //st.executeUpdate("insert into openingDetails values("+itemcode+","+Integer.parseInt(jTextField1.getText())+",'"+typeofitem+"','"+btno+"','"+expdate+"')");
            //connection.close();
            if(purpose==1)
                javax.swing.JOptionPane.showMessageDialog(this,"Opening process completed, successfully.","Information",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            else if(purpose==2)
                javax.swing.JOptionPane.showMessageDialog(this,"Updation process completed, successfully.","Information",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            clearFullScrean();
        } catch(Exception ex) {
            System.out.println("Error..783..."+ex);
        }
        return true;
    }
    private void clearFullScrean() {
        jTextField11.setText("");
        jTextField1.setText("");
        jTextField2.setText("");
        //expDateLb.setText("");
        jTextField3.setText("");
        jLabel3.setText("");
        while(dtm1.getRowCount()>0)     dtm1.removeRow(0);
        
        jTextField11.requestFocus();
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
    java.util.Vector itemNmVc;
    javax.swing.table.DefaultTableModel dtm1;
}
