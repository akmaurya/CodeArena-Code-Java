/*
 * CmpMaster.java
 *
 * Created on April 4, 2010, 2:22 PM
 */

//package medretail;
import java.rmi.*;
/**
 *
 * @author  Deep Pal
 */
public class CmpMaster extends javax.swing.JInternalFrame {
    
    /** Creates new form CmpMaster */
    public CmpMaster(javax.swing.JDesktopPane jDesktopPane1) {
        initComponents();
        
        getCmpNames();
        reshape(100,100,483,380);
        jDesktopPane1.add(this);
        setVisible(true);
    }
    private void getCmpNames()
    {
        try
        {
            vc=new java.util.Vector();
            ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
            String arr[]=inf.getResultSetAs_1D_Array("select cmpName from cmpMaster order by cmpName");
            jList1=new javax.swing.JList(vc);
            if(arr!=null)
            for(int i=0;i<arr.length;i++)
            {
                vc.addElement(arr[i]);
            }
            jList1.setListData(vc);
            jList1.setSelectedIndex(0);
            jScrollPane1.setViewportView(jList1);    
        }
        catch(Exception ex)
        {
            System.out.println("Error...1..."+ex);
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 102)));
        setClosable(true);
        setIconifiable(true);
        setTitle("Company Master");
        jLabel1.setFont(new java.awt.Font("Arial", 1, 11));
        jLabel1.setText("Enter New Company Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 20, 145, 14);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        getContentPane().add(jTextField1);
        jTextField1.setBounds(170, 20, 270, 19);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.gif")));
        jButton1.setMnemonic('S');
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(10, 80, 100, 30);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.gif")));
        jButton2.setMnemonic('U');
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(120, 80, 130, 30);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.gif")));
        jButton3.setMnemonic('D');
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(260, 80, 100, 30);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exit.gif")));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(370, 80, 100, 30);

        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 150, 460, 190);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11));
        jLabel2.setForeground(new java.awt.Color(153, 153, 0));
        jLabel2.setText("Existing company Names");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(160, 130, 137, 14);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
// TODO add your handling code here:
        String coNm=""+vc.elementAt(jList1.getSelectedIndex());;
        System.out.println("SelectedCompany="+coNm);
        jTextField1.setText(coNm);
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
            jTextField1.requestFocus();
    }//GEN-LAST:event_jList1KeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
            updateCmp();
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
        updateCmp();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
            deleteCmp();
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
        deleteCmp();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            saveCmp();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jButton1.requestFocus();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        saveCmp();
        /*
         try
        {
        ConnectDatabase cd=new ConnectDatabase();
        java.sql.Connection connection=cd.getConnection();
        java.sql.Statement st=connection.createStatement();
        java.sql.ResultSet rs=st.executeQuery("select count(cmpCode) from cmpMaster");
        int cmpCode=1;
        if(rs.next()==true)
        {
            String code=rs.getString(1);
            if(code!=null)
            {
                cmpCode=Integer.parseInt(code)+1;
            }
        }
        st.executeUpdate("insert into cmpMaster values('"+jTextField1.getText().trim().toUpperCase()+"',"+cmpCode+")");
        javax.swing.JOptionPane.showMessageDialog(null,"Congratulation!\nNew Company created successfully.");
        jTextField1.setText("");
        jTextField1.requestFocus();
            connection.close();
            getCmpNames();
        }
        catch(Exception ex)
        {
            System.out.println("Error...1..."+ex);
        }*/
    }//GEN-LAST:event_jButton1ActionPerformed

    private boolean updateCmp()
    {
        if(jList1.getSelectedIndex()==-1)
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Error!\nNo company found to update.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(jTextField1.getText().trim().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Error!\nEnter company name to update with selected company.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField1.requestFocus();
            return false;
        }
        if(validation()==false)
        {
            return false;
        }
        int res=javax.swing.JOptionPane.showConfirmDialog(this,"Are you sure you want to update '"+vc.elementAt(jList1.getSelectedIndex()).toString()+"'","Confirmation?",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
        if(res==javax.swing.JOptionPane.YES_OPTION)
        {
            try
            {
                ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
                inf.executeUpdateQuery("update cmpMaster set cmpName='"+jTextField1.getText().trim().toUpperCase()+"' where cmpName='"+vc.elementAt(jList1.getSelectedIndex()).toString()+"'");
                javax.swing.JOptionPane.showMessageDialog(this,"Congratulation!\nCompany updated successfully.","Congratulation !",javax.swing.JOptionPane.PLAIN_MESSAGE);
                getCmpNames();
                jTextField1.setText("");
                jTextField1.requestFocus();
            }
            catch(Exception ex)
            {
                System.out.println("Error...2..."+ex);
            }      
        }
        
        return true;
        
    }
    private boolean deleteCmp()
    {
        if(jList1.getSelectedIndex()==-1)
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Error!\nNo company found to delete.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        int res=javax.swing.JOptionPane.showConfirmDialog(this,"Are you sure you want to delete '"+vc.elementAt(jList1.getSelectedIndex()).toString()+"'","Confirmation?",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
        if(res==javax.swing.JOptionPane.YES_OPTION)
        {
            try
            {
                ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
                inf.executeUpdateQuery("delete * from cmpMaster where cmpName='"+vc.elementAt(jList1.getSelectedIndex()).toString()+"'");
                
                
                javax.swing.JOptionPane.showMessageDialog(this,"Congratulation!\nCompany deleted successfully.","Congratulation !",javax.swing.JOptionPane.PLAIN_MESSAGE);
                getCmpNames();
                jTextField1.requestFocus();
            }
            catch(Exception ex)
            {
                System.out.println("Error...2..."+ex);
            }      
        }
        
        return true;
    }
    
    private boolean validation()
    {
        if(jTextField1.getText().trim().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Error!\nEnter company name.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField1.requestFocus();
            return false;
        }
        try
        {
            ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
			String cmp=inf.getSingleValue("select * from cmpMaster where cmpName='"+jTextField1.getText().trim()+"'");
            
            if(cmp!=null)
            {
                javax.swing.JOptionPane.showMessageDialog(this,"Error!\nEntered Company name already exist.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                jTextField1.requestFocus();
                jTextField1.selectAll();
                return false;                
            }
        }
        catch(Exception ex)
        {
            System.out.println("Error...2..."+ex);
        }

        return true;    
    }
    private int saveCmp()
    {
        if(validation()==false)
            return 1;
        try
        {
        /*ConnectDatabase cd=new ConnectDatabase();
        java.sql.Connection connection=cd.getConnection();
        java.sql.Statement st=connection.createStatement();
        java.sql.ResultSet rs=st.executeQuery("select max(cmpCode) from cmpMaster");
        int cmpCode=1;
        if(rs.next()==true)
        {
            String code=rs.getString(1);
            if(code!=null)
            {
                cmpCode=Integer.parseInt(code)+1;
            }
        }*/
        ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
		int cmpCode=inf.getMaxValue("select max(cmpCode) from cmpMaster");
		cmpCode+=1;
		inf.executeUpdateQuery("insert into cmpMaster values('"+jTextField1.getText().trim().toUpperCase()+"',"+cmpCode+")");
        //st.executeUpdate("insert into cmpMaster values('"+jTextField1.getText().trim().toUpperCase()+"',"+cmpCode+")");
        javax.swing.JOptionPane.showMessageDialog(null,"Congratulation!\nNew Company created successfully.");
        jTextField1.setText("");
        jTextField1.requestFocus();
            //connection.close();
            getCmpNames();
        }
        catch(Exception ex)
        {
            System.out.println("Error...1..."+ex);
        }
        return 0;
    }
    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
// TODO add your handling code here:
        if(evt.getSource()==jButton4 && evt.getKeyCode()==10)
        {
            this.dispose();
        }
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
        if(evt.getSource()==jButton4)
        {
            this.dispose();
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    private java.util.Vector vc;
}
