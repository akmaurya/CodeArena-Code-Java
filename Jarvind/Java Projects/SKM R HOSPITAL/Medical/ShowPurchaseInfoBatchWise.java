/*
 * ShowPurchaseInfoBatchWise.java
 *
 * Created on December 11, 2010, 12:24 PM
 */

//package medretail;

import com.sun.org.apache.bcel.internal.classfile.JavaClass;
import java.rmi.*;
/**
 *
 * @author  Administrator
 */
public class ShowPurchaseInfoBatchWise extends javax.swing.JInternalFrame {
    
    /** Creates new form ShowPurchaseInfoBatchWise */
    public ShowPurchaseInfoBatchWise(javax.swing.JDesktopPane jDesktopPane1) {
        initComponents();
        java.awt.Dimension dm=java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        reshape(100,100,600,300);
        jDesktopPane1.add(this);
        setVisible(true);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setVisible(false);
     }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        getContentPane().setLayout(null);

        setClosable(true);
        setTitle("Show Purchase Information Batch Wise");
        setFrameIcon(null);
        setInheritsPopupMenu(true);
        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 11));
        jLabel2.setText("Enter Batch Number");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 20, 130, 30);

        jTextField1.setFont(new java.awt.Font("Arial", 1, 12));
        jTextField1.setForeground(new java.awt.Color(0, 0, 163));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        getContentPane().add(jTextField1);
        jTextField1.setBounds(150, 19, 110, 30);

        jButton1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 11));
        jButton1.setForeground(new java.awt.Color(0, 0, 152));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.gif")));
        jButton1.setMnemonic('s');
        jButton1.setText("Show");
        jButton1.setToolTipText("Show");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(270, 20, 120, 33);

        jButton2.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 11));
        jButton2.setForeground(new java.awt.Color(0, 0, 152));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exit.gif")));
        jButton2.setMnemonic('c');
        jButton2.setText("Close");
        jButton2.setToolTipText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(410, 20, 110, 33);

        jScrollPane1.setAutoscrolls(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 70, 490, 190);

        jLabel3.setFont(new java.awt.Font("Microsoft Sans Serif", 2, 18));
        jLabel3.setForeground(new java.awt.Color(0, 51, 255));
        jLabel3.setText("Input Batch No.");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(210, 80, 180, 40);

        jLabel4.setFont(new java.awt.Font("Microsoft Sans Serif", 2, 18));
        jLabel4.setForeground(new java.awt.Color(0, 51, 255));
        jLabel4.setText("                                    To");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(80, 110, 370, 40);

        jLabel5.setFont(new java.awt.Font("Microsoft Sans Serif", 2, 18));
        jLabel5.setForeground(new java.awt.Color(0, 51, 255));
        jLabel5.setText("Show Information");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(200, 140, 180, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jButton1.requestFocus();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
// TODO add your handling code here:
        if(jTextField1.getText().equalsIgnoreCase(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Please Enter Batch Number?","Input Error!",javax.swing.JOptionPane.ERROR_MESSAGE);
            jScrollPane1.setVisible(false);
            jLabel3.setVisible(false);
            jLabel4.setVisible(false);
            jLabel5.setVisible(false);
            jTextField1.requestFocus();
        }
        else
        {
            setData();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        if(jTextField1.getText().equalsIgnoreCase(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Please Enter Batch Number?","Input Error!",javax.swing.JOptionPane.ERROR_MESSAGE);
            jScrollPane1.setVisible(false);
            jLabel3.setVisible(false);
            jLabel4.setVisible(false);
            jLabel5.setVisible(false);
            jTextField1.requestFocus();
        }
        else
        {
            setData();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            dispose();
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    javax.swing.table.DefaultTableModel dtm1;
    
    private boolean setData()
    {
        try
        {
            
            String heading[]={"Heading"};
            dtm1=new javax.swing.table.DefaultTableModel(heading,0);
            jTable1.setModel(dtm1);
            javax.swing.table.TableColumn column;
            
            String head[]={"Party Name","Book No.","Sr.No.","Company Name","Item Name","Quantity(Purchase time)","Quantity(Available)","Date of purchasing","Expiry Date"};
            String arr[]=new String[1];
            for(int i=0;i<9;i++)
            {
                arr[0]=head[i];
                dtm1.addRow(arr);
            }
            int count=0;
            /*ConnectDatabase cd=new ConnectDatabase();
            java.sql.Connection connection = cd.getConnection();
            java.sql.ResultSet rs;
            java.sql.Statement st=connection.createStatement();
            java.sql.Statement st1=connection.createStatement();*/
            ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
            count=inf.getCountValue("select pNo from purchaseDtl where batchNo='"+jTextField1.getText()+"'");
            //rs=st.executeQuery("select * from purchaseDtl where batchNo='"+jTextField1.getText()+"'");
            System.out.println("count="+count);
            if(count==0)
            {
                jScrollPane1.setVisible(false);
                jLabel3.setVisible(false);
                jLabel5.setVisible(false);
                jLabel4.setText("                        No Information Found");
                jLabel4.setForeground(java.awt.Color.RED);
                jLabel4.setVisible(true);
                return false;
            }
    
            else
            {
                jLabel3.setVisible(false);
                jLabel4.setVisible(false);
                jLabel5.setVisible(false);
                jScrollPane1.setVisible(true);
                
                for(int i=0;i<count;i++)
                {
                    String s[]={"","","","","","","","",""};
                    
                    String columnName="Party-"+(i+1);
                    dtm1.addColumn(columnName,s);
                    
                }
        column=jTable1.getColumn("Heading");
        column.setPreferredWidth(150);
             for(int i=0;i<count;i++)
                {
                    String columnName="Party-"+(i+1);
                    column=jTable1.getColumn(columnName);
                    column.setPreferredWidth(160);
                }
            }
            String [][]rs=inf.getResultSetAs_2D_Array("select pNo,coNm,expDt,itemNm,qty from purchaseDtl where batchNo='"+jTextField1.getText()+"'",5);
            int i=1;
            if(rs!=null)
            for(int ind=0;ind<rs.length;ind++)
            {
                int pNo=Integer.parseInt(rs[ind][0]);
                String str[]=getDetails(pNo);
                jTable1.setValueAt(""+str[1],0,i);
                jTable1.setValueAt(""+str[2],1,i);
                jTable1.setValueAt(""+str[3],2,i);
                String dt=""+str[0];
                String d=dt.substring(8,10);
                String m=dt.substring(5,7);
                String y=dt.substring(0,4);
                dt=d+"/"+m+"/"+y;
                jTable1.setValueAt(dt,7,i);
                String conm=rs[ind][1];
                String exDt=rs[ind][2];
                dt=""+exDt;
                d=dt.substring(8,10);
                m=dt.substring(5,7);
                y=dt.substring(0,4);
                dt=d+"/"+m+"/"+y;
                exDt=dt;
                String itm=rs[ind][3];
                String query="select itemCode from itemMaster where itemName='"+itm+"'";
                int code=getCode(query);
                int availQty=getAvailableQty(code,jTextField1.getText());
                String qtyA=rs[ind][4];
                jTable1.setValueAt(conm,3,i);
                jTable1.setValueAt(itm,4,i);
                jTable1.setValueAt(qtyA,5,i);
                jTable1.setValueAt(""+availQty,6,i);//
                jTable1.setValueAt(exDt,8,i);
                i++;
            }
            //connection.close();
        }
        catch(Exception ex)
        {
            System.out.println("Error At setData..."+ex);
        }
        return true;
    }
    private String[] getDetails(int pno)
    {
        String str[]=new String[4];
        try
        {
            /*ConnectDatabase cd=new ConnectDatabase();
            java.sql.Connection connection = cd.getConnection();
            java.sql.ResultSet rs;
            java.sql.Statement st=connection.createStatement();*/
            ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
            String [][]rs=inf.getResultSetAs_2D_Array("select entryDt,partyNm,bookNo,srNo from purchaseSmry where pNo="+pno+"",4);
            if(rs!=null)
            {
                str[0]=rs[0][0];
                str[1]=rs[0][1];
                str[2]=rs[0][2];
                str[3]=rs[0][3];   
            }
            //connection.close();
        }
        catch(Exception ex)
        {
            System.out.println("Error At setData..."+ex);
        }
        return str;
    }
    private int getAvailableQty(int itemCode,String batch)
    {
        int qty=0;
        try
        {
            /*ConnectDatabase cd=new ConnectDatabase();
            java.sql.Connection connection = cd.getConnection();
            java.sql.ResultSet rs;
            java.sql.Statement st=connection.createStatement();*/
            ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
            String rs=inf.getSingleValue("select qty from stockHolding where itemCode="+itemCode+" and batchNo='"+batch+"'");
            if(rs!=null)
            {
                 qty=Integer.parseInt(rs);
            }
            //connection.close();
        }
        catch(Exception ex)
        {
            System.out.println("Error At setData..."+ex);
        }
        System.out.println("availQty="+qty);
        return qty;
    }
    private int getCode(String query)
    {
        int code=0;
        try
        {
            /*ConnectDatabase cd=new ConnectDatabase();
            java.sql.Connection connection = cd.getConnection();
            java.sql.ResultSet rs;
            java.sql.Statement st=connection.createStatement();*/
            ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
            
            String rs=inf.getSingleValue(query);;
            if(rs!=null)
            {
                 code=Integer.parseInt(rs);;
            }
            //connection.close();
        }
        catch(Exception ex)
        {
            System.out.println("Error At setData..."+ex);
        }
        System.out.println("itemCode="+code);
        return code;
    }
}
