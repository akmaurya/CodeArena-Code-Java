/*
 * AddPurchaseParty.java
 *
 * Created on May 26, 2011, 1:03 PM
 */

//package skm;
import javax.swing.*;
import javax.swing.table.*;
import java.rmi.*;
import java.awt.*;

/**
 *
 * @author  Administrator
 */
public class AddPurchaseParty extends javax.swing.JInternalFrame {
    
    /** Creates new form AddPurchaseParty */
    public AddPurchaseParty() {
        initComponents();
        
        dtm=new DefaultTableModel(new String[] {"S.No.","Party Nm","Address","Contact No.","Tin No.","DL No."},0);
        jTable1.setModel(dtm);
                javax.swing.table.DefaultTableCellRenderer CRLeft = new javax.swing.table.DefaultTableCellRenderer();
       		javax.swing.table.DefaultTableCellRenderer CRRight = new javax.swing.table.DefaultTableCellRenderer();
       		javax.swing.table.DefaultTableCellRenderer CRCenter = new javax.swing.table.DefaultTableCellRenderer();
      		CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
	       	CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
       		CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
      		javax.swing.table.TableColumn column;

      		column=jTable1.getColumn("S.No.");
      		column.setCellRenderer(CRLeft);
       		column.setPreferredWidth(35);
                column=jTable1.getColumn("Party Nm");
      		column.setCellRenderer(CRLeft);
       		column.setPreferredWidth(135);
                column=jTable1.getColumn("Address");
      		column.setCellRenderer(CRLeft);
       		column.setPreferredWidth(200);
                column=jTable1.getColumn("Contact No.");
      		column.setCellRenderer(CRCenter);
       		column.setPreferredWidth(100);
                column=jTable1.getColumn("Tin No.");
      		column.setCellRenderer(CRCenter);
       		column.setPreferredWidth(100);
                column=jTable1.getColumn("DL No.");
      		column.setCellRenderer(CRCenter);
       		column.setPreferredWidth(100);
       		showExistingParty();
    }
    private void showExistingParty()
    {
    	try
    	{
    		ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
    		String query="select partyNm,ads,contactNo,tinNo,DLNo from purchasePartyMaster order by partyNm";
    		String [][]rs=inf.getResultSetAs_2D_Array(query,5);
    		if(rs!=null)
    		{
    			for(int i=0;i<rs.length;i++)
    			{
    				String data[]=new String[6];
    				data[0]=""+(dtm.getRowCount()+1)+".";
    				data[1]=rs[i][0];
    				data[2]=rs[i][1];
    				data[3]=rs[i][2];
    				data[4]=rs[i][3];
    				data[5]=rs[i][4];
    				dtm.addRow(data);
    			}
    		}
    	}
    	catch(Exception ex) {
            System.out.println("Error..783..."+ex);
        }      
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        getContentPane().setLayout(null);

        setBackground(new java.awt.Color(60, 220, 220));
        setClosable(true);
        setTitle("Adding Purchase Party");
        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jLabel1.setText("Enter Party Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 120, 14);

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jLabel2.setText("Enter Address");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 40, 100, 14);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        getContentPane().add(jTextField1);
        jTextField1.setBounds(120, 10, 200, 19);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea1KeyPressed(evt);
            }
        });

        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(120, 40, 200, 70);

        jLabel3.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jLabel3.setText("Enter Contact No.");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 120, 100, 14);

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        getContentPane().add(jTextField2);
        jTextField2.setBounds(120, 120, 200, 19);

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });

        getContentPane().add(jTextField3);
        jTextField3.setBounds(120, 150, 200, 19);

        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
        });

        getContentPane().add(jTextField4);
        jTextField4.setBounds(120, 180, 200, 19);

        jLabel4.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jLabel4.setText("Enter Tin No.");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 150, 100, 14);

        jLabel5.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jLabel5.setText("Enter DL No.");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 180, 100, 14);

        jButton1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jButton1.setForeground(new java.awt.Color(0, 51, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.gif")));
        jButton1.setMnemonic('S');
        jButton1.setText("Save");
        jButton1.setToolTipText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(10, 220, 90, 30);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 51), 1, true));
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(340, 30, 340, 220);

        jLabel6.setBackground(new java.awt.Color(51, 51, 51));
        jLabel6.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 12));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Existing Party List");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(340, 10, 340, 15);

        jButton2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jButton2.setForeground(new java.awt.Color(0, 51, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.gif")));
        jButton2.setMnemonic('u');
        jButton2.setText("Update");
        jButton2.setToolTipText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(110, 220, 110, 30);

        jButton3.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jButton3.setForeground(new java.awt.Color(0, 51, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.gif")));
        jButton3.setMnemonic('d');
        jButton3.setText("Delete");
        jButton3.setToolTipText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(230, 220, 100, 30);
        
        

        pack();
    }// </editor-fold>//GEN-END:initComponents
	  private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
// TODO add your handling code here:
        int r=jTable1.getSelectedRow();
        if(r>-1)
        {
            jTextField1.setText(""+jTable1.getValueAt(r,1));
            jTextArea1.setText(""+jTable1.getValueAt(r,2));
            jTextField2.setText(""+jTable1.getValueAt(r,3));
            jTextField3.setText(""+jTable1.getValueAt(r,4));
            jTextField4.setText(""+jTable1.getValueAt(r,5));
        }
    }                                    

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {                                    
// TODO add your handling code here:
        int r=jTable1.getSelectedRow();
        if(r>-1)
        {
            jTextField1.setText(""+jTable1.getValueAt(r,1));
            jTextArea1.setText(""+jTable1.getValueAt(r,2));
            jTextField2.setText(""+jTable1.getValueAt(r,3));
            jTextField3.setText(""+jTable1.getValueAt(r,4));
            jTextField4.setText(""+jTable1.getValueAt(r,5));
        }
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
        delete();
    }//GEN-LAST:event_jButton3ActionPerformed
	private boolean delete()
	{
		try
		{
			int r=jTable1.getSelectedRow();
			if(r>-1)
			{
				jTextField1.setText(""+jTable1.getValueAt(r,1));
				if(jTextField1.getText().trim().equals(""))
				{
					JOptionPane.showMessageDialog(null,"Please Enter Party Name To Delete","Error !!!",JOptionPane.ERROR_MESSAGE);
					jTextField1.requestFocus();
					jTextField1.selectAll();
					return false;
				}
				int msg=JOptionPane.showConfirmDialog(null,"Are You Sure ?");
                if(msg==JOptionPane.YES_OPTION)
                {
                	ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
                	String qry="delete * from purchasePartyMaster where partyNm='"+jTextField1.getText()+"'";
                	inf.executeUpdateQuery(qry);
                	reset();
                	dtm.setRowCount(0);
            		showExistingParty();
                }
			}
			else
			{
				JOptionPane.showMessageDialog(null,"Please Select Any Party To Delete ? ","Error !!!",JOptionPane.ERROR_MESSAGE);
				jTable1.requestFocus();
				return false;
			}
		}
		catch(Exception e)
		{
			System.out.println("Error.."+e);
		}
		return true;
	}
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
	update();
        
    }//GEN-LAST:event_jButton2ActionPerformed
	private boolean update()
	{
		try
		{
			int r=jTable1.getSelectedRow();
			if(r>-1)
			{
				if(jTextField1.getText().trim().equals(""))
				{
					JOptionPane.showMessageDialog(null,"Please Enter Party Name To Update","Error !!!",JOptionPane.ERROR_MESSAGE);
					jTextField1.requestFocus();
					jTextField1.selectAll();
					return false;
				}
				boolean flag=true;
				ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
				String partyNm[]=inf.getResultSetAs_1D_Array("select partyNm from purchasePartyMaster");
				for(int i=0;i<partyNm.length;i++)
            	{
                	if(jTextField1.getText().equalsIgnoreCase(partyNm[i]))
                	{
                   	 	flag=false;
                	}
                }
                int msg=JOptionPane.showConfirmDialog(null,"Are You Sure ?");
                if(msg==JOptionPane.YES_OPTION)
                {
                	if(flag)
            		{
            			String qry="update purchasePartyMaster set partyNm='"+jTextField1.getText()+"',ads='"+jTextArea1.getText()+"',contactNo='"+jTextField2.getText()+"',tinNo='"+jTextField3.getText()+"',DLNo='"+jTextField4.getText()+"' where partyNm='"+""+jTable1.getValueAt(r,1)+"'";
            			inf.executeUpdateQuery(qry);
            		}
            		else if(!flag && jTextField1.getText().equalsIgnoreCase(""+jTable1.getValueAt(r,1)))
            		{
            			String qry="update purchasePartyMaster set partyNm='"+jTextField1.getText()+"',ads='"+jTextArea1.getText()+"',contactNo='"+jTextField2.getText()+"',tinNo='"+jTextField3.getText()+"',DLNo='"+jTextField4.getText()+"' where partyNm='"+""+jTable1.getValueAt(r,1)+"'";
            			inf.executeUpdateQuery(qry);
            		}
            		JOptionPane.showMessageDialog(null,"Party Updated Successfully..","Congratulation !!!",JOptionPane.INFORMATION_MESSAGE);
            		reset();
            		dtm.setRowCount(0);
            		showExistingParty();
                }
			}
			else
			{
				JOptionPane.showMessageDialog(null,"Please Select Any Party To Update ? ","Error !!!",JOptionPane.ERROR_MESSAGE);
				jTable1.requestFocus();
				return false;
			}
		}
		catch(Exception e)
		{
			System.out.println("Error..."+e);
		}
		return true;
	}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        save();
    }//GEN-LAST:event_jButton1ActionPerformed
	private boolean save()
	{
		try
		{
			if(jTextField1.getText().trim().equals(""))
			{
				JOptionPane.showMessageDialog(null,"Please Enter Party Name","Error !!!",JOptionPane.ERROR_MESSAGE);
				jTextField1.requestFocus();
				jTextField1.selectAll();
				return false;
			}
			boolean flag=true;
			ZedInterface inf=null;
ZedInterfaceForMedical uc=null;
try
{
	inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
	uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
}
catch(Exception e)
{
	System.out.println("Error with connection with server "+getIPaddress.IP()+" ...");
	getIPaddress.changeIP();
	try
	{
		inf=(ZedInterface)Naming.lookup(getIPaddress.IP());
		uc=(ZedInterfaceForMedical)Naming.lookup(getIPaddress.IP());
	}
	catch(Exception ex)
	{
		System.out.println("Error with connection with server  rmi://127.0.0.1/ExtendZedServer...");
	}
}
			String partyNm[]=inf.getResultSetAs_1D_Array("select partyNm from purchasePartyMaster");
			for(int i=0;i<partyNm.length;i++)
            {
                if(jTextField1.getText().equalsIgnoreCase(partyNm[i]))
                {
                    flag=false;
                }
            }
            if(flag)
            {
                String query="select max(partyCode) from purchasePartyMaster";
                //utilityClass ut=new utilityClass();
                int partyCode=inf.getMaxValue(query);
                partyCode+=1;
                query="insert into purchasePartyMaster values("+partyCode+",'"+jTextField1.getText()+"','"+jTextArea1.getText()+"','"+jTextField2.getText()+"','"+jTextField3.getText()+"','"+jTextField4.getText()+"')";
                inf.executeUpdateQuery(query);
                JOptionPane.showMessageDialog(null,"Party Created Successfully..","Congratulation !!!",JOptionPane.INFORMATION_MESSAGE);
                reset();
                dtm.setRowCount(0);
                showExistingParty();
            }
			
		}
		catch(Exception e)
		{
			System.out.println("Error..."+e);
		}
		return true;
	}
	private void reset()
	{
		jTextField1.setText("");
		jTextField2.setText("");
		jTextField3.setText("");
		jTextField4.setText("");
		jTextArea1.setText("");
		jTextField1.requestFocus();
	}
    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            delete();
        }
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            update();
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            save();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jButton1.requestFocus();
        }
    }//GEN-LAST:event_jTextField4KeyPressed

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField4.requestFocus();
        }
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField3.requestFocus();
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextArea1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)    
        {
            if(jTextArea1.getText().trim().equals(""))
            {
                jTextArea1.setText("");//jTextArea1.getText().substring(0,jTextArea1.getText().length()-1));
                jTextField2.requestFocus();
            }
            else if((jTextArea1.getText().substring(jTextArea1.getText().length()-1,jTextArea1.getText().length())).equals("\n"))
            {
                jTextArea1.setText(jTextArea1.getText().substring(0,jTextArea1.getText().length()-1));
                jTextField2.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextArea1KeyPressed


    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
// TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextArea1.requestFocus();
        }
    }//GEN-LAST:event_jTextField1KeyPressed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel dtm;
    
    
}
