/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MakeNewFinancialYear.java
 *
 * Created on Jun 14, 2012, 2:20:58 PM
 */

package railwaycashoffice;

/**
 *
 * @author Shweta
 */
public class MakeNewFinancialYear extends javax.swing.JInternalFrame {

    /** Creates new form MakeNewFinancialYear */
    public MakeNewFinancialYear() {
        initComponents();

        jLabel5.setVisible(false);
        jPasswordField2.setVisible(false);
     //   jProgressBar1.setVisible(false);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Make New Financial Year");
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(208, 187, 176));
        jPanel1.setLayout(null);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton1.setText("Create New Financial Year");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(20, 90, 370, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setText("Admin Password");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 180, 130, 20);

        jPasswordField1.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jPasswordField1.setForeground(new java.awt.Color(255, 0, 0));
        jPasswordField1.setToolTipText("Please input  password");
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
        });
        jPanel1.add(jPasswordField1);
        jPasswordField1.setBounds(150, 180, 300, 28);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setText("Admin Password");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 60, 120, 20);

        jPasswordField2.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jPasswordField2.setForeground(new java.awt.Color(255, 0, 0));
        jPasswordField2.setToolTipText("Please input  password");
        jPasswordField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField2ActionPerformed(evt);
            }
        });
        jPasswordField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField2KeyPressed(evt);
            }
        });
        jPanel1.add(jPasswordField2);
        jPasswordField2.setBounds(140, 60, 250, 28);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 20, 410, 180);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
               jLabel5.setVisible(true);
               jPasswordField2.setVisible(true);
             
           //    flag=false;
              // flag1=false;
     
        if(checkAdminId())
        {
              checkFinancialYear();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
            jButton1.requestFocus();
}//GEN-LAST:event_jPasswordField1KeyPressed

    private void jPasswordField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField2ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jPasswordField2ActionPerformed

    private void jPasswordField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
               jButton1.requestFocus();
               if(checkAdminId())
               {
                     checkFinancialYear();
               }
        }
}//GEN-LAST:event_jPasswordField2KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    // End of variables declaration//GEN-END:variables
   boolean flag=true;
private void checkFinancialYear()
{
    try
    {
       // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        int variable=javax.swing.JOptionPane.showInternalConfirmDialog(this,"Are you sure?","Message",javax.swing.JOptionPane.OK_CANCEL_OPTION);
        System.out.println("variable.........."+variable);
        String getYear=object1.returnFinancialYears();
        System.out.println("getYear............"+getYear);
        String getYear1=Main.year;
        System.out.println("getYear.........."+getYear1);

        int next=Integer.parseInt(getYear1)+1;
        System.out.println("next Year.........."+next);

      ///  java.io.File fl= new java.io.File("C:\\mysql\\data");
      //  String path=fl.getCanonicalPath();
String get=LoginToProgram.MR.getTitle();
System.out.println("get...."+get);
String d1[]=get.split("-");
next=Integer.parseInt(d1[1])+1;
String next1=d1[1]+(""+next);
System.out.println("1..."+next1);
int nt=Integer.parseInt(next1);
System.out.println("nt...."+nt);

//String getStr=object1.getBackupOfDatabase();
//.out.println("getStr......"+getStr);
        boolean bn=object1.checkFinancialDB("C:\\mysql\\data\\railway"+nt);
        System.out.println("bn........."+bn);
        if(bn==true)
        {
        	javax.swing.JOptionPane.showMessageDialog(null,"Selected Financial year already exist.\nTry again.");
                this.dispose();
        }
        else
        {
            uploadInNextFinancialYear(nt);
        /*    uploadNewFinancialYear UPF=new uploadNewFinancialYear(nt);
            UPF.start();*/
            javax.swing.JOptionPane.showMessageDialog(null,"Congratulation ! New financial year created successfully.");

       	}
      //  System.out.println("bn..........."+bn);

    }
    catch(Exception e)
    {
        System.out.println("Error ! In checkFinancialYear Method."+e);
    }

}
 private boolean checkAdminId()
    {
     //javax.swing.JOptionPane.showMessageDialog(null,"Coming here");
      String getPD=""+jPasswordField2.getText();
      System.out.println("getPd...."+getPD);
      if(getPD.equals("")==true)
      {
           javax.swing.JOptionPane.showMessageDialog(this,"Please input admin password");
           jPasswordField2.requestFocus();
           return false;
      }
        try
        {
          
           
          //  interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
            String qry="select adminID from loginmaster where uPws='"+(""+jPasswordField2.getText())+"' and uLevel=0";
           // String qry="select adminID from loginmaster where uPws='"+"admin"+"' and uLevel=0";
            System.out.println("qry............"+qry);
            String id=object1.getSigetngleValue(qry,Main.year);
            if(!(id.equalsIgnoreCase("")))
                return true;
            else
                return false;
        }
        catch(Exception e)
        {
            System.out.println("Errr..."+e);
            return false;
        }
      
    }
 private void uploadInNextFinancialYear(int generatedYear)
 {
     String newyear=""+generatedYear;
     try
     {
         //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
         interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
         boolean bn=object1.selectFinancialYear(newyear);
         boolean yes=false;
         if(bn)
         {
              String qry="Select dp_Code,dp_name from department_detail";
              String loadDetail[][]=object1.getInformationDD(qry, 2,Main.year);
              if(loadDetail!=null)
              {
                 //javax.swing.JOptionPane.showMessageDialog(null,"Connected.....HA HA HA!");

                for(int i=0;i<loadDetail.length;i++)
                {
                    qry="insert into department_detail values("+Integer.parseInt(loadDetail[i][0])+",'"+loadDetail[i][1]+"')";
                    System.out.println("qry...."+qry);
                    yes=object1.saveInformation(qry, newyear);
                    /*if(yes)
                    {
                        javax.swing.JOptionPane.showMessageDialog(null,"Data Saved Successfully");
                    }*/
                }

              }
               qry="Select adminID,uId,uPws,uLevel,providedMenuItem from loginmaster";
               loadDetail=object1.getInformationDD(qry, 5,Main.year);
               if(loadDetail!=null)
               {
                  for(int i=0;i<loadDetail.length;i++)
                  {
                      qry="insert into loginMaster values('"+loadDetail[i][0]+"','"+loadDetail[i][1]+"','"+loadDetail[i][2]+"',"+Integer.parseInt(loadDetail[i][3])+",'"+loadDetail[i][4]+"')";
                      object1.saveInformation(qry, newyear);
                  }
               }

               qry="select mnuCOde,mnuName from menus";
               loadDetail=object1.getInformationDD(qry, 2,Main.year);
               if(loadDetail!=null)
               {
                  for(int i=0;i<loadDetail.length;i++)
                  {
                    qry="insert into menus values("+Integer.parseInt(loadDetail[i][0])+",'"+loadDetail[i][1]+"')";
                    object1.saveInformation(qry, newyear);
                  
                  }
               }

               qry="select mnuCode,mnuItemCode,mnuItemName from menuitems";
               loadDetail=object1.getInformationDD(qry, 3,Main.year);
               if(loadDetail!=null)
               {
                  for(int i=0;i<loadDetail.length;i++)
                  {
                      qry="insert into menuitems values("+Integer.parseInt(loadDetail[i][0])+","+Integer.parseInt(loadDetail[i][1])+",'"+loadDetail[i][2]+"')";
                      object1.saveInformation(qry, newyear);
                  
                  }
               }

               qry="Select asset,amount from fixedassets";
               loadDetail=object1.getInformationDD(qry, 2,Main.year);
               if(loadDetail!=null)
               {
                  for(int i=0;i<loadDetail.length;i++)
                  {
                    qry="insert into fixedassets values('"+loadDetail[i][0]+"',"+Double.valueOf(loadDetail[i][1])+")";
                    object1.saveInformation(qry, newyear);
                   
                  }
               }

               qry="select cashtype from cash_type";
               loadDetail=object1.getInformationDD(qry, 1,Main.year);
               if(loadDetail!=null)
               {
                  for(int i=0;i<loadDetail.length;i++)
                  {
                    qry="insert into cash_type values('"+loadDetail[i][0]+"')";
                    object1.saveInformation(qry, newyear);
                  }
               }

               qry="Select cashier_code,cashier_number,cashier_name,address,phone_no from cashier_detail order by cashier_number asc";
               loadDetail=object1.getInformationDD(qry, 5, Main.year);
               if(loadDetail!=null)
               {
                   for(int i=0;i<loadDetail.length;i++)
                   {
                       qry="insert into cashier_detail values("+Integer.parseInt(loadDetail[i][0])+","+Integer.parseInt(loadDetail[i][1])+",'"+loadDetail[i][2]+"','"+loadDetail[i][3]+"','"+loadDetail[i][4]+"')";
                       object1.saveInformation(qry, newyear);
                   }
                }
               qry="Select cashier_code from cashier_detail";
               String loadCashier[]=object1.getResultSetAs_1D_Array(qry,Main.year);
               if(loadCashier!=null)
               {
                   for(int k=0;k<loadCashier.length;k++)
                   {
                        qry="Select edate from challan_detail where closing_status=0 and cashier_code="+Integer.parseInt(loadCashier[k])+"";
                        String loadDD[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                        if(loadDD!=null)
                        {
                            System.out.println("loadDD.length="+loadDD.length);
                            for(int i=0;i<loadDD.length;i++)
                            {
                                System.out.println("Bill Date="+loadDD[i]);
                                qry="select challansheet_no,cashier_code,challan_no,edate,dp_code,DC_No,closing_date,closing_status from challan_detail where edate='"+loadDD[i]+"' and cashier_code="+Integer.parseInt(loadCashier[k])+"";
                                loadDetail=object1.getInformationDD(qry,8,Main.year);
                                if(loadDetail!=null)
                                {
                           //for(int j=0;j<loadDetail.length;j++)
                                    int j=0;
                                    {
                                        qry="insert into carryforward_challan_detail values("+Integer.parseInt(loadDetail[j][0])+","+Integer.parseInt(loadDetail[j][1])+","+Integer.parseInt(loadDetail[j][2])+",'"+loadDetail[j][3]+"',"+Integer.parseInt(loadDetail[j][4])+","+Integer.parseInt(loadDetail[j][5])+",'"+loadDetail[j][6]+"',"+Integer.parseInt(loadDetail[j][7])+")";
                                        System.out.println("qry carry forward challan......"+qry);
                                        object1.saveInformation(qry, newyear);

                                    }
                                }
                            }
                        }

                   }
               }
                 qry="Select distinct(edate) from challan_detail where closing_status=0";
               String loadDD[]=object1.getResultSetAs_1D_Array(qry,Main.year);
               if(loadDD!=null)
               {
                   System.out.println("loadDD.length="+loadDD.length);
                   for(int i=0;i<loadDD.length;i++)
                   {
                       qry="select bill_Code,dp_code,edate,pmrno,CO7,CO6,cashier_code,partyname,amount,amounttype,status,paymentdate,mix_amount from build_distribution where edate='"+loadDD[i]+"'";
                       loadDetail=object1.getInformationDD(qry, 13,Main.year);
                       if(loadDetail!=null)
                       {
                           System.out.println("biill D..."+loadDD+"......"+loadDetail.length);
                           for(int j=0;j<loadDetail.length;j++)
                           {
                               qry="insert into carryforward_build_distribution values("+loadDetail[j][0]+","+loadDetail[j][1]+",'"+loadDetail[j][2]+"',"+Integer.parseInt(loadDetail[j][3])+","+Integer.parseInt(loadDetail[j][4])+","+Integer.parseInt(loadDetail[j][5])+","+Integer.parseInt(loadDetail[j][6])+",'"+loadDetail[j][7]+"',"+Double.valueOf(loadDetail[j][8])+",'"+loadDetail[j][9]+"',"+Integer.parseInt(loadDetail[j][10])+",'"+loadDetail[j][11]+"',"+Double.valueOf(loadDetail[j][12])+")";
                               object1.saveInformation(qry, newyear);
                           }
                       }
                       qry="Select bill_Code,chq_dt,chq_no,issing_bank,chq_amt,status from cheque_details where status=0";
                       loadDetail=object1.getInformationDD(qry,6,Main.year);
                       if(loadDetail!=null)
                       {
                           for(int j=0;j<loadDetail.length;j++)
                           {
                               qry="insert into carryforward_cheque_details values("+loadDetail[j][0]+",'"+loadDetail[j][1]+"',"+loadDetail[j][2]+",'"+loadDetail[j][3]+"',"+loadDetail[j][4]+","+loadDetail[j][5]+")";
                               object1.saveInformation(qry, newyear);
                           }
                       }

                   }
               }

               qry="Select cashier_code from cashier_detail";
               loadDD=object1.getResultSetAs_1D_Array(qry,Main.year);
               if(loadDD!=null)
               {
                   String deadDate=2000+"-"+1+"-"+1;
                   double tot=0.0,debitAmt=0.0,CreditAmt=0.0,totalDueAmount=0.0,totalOpeningAmount=0.0;
                   for(int i=0;i<loadDD.length;i++)
                   {
                       tot=0.0;
                       debitAmt=0.0;
                       CreditAmt=0.0;
                       totalDueAmount=0.0;
                       qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(loadDD[i]);
                       String totalDebitAmount=object1.getSigetngleValue(qry,Main.year);
                       debitAmt=Double.valueOf(totalDebitAmount);
                       qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(loadDD[i])+" and paymentdate<>'"+deadDate+"'";
                       String totalCreditAmount=object1.getSigetngleValue(qry,Main.year);
                       CreditAmt=Double.valueOf(totalCreditAmount);
                       if(totalDebitAmount!=null && totalCreditAmount!=null)
                       {
                           if(debitAmt>=CreditAmt)
                               tot=debitAmt-CreditAmt;

                           qry="insert into cashier_creditbalance values("+Integer.parseInt(loadDD[i])+","+tot+")";
                           object1.saveInformation(qry, newyear);
                       }
                       
                      totalDueAmount=dueAmount(loadDD[i]);

                      qry="insert into opening_dueamount values("+Integer.parseInt(loadDD[i])+","+totalDueAmount+")";
                      object1.saveInformation(qry, newyear);
                              
                      qry="Select opening_amount,current_amount,status from cashier_openingamount where cashier_code="+Integer.parseInt(loadDD[i]);
                      String getAmt[][]=object1.getInformationDD(qry, 3, Main.year);

                      qry="insert into cashier_openingamount values("+Integer.parseInt(loadDD[i])+","+Double.valueOf(getAmt[0][0])+","+Double.valueOf(getAmt[0][1])+","+Integer.parseInt(getAmt[0][2])+")";
                      object1.saveInformation(qry, newyear);

                   }
               }
                      qry="Select distinct(pfNo) from salaryinfo";
                      String getSalaryDate[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                      if(getSalaryDate!=null)
                      {
                          for(int x=0;x<getSalaryDate.length;x++)
                          {
                              qry="Select salaryDate,generationDate,empName,designation,scale,grPay,pfNo,qrNo,ppaNo,panNo,pay,ta,ata,fpa,da,hra,ada,wa,rtf,nps,ncpf,npsa,vpf,rent,echarge,wcharge,cc,nisg,fa,mca,gcnps,ptc,icr,sd,slr,grossPay,totalDeduction,netPay,generatedByID from salaryinfo order by salaryDate desc";
                              loadDetail=object1.getInformationDD(qry,39, Main.year);
                              
                              if(loadDetail!=null)
                              {
                                 // qry="insert into salaryinfo values";
                                  for(int z=0;z<loadDetail.length;z++)
                                  {
                                        qry="insert into salaryinfo values('"+loadDetail[z][0]+"','"+loadDetail[z][1]+"','"+loadDetail[z][2].toUpperCase()+"','"+loadDetail[z][3]+"','"+loadDetail[z][4]+"','"+loadDetail[z][5]+"','"+loadDetail[z][6]+"','"+loadDetail[z][7]+"','"+loadDetail[z][8]+"','"+loadDetail[z][9]+"','"+loadDetail[z][10]+"','"+loadDetail[z][11]+"','"+loadDetail[z][12]+"','"+loadDetail[z][13]+"','"+loadDetail[z][14]+"','"+loadDetail[z][15]+"','"+loadDetail[z][16]+"','"+loadDetail[z][17]+"','"+loadDetail[z][18]+"','"+loadDetail[z][19]+"','"+loadDetail[z][20]+"','"+loadDetail[z][21]+"','"+loadDetail[z][22]+"','"+loadDetail[z][23]+"','"+loadDetail[z][24]+"','"+loadDetail[z][25]+"','"+loadDetail[z][26]+"','"+loadDetail[z][27]+"','"+loadDetail[z][28]+"','"+loadDetail[z][29]+"','"+loadDetail[z][30]+"','"+loadDetail[z][31]+"','"+loadDetail[z][32]+"','"+loadDetail[z][33]+"','"+loadDetail[z][34]+"','"+loadDetail[z][35]+"','"+loadDetail[z][36]+"','"+loadDetail[z][37]+"','"+loadDetail[z][38]+"')";
                                        yes=object1.saveInformation(qry, newyear);
                                
                                  }
                                                
                                
                              }

                          }
                      }
                       javax.swing.JOptionPane.showMessageDialog(null,"Congratulation ! Financial Year Created Successfully.");
                       this.dispose();




         }
        


     }
     catch(Exception e)
     {
         System.out.println("Error ! In uploadInNextFinancialYear Method."+e);
     }

 }
 /*class uploadNewFinancialYear extends Thread
 {
     String newyear=null;

      public uploadNewFinancialYear(int generatedYear)
      {
          this.newyear=""+generatedYear;
      }

     public void run()
     {
         int rep=1;
             try
             {

                 interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
                boolean bn=object1.selectFinancialYear(newyear);
                boolean yes=false;
                if(bn)
                {
                    jProgressBar1.setVisible(true);
                   // jProgressBar1.setMaximum(1000);
                   // jProgressBar1.setMinimum(0);

                      String qry="Select dp_Code,dp_name from department_detail";
                      String loadDetail[][]=object1.getInformationDD(qry, 2,Main.year);
                      if(loadDetail!=null)
                      {
                          javax.swing.JOptionPane.showMessageDialog(null,"Connected.....HA HA HA!");

                          for(int i=0;i<loadDetail.length;i++,rep++)
                          {
                              qry="insert into department_detail values("+Integer.parseInt(loadDetail[i][0])+",'"+loadDetail[i][1]+"')";
                              System.out.println("qry...."+qry);
                              object1.saveInformation(qry, newyear);
                              jProgressBar1.setValue(rep);

                          }

              }
               qry="Select adminID,uId,uPws,uLevel,providedMenuItem from loginmaster";
               loadDetail=object1.getInformationDD(qry, 5,Main.year);
               if(loadDetail!=null)
               {
                  for(int i=0;i<loadDetail.length;i++,rep++)
                  {
                      qry="insert into loginMaster values('"+loadDetail[i][0]+"','"+loadDetail[i][1]+"','"+loadDetail[i][2]+"',"+Integer.parseInt(loadDetail[i][3])+",'"+loadDetail[i][4]+"')";
                      object1.saveInformation(qry, newyear);
                       jProgressBar1.setValue(rep);
                  }
               }

               qry="select mnuCOde,mnuName from menus";
               loadDetail=object1.getInformationDD(qry, 2,Main.year);
               if(loadDetail!=null)
               {
                  for(int i=0;i<loadDetail.length;i++,rep++)
                  {
                    qry="insert into menus values("+Integer.parseInt(loadDetail[i][0])+",'"+loadDetail[i][1]+"')";
                    object1.saveInformation(qry, newyear);
                   jProgressBar1.setValue(rep);
                  }
               }

               qry="select mnuCode,mnuItemCode,mnuItemName from menuitems";
               loadDetail=object1.getInformationDD(qry, 3,Main.year);
               if(loadDetail!=null)
               {
                  for(int i=0;i<loadDetail.length;i++,rep++)
                  {
                      qry="insert into menuitems values("+Integer.parseInt(loadDetail[i][0])+","+Integer.parseInt(loadDetail[i][1])+",'"+loadDetail[i][2]+"')";
                      object1.saveInformation(qry, newyear);
                       jProgressBar1.setValue(rep);
                  }
               }

               qry="Select asset,amount from fixedassets";
               loadDetail=object1.getInformationDD(qry, 2,Main.year);
               if(loadDetail!=null)
               {
                  for(int i=0;i<loadDetail.length;i++,rep++)
                  {
                    qry="insert into fixedassets values('"+loadDetail[i][0]+"',"+Double.valueOf(loadDetail[i][1])+")";
                    object1.saveInformation(qry, newyear);
                    jProgressBar1.setValue(rep);
                  }
               }

               qry="select cashtype from cash_type";
               loadDetail=object1.getInformationDD(qry, 1,Main.year);
               if(loadDetail!=null)
               {
                  for(int i=0;i<loadDetail.length;i++,rep++)
                  {
                    qry="insert into cash_type values('"+loadDetail[i]+"')";
                    object1.saveInformation(qry, newyear);
                     jProgressBar1.setValue(rep);
                  }
               }

               qry="Select cashier_code,cashier_number,cashier_name,address,phone_no from cashier_detail";
               loadDetail=object1.getInformationDD(qry, 5, Main.year);
               if(loadDetail!=null)
               {
                   for(int i=0;i<loadDetail.length;i++,rep++)
                   {
                       qry="insert into cashier_detail values("+Integer.parseInt(loadDetail[i][0])+","+Integer.parseInt(loadDetail[i][1])+",'"+loadDetail[i][2]+"','"+loadDetail[i][3]+"','"+loadDetail[i][4]+"')";
                       object1.saveInformation(qry, newyear);
                        jProgressBar1.setValue(rep);
                   }
                }
               qry="Select edate from challan_detail where closing_status="+0;
               String loadDD[]=object1.getResultSetAs_1D_Array(qry,Main.year);
               if(loadDD!=null)
               {
                   for(int i=0;i<loadDD.length;i++,rep++)
                   {
                       qry="select challansheet_no,cashier_code,challan_no,edate,dp_code,DC_No,closing_date,closing_status from challan_detail where edate='"+loadDD[i]+"'";
                       loadDetail=object1.getInformationDD(qry,8,Main.year);
                       if(loadDetail!=null)
                       {
                           for(int j=0;j<loadDetail.length;j++,rep++)
                           {
                               qry="insert into carryforward_challan_detail values("+Integer.parseInt(loadDetail[j][0])+","+Integer.parseInt(loadDetail[j][1])+","+Integer.parseInt(loadDetail[j][2])+",'"+loadDetail[j][3]+"',"+Integer.parseInt(loadDetail[j][4])+","+Integer.parseInt(loadDetail[j][5])+",'"+loadDetail[j][6]+"',"+Integer.parseInt(loadDetail[j][7])+")";
                               object1.saveInformation(qry, newyear);
                                jProgressBar1.setValue(rep);
                           }
                       }

                       qry="select dp_code,edate,pmrno,CO7,CO6,cashier_code,partyname,amount,amounttype,status,paymentdate from build_distribution where edate='"+loadDD[i]+"'";
                       loadDetail=object1.getInformationDD(qry, 11,Main.year);
                       if(loadDetail!=null)
                       {
                           for(int j=0;j<loadDetail.length;j++,rep++)
                           {
                               qry="insert into carryforward_build_distribution values("+loadDetail[j][0]+",'"+loadDetail[j][1]+"',"+Integer.parseInt(loadDetail[j][2])+","+Integer.parseInt(loadDetail[j][3])+","+Integer.parseInt(loadDetail[j][4])+","+Integer.parseInt(loadDetail[j][5])+",'"+loadDetail[j][6]+"',"+Double.valueOf(loadDetail[j][7])+",'"+loadDetail[j][8]+"',"+Integer.parseInt(loadDetail[j][9])+",'"+loadDetail[j][10]+"')";
                               object1.saveInformation(qry, newyear);
                                jProgressBar1.setValue(rep);

                           }
                       }
                        jProgressBar1.setValue(rep);
                   }
               }

               qry="Select cashier_code from cashier_detail";
               loadDD=object1.getResultSetAs_1D_Array(qry,Main.year);
               if(loadDD!=null)
               {
                   String deadDate=2000+"-"+1+"-"+1;
                   double tot=0.0,debitAmt=0.0,CreditAmt=0.0,totalDueAmount=0.0,totalOpeningAmount=0.0;
                   for(int i=0;i<loadDD.length;i++,rep++)
                   {
                       tot=0.0;
                       debitAmt=0.0;
                       CreditAmt=0.0;
                       totalDueAmount=0.0;
                       qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(loadDD[i]);
                       String totalDebitAmount=object1.getSigetngleValue(qry,Main.year);
                       debitAmt=Double.valueOf(totalDebitAmount);
                       qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(loadDD[i])+" and paymentdate<>'"+deadDate+"'";
                       String totalCreditAmount=object1.getSigetngleValue(qry,Main.year);
                       CreditAmt=Double.valueOf(totalCreditAmount);
                       if(totalDebitAmount!=null && totalCreditAmount!=null)
                       {
                           if(debitAmt>=CreditAmt)
                               tot=debitAmt-CreditAmt;

                           qry="insert into cashier_creditbalance values("+Integer.parseInt(loadDD[i])+","+tot+")";
                           object1.saveInformation(qry, newyear);
                       }

                      totalDueAmount=dueAmount(loadDD[i]);

                      qry="insert into opening_dueamount values("+Integer.parseInt(loadDD[i])+","+totalDueAmount+")";
                      object1.saveInformation(qry, newyear);


                      totalOpeningAmount=openingAmount(loadDD[i]);

                      qry="insert into cashier_openingamount values("+Integer.parseInt(loadDD[i])+","+totalOpeningAmount+")";
                      object1.saveInformation(qry, newyear);

                      jProgressBar1.setValue(rep);



                   }
               }
                      qry="Select distinct(pfNo) from salaryinfo";
                      String getSalaryDate[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                      if(getSalaryDate!=null)
                      {
                          for(int x=0;x<getSalaryDate.length;x++,rep++)
                          {
                              qry="Select salaryDate,generationDate,empName,designation,scale,grPay,pfNo,qrNo,ppaNo,panNo,pay,ta,ata,fpa,da,hra,ada,wa,rtf,nps,ncpf,npsa,vpf,rent,echarge,wcharge,cc,nisg,fa,mca,gcnps,ptc,icr,sd,slr,grossPay,totalDeduction,netPay,generatedByID from salaryinfo order by salaryDate desc";
                              loadDetail=object1.getInformationDD(qry,39, newyear);
                              if(loadDetail!=null)
                              {
                                 // qry="insert into salaryinfo values";
                                  for(int z=0;z<loadDetail.length;z++,rep++)
                                  {
                                        qry="insert into salaryinfo values('"+loadDetail[z][0]+"','"+loadDetail[z][1]+"','"+loadDetail[z][2].toUpperCase()+"','"+loadDetail[z][3]+"','"+loadDetail[z][4]+"','"+loadDetail[z][5]+"','"+loadDetail[z][6]+"','"+loadDetail[z][7]+"','"+loadDetail[z][8]+"','"+loadDetail[z][9]+"','"+loadDetail[z][10]+"','"+loadDetail[z][11]+"','"+loadDetail[z][12]+"','"+loadDetail[z][13]+"','"+loadDetail[z][14]+"','"+loadDetail[z][15]+"','"+loadDetail[z][16]+"','"+loadDetail[z][17]+"','"+loadDetail[z][18]+"','"+loadDetail[z][19]+"','"+loadDetail[z][20]+"','"+loadDetail[z][21]+"','"+loadDetail[z][22]+"','"+loadDetail[z][23]+"','"+loadDetail[z][24]+"','"+loadDetail[z][25]+"','"+loadDetail[z][26]+"','"+loadDetail[z][27]+"','"+loadDetail[z][28]+"','"+loadDetail[z][29]+"','"+loadDetail[z][30]+"','"+loadDetail[z][31]+"','"+loadDetail[z][32]+"','"+loadDetail[z][33]+"','"+loadDetail[z][34]+"','"+loadDetail[z][35]+"','"+loadDetail[z][36]+"','"+loadDetail[z][37]+"','"+loadDetail[z][38]+"')";
                                        object1.saveInformation(qry, newyear);
                                        jProgressBar1.setValue(rep);

                                  }

                              }
                          }
                      }









                }


             }
             catch(Exception e)
             {
                 System.out.println("Error ! In uploadNewFinancialYear class."+e);
             }
     }


 }*/
 private double dueAmount(String cashiercode)
{
    double amount=0.0,receivedamount=0.0,dueAmount=0.0,totalDueAmt=0.0,totdue=0.0,returningAmt=0.0;
    String load=cashiercode;
  //  String dpCode=dpcode;
    try
    {
       /* String d1[]=jLabel2.getText().split("-");
        String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];*/
       // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String  qry="Select dueamount from opening_dueamount where cashier_code="+Integer.parseInt(load)+"";
        String dueAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(dueAmt[0]!=null)// || dueAmt.length>0)
                  dueAmount=Double.valueOf(dueAmt[0]);
        else if(dueAmt[0]==null)
                  dueAmount=0.0;

        qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load)+" and amounttype='"+"Cash"+"'";
        String amt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(amt[0]!=null )//|| amt.length>0)
                  amount=Double.valueOf(amt[0]);
        else if(amt[0]==null)
                  amount=0.0;
                  //////sum of received amount///////////////
        qry="Select sum(received_amount) from received_cash_detail where cashier_code="+Integer.parseInt(load)+"";
        String receivedAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(receivedAmt[0]!=null)// || receivedAmt.length>0)
                  receivedamount=Double.valueOf(receivedAmt[0]);
        else if(receivedAmt[0]==null)
                  receivedamount=0.0;
        totdue=(dueAmount+amount);
        if(totdue>=receivedamount)
            totalDueAmt=totdue-receivedamount;
        else
            totalDueAmt=totdue;
            System.out.println("totalDueAmt................"+totalDueAmt);

        String deadDate=2000+"-"+1+"-"+1;
        /////////////returning dues of closed challan/////////////////
        qry="Select edate from challan_detail where cashier_code="+Integer.parseInt(load)+" and closing_status="+"1"+" order by edate asc";
        String loadDate[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(loadDate!=null && loadDate.length>0)
        {
            for(int i=0;i<loadDate.length;i++)
            {
                String D1[]=loadDate[i].split("-");
                String matchDate=D1[2]+"-"+D1[1]+"-"+D1[0];
                qry="Select sum(amount) from build_distribution where edate='"+matchDate+"' and paymentdate='"+deadDate+"' and (amounttype='"+"Cash"+"' and cashier_code="+Integer.parseInt(load)+")";
                String getReturningAmount=object1.getSigetngleValue(qry,Main.year);
                if(getReturningAmount!=null && getReturningAmount.length()>0)
                {
                    returningAmt=Double.valueOf(getReturningAmount);
                }
                else
                {
                    returningAmt=0.0;
                }
            }
        }
        if(totalDueAmt>=returningAmt)
            totalDueAmt=totalDueAmt-returningAmt;
        /////////////////////////////////////////////////////////////
    }
    catch(Exception e)
    {
        System.out.println("Error ! In due Amount Method."+e);
    }
    return totalDueAmt;
}



}
