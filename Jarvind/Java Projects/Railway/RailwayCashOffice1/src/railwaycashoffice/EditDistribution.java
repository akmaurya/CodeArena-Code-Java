/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditDistribution.java
 *
 * Created on May 1, 2012, 1:26:50 PM
 */

package railwaycashoffice;

import java.awt.Color;
import java.math.BigInteger;

/**
 *
 * @author pratiksha
 */
public class EditDistribution extends javax.swing.JInternalFrame {
boolean flag=true;
    /** Creates new form EditDistribution */
    public EditDistribution() {
        initComponents();
        System.out.println("-----------------edit bill distribution...---------------------------");
        java.util.Date dt=new java.util.Date();
        int date=dt.getDate();
        int month=dt.getMonth()+1;
        int yr=dt.getYear()+1900;
        String setDate=date+"-"+month+"-"+yr;
        jLabel9.setText(setDate);
        jTextField1.setText("");
        jTextField2.setText("");
        //jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");


        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        dtm=new javax.swing.table.DefaultTableModel();
        javax.swing.table.DefaultTableCellRenderer CRLeft = new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight = new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter = new javax.swing.table.DefaultTableCellRenderer();
        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        javax.swing.table.TableColumn column;
        String heading1[]={"Sr. No.","Bill Date","PMR No.","CO7","CO6","Cashier No.","Party Name","Cash Amount","Bill Type","Cheque Amount"};
        dtm=new javax.swing.table.DefaultTableModel(heading1,0);
        jTable1.setModel(dtm);
            column=jTable1.getColumn("Sr. No.");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(50);
            column=jTable1.getColumn("Bill Date");
            column.setCellRenderer(CRCenter);
            column.setPreferredWidth(90);
            column=jTable1.getColumn("PMR No.");
            column.setCellRenderer(CRCenter);
            column.setPreferredWidth(70);
            column=jTable1.getColumn("CO7");
            column.setCellRenderer(CRCenter);
            column.setPreferredWidth(80);
            column=jTable1.getColumn("CO6");
            column.setCellRenderer(CRCenter);
            column.setPreferredWidth(80);
            column=jTable1.getColumn("Cashier No.");
            column.setCellRenderer(CRCenter);
            column.setPreferredWidth(70);
            column=jTable1.getColumn("Party Name");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(90);
            column=jTable1.getColumn("Cheque Amount");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(90);
            column=jTable1.getColumn("Bill Type");
            column.setCellRenderer(CRLeft);
            column.setPreferredWidth(80);
            column=jTable1.getColumn("Cash Amount");
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(90);
            jTable1.setRowHeight(30);
            loadInitialInfo();
            jButton1.requestFocus();

           


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox3 = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jMenuItem1.setText("Delete");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setClosable(true);
        setIconifiable(true);
        setTitle("EDIT :: BILL DISTRIBUTION TO CASHIER");
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(131, 170, 165));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("PMR No.");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 20, 80, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setText("CO7");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 70, 100, 20);

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("jTextField1");
        jTextField1.setToolTipText("Please input CO7 number");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(90, 70, 130, 25);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("CO6");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 120, 100, 20);

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("jTextField2");
        jTextField2.setToolTipText("Please input CO6 number");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField2FocusLost(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField2);
        jTextField2.setBounds(90, 120, 130, 25);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel6.setText("Cashier No.");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 170, 100, 20);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel7.setText("Party Name");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 220, 100, 20);

        jTextField4.setText("jTextField4");
        jTextField4.setToolTipText("Please input party name");
        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField4FocusLost(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
        });
        jPanel1.add(jTextField4);
        jTextField4.setBounds(90, 220, 130, 25);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel10.setText("Cash Amt.");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(10, 270, 100, 20);

        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("jTextField5");
        jTextField5.setToolTipText("Please input amount");
        jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField5FocusLost(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
        });
        jPanel1.add(jTextField5);
        jTextField5.setBounds(90, 270, 130, 25);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/Close1.gif"))); // NOI18N
        jButton2.setMnemonic('c');
        jButton2.setText("Close");
        jButton2.setToolTipText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton2FocusLost(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(590, 350, 270, 30);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/update.gif"))); // NOI18N
        jButton3.setMnemonic('u');
        jButton3.setText("Update");
        jButton3.setToolTipText("Update Information");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed1(evt);
            }
        });
        jButton3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton3FocusLost(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed1(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(10, 350, 270, 30);

        jComboBox2.setToolTipText("Please select amount type");
        jComboBox2.setEnabled(false);
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox2KeyPressed(evt);
            }
        });
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(90, 290, 130, 25);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(230, 20, 630, 300);

        jComboBox3.setToolTipText("Please select cashier  number");
        jComboBox3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox3FocusLost(evt);
            }
        });
        jComboBox3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox3KeyPressed(evt);
            }
        });
        jPanel1.add(jComboBox3);
        jComboBox3.setBounds(90, 170, 130, 25);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/delete.gif"))); // NOI18N
        jButton4.setMnemonic('d');
        jButton4.setText("Delete");
        jButton4.setToolTipText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed1(evt);
            }
        });
        jButton4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton4FocusLost(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed1(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(300, 350, 270, 30);

        jLabel5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jLabel5.setText("jTextField3");
        jLabel5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLabel5FocusGained(evt);
            }
        });
        jLabel5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel5KeyPressed(evt);
            }
        });
        jPanel1.add(jLabel5);
        jLabel5.setBounds(90, 20, 130, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 80, 870, 400);

        jLabel1.setBackground(new java.awt.Color(156, 163, 119));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Select Department");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(350, 30, 190, 25);

        jComboBox1.setToolTipText("Please select department");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(540, 30, 350, 26);

        jLabel8.setBackground(new java.awt.Color(156, 163, 119));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Date");
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(20, 30, 70, 25);

        jLabel9.setBackground(new java.awt.Color(255, 255, 204));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("jLabel9");
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(90, 30, 200, 25);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/calendar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(290, 30, 30, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents
 /*private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:


    }*/
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField1ActionPerformed
    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jTextField2.requestFocus();
        }
}//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jComboBox3.requestFocus();
        }
}//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
        //    lastLoad();
}//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jTextField5.requestFocus();
        }
}//GEN-LAST:event_jTextField4KeyPressed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jButton3.requestFocus();
        }
}//GEN-LAST:event_jTextField5KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
             updateRecord();
   
}//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jButton3.requestFocus();
        }
}//GEN-LAST:event_jComboBox2KeyPressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        //javax.swing.JOptionPane.showMessageDialog(null,"coming here first.....");
        if(!jComboBox1.getSelectedItem().equals("Select"))
        {
            loadDetail();
        }
        else
        {
            jTextField1.setText("");
            jTextField2.setText("");
            //jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jLabel5.setText("0");
            dtm.setRowCount(0);

        }
}//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jTextField1.requestFocus();
        }
}//GEN-LAST:event_jComboBox1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Cal date1=new Cal();
        jLabel9.setText(date1.getdate());
        /*if(!jComboBox1.getSelectedItem().equals("Select"))
        {
            loadDetail();
        }
        else
        {
            jTextField1.setText("");
            jTextField2.setText("");
            //jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jLabel5.setText("0");
            dtm.setRowCount(0);

        }*/
        jComboBox1.requestFocus();
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            Cal date1=new Cal();
            jLabel9.setText(date1.getdate());
        /*if(!jComboBox1.getSelectedItem().equals("Select"))
        {
            loadDetail();
        }
        else
        {
            jTextField1.setText("");
            jTextField2.setText("");
            //jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jLabel5.setText("0");
            dtm.setRowCount(0);

        }*/
        jComboBox1.requestFocus();
        }
}//GEN-LAST:event_jButton1KeyPressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        deleteRecord();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if(evt.getModifiers()==4)
        {
            //javax.swing.JOptionPane.showMessageDialog(null,"Coming here......");
            jPopupMenu1.show(jTable1,evt.getX(),evt.getY());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
        uploadSelectedRow();
    }//GEN-LAST:event_jTable1MousePressed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode()==10)
         {
             updateRecord();
         }
    
    }//GEN-LAST:event_jButton3KeyPressed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox3KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
            jTextField4.requestFocus();
}//GEN-LAST:event_jComboBox3KeyPressed

    private void jButton3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton3FocusGained
        // TODO add your handling code here:
         jButton3.setBackground(Color.yellow);
    }//GEN-LAST:event_jButton3FocusGained

    private void jButton3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton3FocusLost
        // TODO add your handling code here:
        jButton3.setBackground(Color.white);
    }//GEN-LAST:event_jButton3FocusLost

    private void jButton2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusGained
        // TODO add your handling code here:
      jButton2.setBackground(Color.yellow);
    }//GEN-LAST:event_jButton2FocusGained

    private void jButton2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusLost
        // TODO add your handling code here:
       jButton2.setBackground(Color.white);
    }//GEN-LAST:event_jButton2FocusLost

    private void jButton3ActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed1
        // TODO add your handling code here:
        if(jTable1.getRowCount()>0)
        {
            int r=jTable1.getSelectedRow();
           if(r>=0)
           {
                if(jComboBox1.getSelectedIndex()!=0)
                {
                    if(checkForEditOrDelete())
                    {
                        try
                        {
                        //    interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
                            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
                            String qry="select dp_code from department_detail where dp_name='"+""+jComboBox1.getSelectedItem()+"'";
                            int dept_code=Integer.parseInt(object1.getSigetngleValue(qry,Main.year));
                            qry="select cashier_code from cashier_detail where cashier_number='"+""+jComboBox3.getSelectedItem()+"'";
                            int cascode=Integer.parseInt(object1.getSigetngleValue(qry,Main.year));
                            String t[]=jLabel9.getText().split("-");
                            String newDate=t[2]+"-"+t[1]+"-"+t[0];
                            qry="select closing_status from challan_detail where cashier_code="+cascode+" and dp_code="+dept_code+" and edate>='"+newDate+"' and closing_status=1";
                            String temp=(object1.getSigetngleValue(qry,Main.year));
                            if(temp!=null &&(! (temp.equals(""))))//check for changed date is allowed or not
                            {
                                //nothing
                                javax.swing.JOptionPane.showMessageDialog(this,"Changed Bill Date is not possible.");
                            }
                            else//changing of bill date possible.
                            {
                                //update
                                updateRecord();
                            }
                        }
                        catch(Exception e)
                        {
                            javax.swing.JOptionPane.showMessageDialog(this,"Error in updation.");
                        }
                    }
                    else
                    {
                        if(flag)
                            javax.swing.JOptionPane.showMessageDialog(this,"Paid Bill can't updated.");
                    }
                }
            }

            else
            {
                javax.swing.JOptionPane.showMessageDialog(this,"Please select record to update.");
                jTable1.setRowSelectionInterval(0, 0);
            }
        }
        else
        {
                        javax.swing.JOptionPane.showMessageDialog(this,"No record found to update.");
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed1

    private void jButton3KeyPressed1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed1
        // TODO add your handling code here:
        if(jTable1.getRowCount()>0)
        {
            int r=jTable1.getSelectedRow();
           if(r>=0)
           {
                if(jComboBox1.getSelectedIndex()!=0)
                {
                    if(checkForEditOrDelete())
                    {
                        try
                        {
                         //   interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
                            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
                            String qry="select dp_code from department_detail where dp_name='"+""+jComboBox1.getSelectedItem()+"'";
                            int dept_code=Integer.parseInt(object1.getSigetngleValue(qry,Main.year));
                            qry="select cashier_code from cashier_detail where cashier_number='"+""+jComboBox3.getSelectedItem()+"'";
                            int cascode=Integer.parseInt(object1.getSigetngleValue(qry,Main.year));
                            String t[]=jLabel9.getText().split("-");
                            String newDate=t[2]+"-"+t[1]+"-"+t[0];
                            qry="select closing_status from challan_detail where cashier_code="+cascode+" and dp_code="+dept_code+" and edate>='"+newDate+"' and closing_status=1";
                            String temp=(object1.getSigetngleValue(qry,Main.year));
                            if(temp!=null &&(! (temp.equals(""))))//check for changed date is allowed or not
                            {
                                //nothing
                                javax.swing.JOptionPane.showMessageDialog(this,"Changed Bill Date is not possible.");
                            }
                            else//changing of bill date possible.
                            {
                                //update
                                updateRecord();
                            }
                        }
                        catch(Exception e)
                        {
                            javax.swing.JOptionPane.showMessageDialog(this,"Error in updation.");
                        }
                    }
                    else
                    {
                        if(flag)
                            javax.swing.JOptionPane.showMessageDialog(this,"Paid Bill can't updated.");
                    }
                }
            }

            else
            {
                javax.swing.JOptionPane.showMessageDialog(this,"Please select record to update.");
                jTable1.setRowSelectionInterval(0, 0);
            }
        }
        else
        {
                        javax.swing.JOptionPane.showMessageDialog(this,"No record found to update.");
        }
    }//GEN-LAST:event_jButton3KeyPressed1

    private void jButton4ActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed1
        // TODO add your handling code here:
        if(jTable1.getRowCount()>0)
        {
            int r=jTable1.getSelectedRow();

        if(r>=0)
        {
        if(jComboBox1.getSelectedIndex()!=0)
        if(checkForEditOrDelete())
            deleteRecord();
        else
            if(flag)
                javax.swing.JOptionPane.showMessageDialog(this,"Paid Bill can't deleted.");
        }

        else
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Please select record to delete.");
            jTable1.setRowSelectionInterval(0, 0);
        }
        }
        else
        {
                        javax.swing.JOptionPane.showMessageDialog(this,"No record found to delete.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed1

    private void jButton4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton4FocusGained
        // TODO add your handling code here:
       jButton4.setBackground(Color.yellow);
    }//GEN-LAST:event_jButton4FocusGained

    private void jButton4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton4FocusLost
        // TODO add your handling code here:
      jButton4.setBackground(Color.white);
    }//GEN-LAST:event_jButton4FocusLost

    private void jButton4KeyPressed1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed1
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            if(jTable1.getRowCount()>0)
        {
            int r=jTable1.getSelectedRow();

        if(r>=0)
        {
        if(jComboBox1.getSelectedIndex()!=0)
        if(checkForEditOrDelete())
            deleteRecord();
        else
            if(flag)
                javax.swing.JOptionPane.showMessageDialog(this,"Paid Bill can't deleted.");
        }

        else
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Please select record to delete.");
            jTable1.setRowSelectionInterval(0, 0);
        }
        }
        else
        {
                        javax.swing.JOptionPane.showMessageDialog(this,"No record found to delete.");
        }
        }
    }//GEN-LAST:event_jButton4KeyPressed1

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
            this.dispose();
    }//GEN-LAST:event_jButton2KeyPressed

    private void jLabel5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel5KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField1.requestFocus();
        }
    }//GEN-LAST:event_jLabel5KeyPressed

    private void jLabel5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLabel5FocusGained
        // TODO add your handling code here:

        jLabel5.selectAll();
    }//GEN-LAST:event_jLabel5FocusGained

    private void jTextField5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField5FocusGained
        // TODO add your handling code here:
        jTextField5.selectAll();
        jTextField5.setBackground(Color.yellow);
    }//GEN-LAST:event_jTextField5FocusGained

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
         jTextField1.selectAll();
        jTextField1.setBackground(Color.yellow);

    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
          jTextField1.setBackground(Color.white);
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
        // TODO add your handling code here:
        jTextField2.selectAll();
        jTextField2.setBackground(Color.yellow);
    }//GEN-LAST:event_jTextField2FocusGained

    private void jTextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusLost
        // TODO add your handling code here:
         jTextField2.setBackground(Color.white);
    }//GEN-LAST:event_jTextField2FocusLost

    private void jComboBox3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox3FocusGained
        // TODO add your handling code here:
         jComboBox3.setBackground(Color.yellow);
    }//GEN-LAST:event_jComboBox3FocusGained

    private void jComboBox3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox3FocusLost
        // TODO add your handling code here:
         jComboBox3.setBackground(Color.white);
    }//GEN-LAST:event_jComboBox3FocusLost

    private void jTextField4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusGained
        // TODO add your handling code here:
         jTextField4.selectAll();
        jTextField4.setBackground(Color.yellow);
    }//GEN-LAST:event_jTextField4FocusGained

    private void jTextField4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusLost
        // TODO add your handling code here:
         jTextField4.setBackground(Color.white);
    }//GEN-LAST:event_jTextField4FocusLost

    private void jTextField5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField5FocusLost
        // TODO add your handling code here:
        jTextField5.setBackground(Color.white);
    }//GEN-LAST:event_jTextField5FocusLost
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
javax.swing.table.DefaultTableModel dtm;

private void loadInitialInfo()
{
    try
    {
        
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select cashtype from cash_type";
        String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(load!=null && load.length>0)
        {
            for(int i=0;i<load.length;i++)
            {
                jComboBox2.addItem(load[i]);
            }
        }
        qry="Select dp_name from department_detail order by dp_name";
        load=object1.getResultSetAs_1D_Array(qry,Main.year);

        if(load!=null && load.length>0)
        {
            jComboBox1.addItem("Select");
            for(int i=0;i<load.length;i++)
            {
                jComboBox1.addItem(load[i]);
            }
        }

        qry="Select cashier_number from cashier_detail order by cashier_number";
        load=object1.getResultSetAs_1D_Array(qry,Main.year);
        jComboBox3.removeAllItems();
        if(load!=null)
        {
            jComboBox3.addItem("Select");
            for(int i=0;i<load.length;i++)
            {
                jComboBox3.addItem(load[i]);
            }
        }

    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadInitialInfo Method."+e);
    }

}
private void loadDetail()
{
    dtm.setRowCount(0);
    jLabel5.setText("0");
    jTextField1.setText("");
    jTextField2.setText("");
    jTextField4.setText("");
    jTextField5.setText("");
    jComboBox3.setSelectedIndex(0);
    jComboBox2.setSelectedIndex(0);
    try
    {
        
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        /*String qry="Select cashier_code from cashier_detail where cashier_name='"+jComboBox1.getSelectedItem()+"'";
        String getCode=object1.getSigetngleValue(qry, year);*/
        String qry="Select dp_code from department_detail where dp_name='"+jComboBox1.getSelectedItem()+"'";
        String getDpCode=object1.getSigetngleValue(qry,Main.year);
        String getStr[]=jLabel9.getText().split("-");
        String setDate=getStr[2]+"-"+getStr[1]+"-"+getStr[0];
        String deadDate=2000+"-"+1+"-"+1;
        if(getDpCode!=null)
        {
            qry="Select edate from challan_detail where edate='"+setDate+"' and dp_Code="+Integer.parseInt(getDpCode)+" and closing_status="+0;
            String getDate=object1.getSigetngleValue(qry,Main.year);
            if(getDate!=null && getDate.length()>0)
            {

                qry="Select edate,pmrno,CO7,CO6,cashier_code,partyname,mix_amount,amounttype,chq_Amt from build_distribution where dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate+"' and paymentDate='"+deadDate+"' order by pmrno";
                String loadDetail[][]=object1.getInformationDD(qry, 9,Main.year);
                if(loadDetail!=null)
                {
                    String arr[]=new String[10];
                    int ind=0;
                    for(int i=0;i<loadDetail.length;i++)
                    {
                        arr[0]=""+(++ind)+".";
                        String temp[]=loadDetail[i][0].split("-");
                        String billDate=temp[2]+"-"+temp[1]+"-"+temp[0];
                        arr[1]=billDate;
                        arr[2]=loadDetail[i][1];
                        arr[3]=loadDetail[i][2];
                        arr[4]=loadDetail[i][3];
                        arr[5]=object1.getSigetngleValue("select cashier_number from cashier_detail where cashier_code="+Integer.parseInt(loadDetail[i][4]), Main.year);
                        arr[6]=loadDetail[i][5];
                        arr[7]=""+(new java.math.BigDecimal(loadDetail[i][6])).setScale(2,5);
                        arr[8]=loadDetail[i][7];///amount type
                        if(arr[8].equals("Cash n Cheque"))
                        {
                               // arr[9]=loadDetail[i][8];
                            arr[9]=(""+new java.math.BigDecimal(loadDetail[i][8]).setScale(2,5));
                        }
                        else
                        {
                            arr[9]="";
                        }
                        
                        dtm.addRow(arr);
                    }
                }
                
            }
            else if(getDate.length()==0)
            {

                qry="Select edate,pmrno,CO7,CO6,cashier_code,partyname,amount,amounttype,chq_Amt from build_distribution where dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate+"' and paymentDate='"+deadDate+"' order by pmrno";
                String loadDetail[][]=object1.getInformationDD(qry, 9,Main.year);
                if(loadDetail!=null)
                {
                    String arr[]=new String[10];
                    int ind=0;
                    for(int i=0;i<loadDetail.length;i++)
                    {
                        arr[0]=""+(++ind)+".";
                        String temp[]=loadDetail[i][0].split("-");
                        String billDate=temp[2]+"-"+temp[1]+"-"+temp[0];
                        arr[1]=billDate;
                        arr[2]=loadDetail[i][1];
                        arr[3]=loadDetail[i][2];
                        arr[4]=loadDetail[i][3];
                        arr[5]=object1.getSigetngleValue("select cashier_number from cashier_detail where cashier_code="+Integer.parseInt(loadDetail[i][4]), Main.year);
                        arr[6]=loadDetail[i][5];
                        arr[7]=""+(new java.math.BigDecimal(loadDetail[i][6])).setScale(2,5);
                        arr[8]=loadDetail[i][7];////amounttype
                         if(arr[8].equals("Cash n Cheque"))
                        {
                               // arr[9]=loadDetail[i][8];
                            arr[9]=(""+new java.math.BigDecimal(loadDetail[i][8]).setScale(2,5));
                        }
                        else
                        {
                            arr[9]="";
                        }
                      //  arr[9]=loadDetail[i][8];
                        dtm.addRow(arr);
                    }
                }

            }
            
        }



    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadDetail Method."+e);
    }

}
private void uploadSelectedRow()
{
    int row=jTable1.getSelectedRow();
    if(row!=-1)
    {
        jLabel9.setText(""+jTable1.getValueAt(row,1));
        jLabel5.setText(""+jTable1.getValueAt(row,2));
        jTextField1.setText(""+jTable1.getValueAt(row,3));
        jTextField2.setText(""+jTable1.getValueAt(row,4));
        jComboBox3.setSelectedItem(""+jTable1.getValueAt(row,5));
        jTextField4.setText(""+jTable1.getValueAt(row,6));
        jTextField5.setText(""+jTable1.getValueAt(row,7));
        jComboBox2.setSelectedItem(""+jTable1.getValueAt(row,8));
        //jTable1.removeRowSelectionInterval(row, row);
        jTextField1.requestFocus();
    }
    
}
private boolean updateRecord()
{
    try
    {

       // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
         if(jTextField1.getText().trim().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Please input CO7 number.");
            jTextField1.requestFocus();
            return false;
        }
        if(object1.isInteger(jTextField1.getText().trim())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please input number type(CO7) value only.");
            jTextField1.requestFocus();
            return false;

        }
         if(jLabel5.getText().trim().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Please input PMR NO. number.");
            jLabel5.requestFocus();
            return false;
        }
        if(object1.isInteger(jLabel5.getText().trim())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please input number type PMR NO. only.");
            jLabel5.requestFocus();
            return false;

        }
        if(jTextField2.getText().trim().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Please input CO6 number.");
            jTextField2.requestFocus();
            return false;
        }
        if(object1.isInteger(jTextField2.getText().trim())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Please input number type(CO6) value only.");
            jTextField2.requestFocus();
            return false;
        }
        if(jComboBox3.getSelectedIndex()==0)
        {

            javax.swing.JOptionPane.showMessageDialog(null,"Error! Please select cashier's number.");
            jComboBox3.requestFocus();
            return false;
        }
        /*if(object1.isInteger(jTextField3.getText().trim())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Please input number type(Cashier Code) value only.");
            jTextField3.requestFocus();
            return false;

        }
         *
         */
        if(jTextField4.getText().trim().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Please input party name.");
            jTextField4.requestFocus();
            return false;
        }
        if(jTextField5.getText().trim().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Please input amount.");
            jTextField5.requestFocus();
            return false;
        }
        if(object1.isDouble(jTextField5.getText().trim())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please input number type(amount) value.");
            jTextField5.requestFocus();
            return false;

        }



        String getStr[]=jLabel9.getText().split("-");
        String setDate=getStr[2]+"-"+getStr[1]+"-"+getStr[0];
        getStr=(""+jTable1.getValueAt(jTable1.getSelectedRow(),1)).split("-");
        String date=getStr[2]+"-"+getStr[1]+"-"+getStr[0];
        //System.out.println("setDate.................."+setDate);

        
        String qry="Select dp_code from department_detail where dp_name='"+jComboBox1.getSelectedItem()+"'";
        String getDpCode=object1.getSigetngleValue(qry,Main.year);
        if(getDpCode!=null)
        {

              /*qry="Select CO6 from build_distribution where dp_code="+Integer.parseInt(getDpCode);
              String CO6=object1.getSigetngleValue(qry, year);
              if(Integer.parseInt(CO6)!=Integer.parseInt(jTextField2.getText().trim()))
              {*/
            int ind=jTable1.getSelectedRow();
            int flag=0;
            if(Integer.parseInt(jTextField2.getText().trim())!=Integer.parseInt(""+jTable1.getValueAt(ind,4)))
            {
                qry="Select CO6 from build_distribution where CO6="+Integer.parseInt(jTextField2.getText().trim())+" and dp_code="+Integer.parseInt(getDpCode)+"";
                String getValCO6=object1.getSigetngleValue(qry,Main.year);
                System.out.println("getValCO6........."+getValCO6);
                if(getValCO6.equals("")==false)
                {
                    flag=1;
                }
                    
            }
            System.out.println("flag==="+flag);
            if(flag==1)
            {
                javax.swing.JOptionPane.showMessageDialog(null,"Duplicate entry of CO6 must not be accepted.");
                jTextField2.requestFocus();
                jTextField2.selectAll();
            }
            else
            {
                //cheque duplicate pmr no.
                if(Integer.parseInt(jLabel5.getText())!=Integer.parseInt(""+jTable1.getValueAt(jTable1.getSelectedRow(), 2)))
                {
                    qry="Select pmrno from build_distribution where  dp_code="+Integer.parseInt(getDpCode)+" and pmrno="+Integer.parseInt(jLabel5.getText())+"";
                    String getValPMR=object1.getSigetngleValue(qry,Main.year);
                    if(getValPMR.equals("")==false) //available
                    {
                        javax.swing.JOptionPane.showMessageDialog(null,"Duplicate entry of PMR NO. must not be accepted.");
                        jLabel5.requestFocus();
                        jLabel5.selectAll();
                        return false;
                    }
                }
                qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jComboBox3.getSelectedItem())+"";
                String getCashierCode=object1.getSigetngleValue(qry, Main.year);
                //--creation of log table
                creationOfLogTable("UPDATE");
                //--log table creation close
                  System.out.println("1.....");
                  String type=""+jComboBox2.getSelectedItem();
                  if(type.equalsIgnoreCase("Cheque"))
                    qry="update build_distribution set edate='"+setDate+"',CO7='"+jTextField1.getText().trim()+"',CO6="+Integer.parseInt(jTextField2.getText().trim())+",cashier_code="+Integer.parseInt(getCashierCode)+",partyname='"+jTextField4.getText().trim().toUpperCase()+"',mix_amount="+Double.valueOf(jTextField5.getText().trim())+",chq_amt="+Double.valueOf(jTextField5.getText().trim())+",amounttype='"+(jComboBox2.getSelectedItem())+"',pmrno="+Integer.parseInt(jLabel5.getText())+" where  dp_code="+Integer.parseInt(getDpCode)+" and pmrno="+Integer.parseInt(""+jTable1.getValueAt(jTable1.getSelectedRow(), 2))+" and edate='"+date+"'";
                  else
                  {
                     double remain=Double.valueOf(jTextField5.getText())-Double.valueOf(""+jTable1.getValueAt(jTable1.getSelectedRow(),7));
                     String q="select amount,mix_amount from build_distribution where dp_code="+Integer.parseInt(getDpCode)+" and pmrno="+Integer.parseInt(""+jTable1.getValueAt(jTable1.getSelectedRow(), 2))+" and edate='"+date+"'";
                     String data[][]=object1.getInformationDD(q,2, Main.year);
                     System.out.println("len="+data.length);
                     if(data!=null && data.length>0)
                     {
                            double amt=Double.valueOf(data[0][0]);
                            System.out.println("amt="+amt);
                            double mix_amt=Double.valueOf(data[0][1]);
                            System.out.println("mamt="+mix_amt);
                            amt+=remain;
                            mix_amt+=remain;
                            qry="update build_distribution set edate='"+setDate+"',CO7='"+jTextField1.getText().trim()+"',CO6="+Integer.parseInt(jTextField2.getText().trim())+",cashier_code="+Integer.parseInt(getCashierCode)+",partyname='"+jTextField4.getText().trim().toUpperCase()+"',amount="+amt+",mix_amount="+mix_amt+",amounttype='"+(jComboBox2.getSelectedItem())+"',pmrno="+Integer.parseInt(jLabel5.getText())+" where  dp_code="+Integer.parseInt(getDpCode)+" and pmrno="+Integer.parseInt(""+jTable1.getValueAt(jTable1.getSelectedRow(), 2))+" and edate='"+date+"'";
                     }
                  }
                  System.out.println("2....."+qry);
                  boolean bn=object1.saveInformation(qry,Main.year);
                  System.out.println("22.....");
                  if(bn)
                  {
                      System.out.println("3.....");
                    javax.swing.JOptionPane.showMessageDialog(null,"Process Completed");
                    jTextField1.setText("");
                    jTextField2.setText("");
                    //jTextField3.setText("");
                    jTextField4.setText("");
                    jTextField5.setText("");
                    jComboBox2.setSelectedIndex(0);
                    jLabel5.setText("0");
                    jComboBox3.setSelectedIndex(0);
                    /*java.util.Date dt=new java.util.Date();
                    int date=dt.getDate();
                    int month=dt.getMonth()+1;
                    int yr=dt.getYear()+1900;
                    setDate=date+"-"+month+"-"+yr;
                    jLabel9.setText(setDate);
                     * 
                     */
                    loadDetail();
                 }
            }
              /*}
              else
              {
               javax.swing.JOptionPane.showMessageDialog(null,"Duplicate CO6 can not be accepted");
              }*/
        }

    }
    catch(Exception e)
    {
        System.out.println("Error ! In updateRecord Method."+e);
    }
    return false;
}
    private boolean deleteRecord()
    {
        try
        {
            //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
            int response=javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure about this deletion? This may effect some another report.\nClick YES if you accept, otherwise click on NO.","Confirmation",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
            if(response==javax.swing.JOptionPane.YES_OPTION)
            {
                String qry="Select dp_code from department_detail where dp_name='"+jComboBox1.getSelectedItem()+"'";
                String getDpCode=object1.getSigetngleValue(qry,Main.year);
                
                String getStr[]=(""+jTable1.getValueAt(jTable1.getSelectedRow(),1)).split("-");
                String setDate=getStr[2]+"-"+getStr[1]+"-"+getStr[0];
                //System.out.println("A");
                //--creation of log table of build distribution--
                creationOfLogTable("DELETE");
                //--log table creation close
                int r=jTable1.getSelectedRow();
                //System.out.println("A1");
                qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jTable1.getValueAt(r,5))+"";
                String getCashierCode=object1.getSigetngleValue(qry, Main.year);
                //System.out.println("A2");
                qry="select bill_code from build_distribution where dp_Code="+Integer.parseInt(getDpCode)+" and edate='"+setDate+"' and pmrno="+Integer.parseInt(""+jTable1.getValueAt(r,2))+" and CO7='"+""+jTable1.getValueAt(r,3)+"' and CO6="+Integer.parseInt(""+jTable1.getValueAt(r,4))+" and cashier_code="+Integer.parseInt(getCashierCode)+"";
                //System.out.println("A3:"+qry+";"+object1.getSigetngleValue(qry,Main.year));
                //long billCode=Long.getLong(object1.getSigetngleValue(qry,Main.year));
                int billCode=Integer.parseInt(object1.getSigetngleValue(qry,Main.year));
                //System.out.println("A3");
                qry="delete from cheque_details where bill_Code="+billCode+"";
                object1.saveInformation(qry,Main.year);
                //System.out.println("A4");
                qry="delete  from build_distribution  where  dp_code="+Integer.parseInt(getDpCode)+" and pmrno="+Integer.parseInt(""+jTable1.getValueAt(jTable1.getSelectedRow(), 2))+" and edate='"+setDate+"'";
                boolean bn=object1.saveInformation(qry,Main.year);
                javax.swing.JOptionPane.showMessageDialog(null,"Process Completed");
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                jComboBox2.setSelectedIndex(0);
                loadDetail();
            }
        }
        catch(Exception ex)
        {
            System.out.println("Error 829..."+ex);
        }
        return true;
    }
    public boolean checkForEditOrDelete()
    {

        try
        {
            flag=true;
            //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
            String qry="select dp_code from department_detail where dp_name='"+""+jComboBox1.getSelectedItem()+"'";
            int dept_code=Integer.parseInt(object1.getSigetngleValue(qry,Main.year));
            qry="select cashier_code from cashier_detail where cashier_number='"+""+jComboBox3.getSelectedItem()+"'";
            int cascode=Integer.parseInt(object1.getSigetngleValue(qry,Main.year));
            //qry="select challan_no from challan_detail where cashier_code="+cascode+" and dp_code="+dept_code+" and closing_status=0";
            //String chno=object1.getSigetngleValue(qry,Main.year);
            //qry="select status from build_distribution where dp_code="+dept_code+" and pmrno="+Integer.parseInt(jLabel5.getText())+" and status=0";
            qry="select status from build_distribution where dp_code="+dept_code+" and pmrno="+Integer.parseInt(""+jTable1.getValueAt(jTable1.getSelectedRow(), 2))+" and status=0";
            int status=Integer.parseInt(object1.getSigetngleValue(qry,Main.year));
            if(status==0)//if bill not paid
            {
                String t[]=jLabel9.getText().split("-");
                String newDate=t[2]+"-"+t[1]+"-"+t[0];
                t=(""+jTable1.getValueAt(jTable1.getSelectedRow(),1)).split("-");
                String tableDate=t[2]+"-"+t[1]+"-"+t[0];
                qry="select challan_no from challan_detail where cashier_code="+cascode+" and dp_code="+dept_code+" and edate='"+tableDate+"'";
                String chno=object1.getSigetngleValue(qry,Main.year);
                if(chno!=null &&(! (chno.equals(""))))//challan generated
                {
                    qry="select closing_status from challan_detail where cashier_code="+cascode+" and dp_code="+dept_code+" and edate='"+tableDate+"' and closing_status=0";
                    int closingStatus=Integer.parseInt(object1.getSigetngleValue(qry,Main.year));
                    if(closingStatus==0)//challan not closed
                    {
                        //update bill
                        return true;
                    }
                    else//closing done
                    {
                        //nothing
                        flag=false;
                        return false;
                    }
                }
                else//challan not generated
                {
                    //update bill
                    return true;
                }
            }
            else//bill paid
            {
                //nothing
                flag=true;
                return false;
            }
        }
        catch(Exception e)
        {
            System.out.println("Error....."+e);
            return false;
        }
    }
    private boolean checkAdminId(String pws)
    {
        try
        {
           // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
            String qry="select adminID from loginmaster where uPws='"+""+pws+"' and uLevel=0";
            String id=object1.getSigetngleValue(qry,Main.year);
            if(!(id.equalsIgnoreCase("")))
                return true;
            else
                return false;
        }
        catch(Exception e)
        {
            System.out.println("Errr..."+e);
            return false;
        }

    }
    private void creationOfLogTable(String operation)
    {
        try
        {
            ///interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
            //String qry="select adminID from loginmaster where uPws='"+""+pws+"' and uLevel=0";
            int r=jTable1.getSelectedRow();
            String qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jTable1.getValueAt(r,5))+"";
            String getCashierCode=object1.getSigetngleValue(qry, Main.year);
            qry="Select dp_code from department_detail where dp_name='"+(""+jComboBox1.getSelectedItem())+"'";
            String getDpCode=object1.getSigetngleValue(qry, Main.year);
            String getStr[]=(""+jTable1.getValueAt(jTable1.getSelectedRow(),1)).split("-");
            String setDate=getStr[2]+"-"+getStr[1]+"-"+getStr[0];
            qry="select bill_code from build_distribution where dp_Code="+Integer.parseInt(getDpCode)+" and edate='"+setDate+"' and pmrno="+Integer.parseInt(""+jTable1.getValueAt(r,2))+" and CO7='"+""+jTable1.getValueAt(r,3)+"' and CO6="+Integer.parseInt(""+jTable1.getValueAt(r,4))+" and cashier_code="+Integer.parseInt(getCashierCode)+"";
            long billCode=Long.getLong(object1.getSigetngleValue(qry,Main.year));
            qry="select amount from build_distribution where dp_Code="+Integer.parseInt(getDpCode)+" and edate='"+setDate+"' and pmrno="+Integer.parseInt(""+jTable1.getValueAt(r,2))+" and CO7='"+""+jTable1.getValueAt(r,3)+"' and CO6="+Integer.parseInt(""+jTable1.getValueAt(r,4))+" and cashier_code="+Integer.parseInt(getCashierCode)+"";
            double amt=Double.valueOf(object1.getSigetngleValue(qry,Main.year));
            java.util.Date dt=new java.util.Date();
            String editDate=(dt.getYear()+1900)+"-"+(dt.getMonth()+1)+"-"+dt.getDate();
            String editTime=(dt.getHours())+":"+(dt.getMinutes())+":"+(dt.getSeconds());
            qry="insert into build_distribution_edit values("+billCode+","+Integer.parseInt(getDpCode)+",'"+setDate+"',"+Integer.parseInt(""+jTable1.getValueAt(r,2))+",'"+""+jTable1.getValueAt(r,3)+"',"+Integer.parseInt(""+jTable1.getValueAt(r,4))+","+Integer.parseInt(getCashierCode)+",'"+(""+jTable1.getValueAt(r,6)).trim().toString()+"',"+amt+",'"+(""+jTable1.getValueAt(r,8))+"',"+Double.valueOf(""+jTable1.getValueAt(r,7))+",'"+editDate+"','"+editTime+"','"+operation+"','"+Main.userID+"')";
            object1.saveInformation(qry,Main.year);
        }
        catch(Exception e)
        {
            System.out.println("Errr..."+e);
        }
    }
    public void creationOfLogTableRelatedWithCheque(String status)//valid only for delete
    {
        //PENDING NOT USABLE....................
        interfaceRailway object1=null;
        try
	{
            object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
	}
	catch(Exception e)
	{
            System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
            getIPaddress.changeIP();
            try
            {
                object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
            }
            catch(Exception ex)
            {
                System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
            }
	}
        try
        {
            //String qry="select bill_code from build_distribution where dp_Code="+Integer.parseInt(getDpCode)+" and edate='"+setDate+"' and pmrno="+Integer.parseInt(""+jTable1.getValueAt(r,2))+" and CO7='"+""+jTable1.getValueAt(r,3)+"' and CO6="+Integer.parseInt(""+jTable1.getValueAt(r,4))+" and cashier_code="+Integer.parseInt(getCashierCode)+"";
            //long billCode=Long.getLong(object1.getSigetngleValue(qry,Main.year));

        }
        catch(Exception e)
        {
            System.out.println("Error in creation of log table of cheque...."+e);
        }

    }
}
