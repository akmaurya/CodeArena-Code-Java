/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BillPaymentNew.java
 *
 * Created on Jul 11, 2012, 5:21:07 PM
 */

package railwaycashoffice;

import java.awt.Color;

/**
 *
 * @author user2
 */
public class BillPaymentNew extends javax.swing.JInternalFrame {

    /** Creates new form BillPaymentNew */
    public BillPaymentNew() {
        initComponents();
        java.util.Date dt=new java.util.Date();
        int date=dt.getDate();
        int month=dt.getMonth()+1;
        int yr=dt.getYear()+1900;
        String setDate=date+"-"+month+"-"+yr;
        jLabel2.setText(setDate);
         jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();

        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);


        String heading[]={"Sr.No.","PMR No.","CO7","CO6","Amount","Amount Type","Party Name"};
        dtm=new javax.swing.table.DefaultTableModel(heading,0);
        jTable1.setModel(dtm);

        javax.swing.table.TableColumn column;


        column=jTable1.getColumn("Sr.No.");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(50);
        column=jTable1.getColumn("PMR No.");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(80);
        column=jTable1.getColumn("CO7");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(80);
        column=jTable1.getColumn("CO6");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(80);
        column=jTable1.getColumn("Amount");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(150);
        column=jTable1.getColumn("Amount Type");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Party Name");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(153);



        jTable2.setAutoResizeMode(jTable2.AUTO_RESIZE_OFF);

        String heading1[]={"Sr.No.","Issuing Cheque Date","Bank Name","Cheque No.","Cheque Amount"};
        dtm1=new javax.swing.table.DefaultTableModel(heading1,0);
        jTable2.setModel(dtm1);
        javax.swing.table.TableColumn column1;

        column1=jTable2.getColumn("Sr.No.");
        column1.setCellRenderer(CRCenter);
        column1.setPreferredWidth(50);
        column=jTable2.getColumn("Issuing Cheque Date");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(140);
        column=jTable2.getColumn("Bank Name");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(185);
        column=jTable2.getColumn("Cheque No.");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(150);
        column=jTable2.getColumn("Cheque Amount");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(166);

        loadInitialInfo();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setTitle("Bill Payment Window");
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(199, 194, 164));
        jPanel1.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(204, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Payment Date");
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(350, 20, 150, 25);

        jLabel2.setBackground(new java.awt.Color(204, 204, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("0");
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(500, 20, 200, 25);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/calendar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(700, 20, 30, 25);

        jLabel3.setBackground(new java.awt.Color(233, 191, 164));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Cashier Number");
        jLabel3.setOpaque(true);
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 20, 130, 25);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox1FocusLost(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(140, 20, 200, 25);

        jLabel6.setBackground(new java.awt.Color(233, 191, 164));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Select Department");
        jLabel6.setOpaque(true);
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 60, 330, 25);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jComboBox2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox2FocusLost(evt);
            }
        });
        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox2KeyPressed(evt);
            }
        });
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(340, 60, 390, 25);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 20, 740, 100);

        jButton7.setMnemonic('S');
        jButton7.setText("Show");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton7FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton7FocusLost(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(10, 130, 740, 30);

        jPanel2.setBackground(new java.awt.Color(207, 176, 145));
        jPanel2.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 30, 700, 130);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(20, 190, 700, 120);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setText("UNPAID BILLS :-");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(20, 10, 260, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setText("BILL DETAIL :-");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(20, 170, 270, 20);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 170, 740, 340);

        jButton4.setMnemonic('P');
        jButton4.setText("Paid");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton4FocusLost(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(30, 520, 330, 30);

        jButton5.setMnemonic('C');
        jButton5.setText("Close");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton5FocusLost(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(400, 520, 330, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Cal date=new Cal();
        jLabel2.setText(date.getdate());
        jComboBox2.requestFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jComboBox2.requestFocus();
        }
}//GEN-LAST:event_jButton1KeyPressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jButton1.requestFocus();
        }
}//GEN-LAST:event_jComboBox1KeyPressed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jButton7.requestFocus();
        }
}//GEN-LAST:event_jComboBox2KeyPressed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        dtm1.setRowCount(0);
        loadUnpaidBills();
}//GEN-LAST:event_jButton7ActionPerformed

    private void jButton7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton7FocusGained
        // TODO add your handling code here:
        jButton7.setBackground(java.awt.Color.yellow);
}//GEN-LAST:event_jButton7FocusGained

    private void jButton7FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton7FocusLost
        // TODO add your handling code here:
        jButton7.setBackground(java.awt.Color.white);
}//GEN-LAST:event_jButton7FocusLost

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        // System.out.println("1........"+dtm.getRowCount());
        //   System.out.println("2........"+dtm1.getRowCount());
        paidBills();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton4FocusGained
        // TODO add your handling code here:
        jButton4.setBackground(java.awt.Color.yellow);
}//GEN-LAST:event_jButton4FocusGained

    private void jButton4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton4FocusLost
        // TODO add your handling code here:
        jButton4.setBackground(java.awt.Color.white);
}//GEN-LAST:event_jButton4FocusLost

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_jButton5ActionPerformed

    private void jButton5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton5FocusGained
        // TODO add your handling code here:
        jButton5.setBackground(java.awt.Color.yellow);
}//GEN-LAST:event_jButton5FocusGained

    private void jButton5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton5FocusLost
        // TODO add your handling code here:
        jButton5.setBackground(java.awt.Color.white);
}//GEN-LAST:event_jButton5FocusLost

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
        dtm1.setRowCount(0);
        loadBillDetail();
    }//GEN-LAST:event_jTable1MousePressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        if(evt.getSource()==jTable1 && evt.getKeyCode()==10)
        {
            jButton4.requestFocus();
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        // TODO add your handling code here:
        jComboBox1.setBackground(Color.yellow);
    }//GEN-LAST:event_jComboBox1FocusGained

    private void jComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusLost
        // TODO add your handling code here:
        jComboBox1.setBackground(Color.white);
    }//GEN-LAST:event_jComboBox1FocusLost

    private void jComboBox2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusGained
        // TODO add your handling code here:
        jComboBox2.setBackground(Color.yellow);
    }//GEN-LAST:event_jComboBox2FocusGained

    private void jComboBox2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusLost
        // TODO add your handling code here:
        jComboBox2.setBackground(Color.white);
    }//GEN-LAST:event_jComboBox2FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
javax.swing.table.DefaultTableModel dtm;
javax.swing.table.DefaultTableModel dtm1;
private void loadInitialInfo()
{
    try
    {
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
              interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select cashier_number from cashier_detail order by cashier_number";
        String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(load!=null)
        {
            jComboBox1.removeAllItems();
            jComboBox1.addItem("Select");
            for(int i=0;i<load.length;i++)
            {
                jComboBox1.addItem(load[i]);
            }
        }

        qry="Select dp_name from department_detail order by dp_code";
        load=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(load!=null)
        {
            jComboBox2.removeAllItems();
            for(int i=0;i<load.length;i++)
            {
                jComboBox2.addItem(load[i]);
            }
        }

    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadInitialInfo Method."+e);
    }

}
private void loadUnpaidBills()
{
    dtm.setRowCount(0);
    int ind=0;
    try
    {
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jComboBox1.getSelectedItem())+"";
        String getCode=object1.getSigetngleValue(qry,Main.year);
/////////Changes carried out here for dp_code there is no use in challan_detail table it's dummy field in this table//////////////////////////
        qry="Select dp_code from department_detail where dp_name='"+(jComboBox2.getSelectedItem())+"'";
        String getDpCode=object1.getSigetngleValue(qry,Main.year);

        //qry="Select closing_date from build_distribution where cashier_code="+Integer.parseInt(getCode)+" order by closing_date desc";

        String d1[]=jLabel2.getText().split("-");
        String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
        //qry="Select edate from carryforward_challan_detail where cashier_code="+Integer.parseInt(getCode)+" and dp_Code="+Integer.parseInt(getDpCode)+" and (edate<='"+setDate+"' and closing_status="+0+")";
        qry="Select edate from carryforward_challan_detail where cashier_code="+Integer.parseInt(getCode)+" and (edate<='"+setDate+"' and closing_status="+0+")";
        String loadLastYearDate[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        System.out.println("loadLastYearDate......"+loadLastYearDate);
        if(loadLastYearDate!=null)
        {
            //javax.swing.JOptionPane.showMessageDialog(null,"Coming here.....");
            lastYearDetail(getCode,getDpCode,loadLastYearDate);
        }

        //qry="Select edate from challan_detail where cashier_code="+Integer.parseInt(getCode)+" and dp_Code="+Integer.parseInt(getDpCode)+" and (edate<='"+setDate+"' and closing_status="+0+")";
        qry="Select edate from challan_detail where cashier_code="+Integer.parseInt(getCode)+" and (edate<='"+setDate+"' and closing_status="+0+")";
        System.out.println("qry.......454.5...."+qry);
        //String closing_status=object1.getSigetngleValue(qry,Main.year);
        String loadDate[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(loadDate!=null)
        {
            System.out.println("Coming here....");

        /////sir made some changes to avoid date range////////////////////
            String setDeadDate=2000+"-"+1+"-"+1;
            System.out.println("setDeadDate........."+setDeadDate);
            if(dtm.getRowCount()==0)
                  ind=0;
            else
                  ind=dtm.getRowCount();
            for(int i=0;i<loadDate.length;i++)
            {
                   System.out.println("date......."+loadDate[i]);
                  // qry="Select distinct(dp_code) from build_distribution where cashier_code="+Integer.parseInt(getCode)+" and edate='"+setDeadDate+"'";

                   System.out.println("qry...."+qry);

                   qry="Select distinct(CO7) from build_distribution where cashier_code="+Integer.parseInt(getCode)+" and dp_code="+Integer.parseInt(getDpCode)+" and (edate='"+loadDate[i]+"' and paymentdate='"+setDeadDate+"')";

                   //qry="Select distinct(CO7) from build_distribution where cashier_code="+Integer.parseInt(getCode)+" and (edate='"+loadDate[i]+"' and paymentdate='"+setDeadDate+"')";
                   System.out.println("qry..........."+qry);
                   String getCO7[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                    if(getCO7!=null)// || getCO7.length>0)
                    {

                        for(int j=0;j<getCO7.length;j++)
                        {
                            qry="Select pmrno,CO6,amount,amounttype,partyname "
                                    + "from build_distribution where CO7="+Integer.parseInt(getCO7[j])+" and dp_code="+Integer.parseInt(getDpCode)+" and cashier_code="+Integer.parseInt(getCode)+" and paymentdate='"+setDeadDate+"'";
                           // qry="Select pmrno,CO6,amount,amounttype from build_distribution where CO7="+Integer.parseInt(getCO7[j])+" and cashier_code="+Integer.parseInt(getCode)+" and paymentdate='"+setDeadDate+"'";
                            String getData[][]=object1.getInformationDD(qry,6,Main.year);
                            if(getData!=null)
                            {
                                String arr[]=new String[7];

                                for(int k=0;k<getData.length;k++)
                                {
                                    arr[0]=""+(++ind);
                                    arr[1]=getData[k][0];
                                    arr[2]=getCO7[j];
                                    arr[3]=getData[k][1];
                                    arr[4]=getData[k][2];
                                    arr[5]=getData[k][3];
                                    arr[6]=getData[k][4];
                                    dtm.addRow(arr);
                                }
                            }
                        }
                    }
            }

        }
        else if(loadDate==null)
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Sorry ! No record found");
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadUnpaidBills"+e);
    }

}
private void lastYearDetail(String cashierCode,String DpCode,String DateRange[])
{
   String CashierCode=cashierCode;
   String dpCode=DpCode;
    String loadArr[]=DateRange;
     try
     {
         //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
             interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}

         String setDeadDate=2000+"-"+1+"-"+1;
         System.out.println("setDeadDate........."+setDeadDate);
         if(loadArr!=null)
         {
                 for(int i=0;i<loadArr.length;i++)
         {
                   System.out.println("date......."+loadArr[i]);
                   String qry="Select distinct(CO7) from carryforward_build_distribution where cashier_code="+Integer.parseInt(CashierCode)+" and dp_code="+Integer.parseInt(dpCode)+" and (edate='"+loadArr[i]+"' and paymentdate='"+setDeadDate+"')";
                   //String qry="Select distinct(CO7) from carryforward_build_distribution where cashier_code="+Integer.parseInt(CashierCode)+" and (edate='"+loadArr[i]+"' and paymentdate='"+setDeadDate+"')";
                   String getCO7[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                    if(getCO7!=null)// || getCO7.length>0)
                    {
                        int ind=0;
                        for(int j=0;j<getCO7.length;j++)
                        {
                            qry="Select pmrno,CO6,amount,amounttype from carryforward_build_distribution where CO7="+Integer.parseInt(getCO7[j])+" and dp_code="+Integer.parseInt(dpCode)+" and cashier_code="+Integer.parseInt(CashierCode)+" and paymentdate='"+setDeadDate+"'";
                            //qry="Select pmrno,CO6,amount,amounttype from carryforward_build_distribution where CO7="+Integer.parseInt(getCO7[j])+" and cashier_code="+Integer.parseInt(CashierCode)+" and paymentdate='"+setDeadDate+"'";
                            String getData[][]=object1.getInformationDD(qry, 4,Main.year);
                            if(getData!=null)
                            {
                                String arr[]=new String[6];

                                for(int k=0;k<getData.length;k++)
                                {
                                    arr[0]=""+(++ind);
                                    arr[1]=getData[k][0];
                                    arr[2]=getCO7[j];
                                    arr[3]=getData[k][1];
                                    arr[4]=getData[k][2];
                                    arr[5]=getData[k][3];
                                    dtm.addRow(arr);
                                }
                           }
                      }
                 }
          }
         }

     }
     catch(Exception e)
     {
            System.out.println("Error ! In lastYearDetail Method."+e);
     }

}
private void loadBillDetail()
{
    try
    {
        dtm1.setRowCount(0);
        String qry="";
        int n=jTable1.getSelectedRow();
        String d1[]=jLabel2.getText().split("-");
        String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
             interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
             int ind=0;
             qry="Select dp_Code from department_detail where dp_name='"+(""+jComboBox2.getSelectedItem())+"'";
             String getDpCode=object1.getSigetngleValue(qry,Main.year);
             System.out.println("getDpCode........"+getDpCode);
             qry="Select bill_Code from carryforward_build_distribution where dp_Code="+Integer.parseInt(getDpCode)+" and pmrno="+Integer.parseInt(""+jTable1.getValueAt(n,1))+" and CO7='"+(""+jTable1.getValueAt(n, 2))+"' and CO6="+Integer.parseInt(""+jTable1.getValueAt(n, 3))+" and edate<='"+setDate+"'";
             String getOldBill=object1.getSigetngleValue(qry,Main.year);
             System.out.println("getOldBill.........."+getOldBill);
             if(getOldBill!=null && getOldBill.equals("")==false)
             {
                 javax.swing.JOptionPane.showMessageDialog(null,"Coming inside");
                 qry="Select chq_dt,issing_bank,chq_no,chq_amt from carryforward_cheque_details where bill_code="+Integer.parseInt(getOldBill);
                 String loadOldBillDetail[][]=object1.getInformationDD(qry,4,Main.year);
                 if(loadOldBillDetail!=null)
                 {
                     String arr[]=new String [5];
                     for(int i=0;i<loadOldBillDetail.length;i++)
                     {
                        arr[0]=""+(++ind);
                        String D[]=loadOldBillDetail[i][0].split("-");
                        String setDate1=D[2]+"-"+D[1]+"-"+D[0];
                        arr[1]=setDate1;
                        arr[2]=loadOldBillDetail[i][1];
                        arr[3]=loadOldBillDetail[i][2];
                        arr[4]=loadOldBillDetail[i][3];
                        dtm1.addRow(arr);

                     }
                 }
             }
             qry="Select bill_Code from build_distribution where dp_Code="+Integer.parseInt(getDpCode)+" and pmrno="+Integer.parseInt(""+jTable1.getValueAt(n,1))+" and CO7='"+(""+jTable1.getValueAt(n, 2))+"' and CO6="+Integer.parseInt(""+jTable1.getValueAt(n, 3))+" and edate<='"+setDate+"'";
             System.out.println("qry.........."+qry);
             String getBillCode=object1.getSigetngleValue(qry,Main.year);
             qry="Select chq_dt,issing_bank,chq_no,chq_amt from cheque_details where bill_code="+Integer.parseInt(getBillCode);
             String getData[][]=object1.getInformationDD(qry,4,Main.year);
             if(getData!=null)
             {
                 String arr[]=new String [5];
                 if(dtm1.getRowCount()>0)
                      ind=dtm1.getRowCount();
                 else
                      ind=0;

                 for(int i=0;i<getData.length;i++)
                 {
                     arr[0]=""+(++ind);
                     String D[]=getData[i][0].split("-");
                     String setDate1=D[2]+"-"+D[1]+"-"+D[0];
                     arr[1]=setDate1;
                     arr[2]=getData[i][1];
                     arr[3]=getData[i][2];
                     arr[4]=getData[i][3];
                     dtm1.addRow(arr);

                 }
             }

    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadBillDetail Method."+e);
    }

}
private boolean paidBills()
{
    try
    {
        if((""+jComboBox1.getSelectedItem()).equals("Select"))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please select the cashier no.");
            jComboBox1.requestFocus();
            return false;
        }
        if(dtm.getRowCount()==0)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! No record found to update.");
            return false;
        }



        //Flag=1;

       // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
               interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}

        String qry="Select dp_code from department_detail where dp_name='"+(jComboBox2.getSelectedItem())+"'";
        String dpCode=object1.getSigetngleValue(qry,Main.year);
        qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jComboBox1.getSelectedItem());
        String getCode=object1.getSigetngleValue(qry,Main.year);

        String d1[]=jLabel2.getText().split("-");
        String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
      

        boolean bn=false;
        String amtType="",CO6="";
        double getpaidAmount=0.0;
        for(int i=0;i<dtm.getRowCount();i++)
        {
           //String pmrno=""+jTable2.getValueAt(i,1);

           qry="Select cashier_code from carryforward_build_distribution where cashier_code="+Integer.parseInt(getCode)+"";
           String getCode1=object1.getSigetngleValue(qry,Main.year);
           System.out.println("getCode1........"+getCode1+"     "+getCode1.length());
           if(getCode1.length()>0)
           {
               qry="Select distinct(bill_Code) from carryforward_build_distribution where pmrno="+Integer.parseInt(""+jTable1.getValueAt(i,1))+"  and (CO7="+Integer.parseInt(""+jTable1.getValueAt(i,2))+" and (CO6="+Integer.parseInt(""+jTable1.getValueAt(i, 3))+" and (cashier_code="+Integer.parseInt(getCode)+" and dp_code="+Integer.parseInt(dpCode)+"))) ";
               String getBillCode=object1.getSigetngleValue(qry,Main.year);
               
                qry="update carryforward_build_distribution set paymentdate='"+setDate+"',status=1 where pmrno="+Integer.parseInt(""+jTable1.getValueAt(i,1))+"  and (CO7="+Integer.parseInt(""+jTable1.getValueAt(i,2))+" and (CO6="+Integer.parseInt(""+jTable1.getValueAt(i, 3))+" and (cashier_code="+Integer.parseInt(getCode)+" and dp_code="+Integer.parseInt(dpCode)+")))";
                //qry="update carryforward_build_distribution set paymentdate='"+setDate+"',status=1 where pmrno="+Integer.parseInt(pmrno)+" and cashier_code="+Integer.parseInt(getCode)+" and dp_code="+Integer.parseInt(dpCode)+"";
             //   qry="update carryforward_build_distribution set paymentdate='"+setDate+"' where pmrno="+Integer.parseInt(pmrno)+" and cashier_code="+Integer.parseInt(getCode)+"";
                object1.saveInformation(qry,Main.year);

                qry="Select sum(amount) from carryforward_build_distribution where pmrno="+Integer.parseInt(""+jTable1.getValueAt(i,1))+" and CO7="+Integer.parseInt(""+jTable1.getValueAt(i,2))+" and CO6="+Integer.parseInt(""+jTable1.getValueAt(i, 3))+" and (cashier_code="+Integer.parseInt(getCode)+" and paymentdate='"+setDate+"')";
                //qry="Select sum(amount) from carryforward_build_distribution where pmrno="+Integer.parseInt(pmrno)+" and cashier_code="+Integer.parseInt(getCode)+" and paymentdate='"+setDate+"'";
                String getPaidAmt=object1.getSigetngleValue(qry, Main.year);
                if(getPaidAmt!=null)
                    getpaidAmount=Double.valueOf(getPaidAmt);
                else
                    getpaidAmount=0.0;

                if(getBillCode!=null)
               {
                   for(int j=0;j<getBillCode.length();j++)
                   {
                       qry="update carryforward_cheque_details set status=1 where bill_Code="+Integer.parseInt(getBillCode);
                       object1.saveInformation(qry,Main.year);
                   }
               }


           }



              qry="update build_distribution set paymentdate='"+setDate+"',status=1 where pmrno="+Integer.parseInt(""+jTable1.getValueAt(i,1))+" and (CO7="+Integer.parseInt(""+jTable1.getValueAt(i,2))+" and (CO6="+Integer.parseInt(""+jTable1.getValueAt(i, 3))+"  and (cashier_code="+Integer.parseInt(getCode)+" and dp_code="+Integer.parseInt(dpCode)+")))";
               //qry="update build_distribution set paymentdate='"+setDate+"',status=1 where pmrno="+Integer.parseInt(pmrno)+" and cashier_code="+Integer.parseInt(getCode)+" and dp_code="+Integer.parseInt(dpCode)+"";
             //  qry="update build_distribution set paymentdate='"+setDate+"' where pmrno="+Integer.parseInt(pmrno)+" and cashier_code="+Integer.parseInt(getCode)+"";
               System.out.println("qry....."+qry);
               object1.saveInformation(qry,Main.year);

               qry="Select distinct(bill_Code) from build_distribution where pmrno="+Integer.parseInt(""+jTable1.getValueAt(i,1))+" and (CO7="+Integer.parseInt(""+jTable1.getValueAt(i,2))+" and (CO6="+Integer.parseInt(""+jTable1.getValueAt(i, 3))+"  and (cashier_code="+Integer.parseInt(getCode)+" and dp_code="+Integer.parseInt(dpCode)+")))";
               String getBillCode[]=object1.getResultSetAs_1D_Array(qry,Main.year);
               if(getBillCode!=null)
               {
                   for(int j=0;j<getBillCode.length;j++)
                   {
                        qry="update cheque_details set status=1 where bill_Code="+Integer.parseInt(getBillCode[j]);
                        object1.saveInformation(qry,Main.year);
                   }
               }



               qry="Select sum(amount) from build_distribution where pmrno="+Integer.parseInt(""+jTable1.getValueAt(i,1))+" and (CO7="+Integer.parseInt(""+jTable1.getValueAt(i,2))+" and (CO6="+Integer.parseInt(""+jTable1.getValueAt(i, 3))+" and (cashier_code="+Integer.parseInt(getCode)+" and paymentdate='"+setDate+"')))";
               //qry="Select sum(amount) from build_distribution where pmrno="+Integer.parseInt(pmrno)+" and cashier_code="+Integer.parseInt(getCode)+" and paymentdate='"+setDate+"' and amounttype='"+"Cash"+"'";
               String getPaidAmt=object1.getSigetngleValue(qry, Main.year);
                if(getPaidAmt!=null)
                    getpaidAmount=getpaidAmount+Double.valueOf(getPaidAmt);


                qry="select current_amount from cashier_openingamount where cashier_code="+Integer.parseInt(getCode)+"";
                double curAmt=Double.valueOf(object1.getSigetngleValue(qry,Main.year));
                double amt1=curAmt-getpaidAmount;

                qry="update cashier_openingamount set current_amount="+amt1+" where cashier_code="+Integer.parseInt(getCode)+"";
                object1.saveInformation(qry, Main.year);


          /* amtType=""+jTable2.getValueAt(i,5);
           if(amtType.equalsIgnoreCase("Cheque"))
           {
                  CO6=""+jTable2.getValueAt(i,3);
                  String d2=""+jTable2.getValueAt(i,6);
                  String bankName=""+jTable2.getValueAt(i,7);
                  String ChequeNo=""+jTable2.getValueAt(i,8);
                  qry="insert into issuingchequedetail values("+Integer.parseInt(dpCode)+",'"+d2+"',"+Integer.parseInt(CO6)+",'"+bankName+"',"+Long.parseLong(ChequeNo)+")";
                  bn=object1.saveInformation(qry,Main.year);
                  CO6="";
                  d2="";
           }*/


        }

        javax.swing.JOptionPane.showMessageDialog(this,"Process Completed.");
        dtm1.setRowCount(0);
        dtm.setRowCount(0);
        jComboBox1.setSelectedIndex(0);
        java.util.Date dt=new java.util.Date();
        int date=dt.getDate();
            int month=dt.getMonth()+1;
            int yr=dt.getYear()+1900;
            setDate=date+"-"+month+"-"+yr;
            jLabel2.setText(setDate);



    }
    catch(Exception e)
    {
        System.out.println("Error ! In paidBills Methods."+e);
    }
    return true;

}
}
