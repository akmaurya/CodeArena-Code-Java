/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DCBalanceRegister.java
 *
 * Created on May 19, 2012, 3:35:52 PM
 */

package railwaycashoffice;

import java.awt.Color;
import java.math.BigInteger;
import java.io.*;
import java.awt.print.*;

/**
 *
 * @author Shweta
 */
public class DCBalanceRegister extends javax.swing.JInternalFrame {

    /** Creates new form DCBalanceRegister */
    public DCBalanceRegister() {
        initComponents();
        java.util.Date dt=new java.util.Date();
        int date=dt.getDate();
        int month=dt.getMonth()+1;
        int year=dt.getYear()+1900;
        String setDate=date+"-"+month+"-"+year;
        jLabel2.setText(setDate);
        jProgressBar1.setVisible(false);
        jProgressBar2.setVisible(false);

        jTable1.setEnabled(false);
      //  jTable2.setEnabled(false);
       // jTable3.setEnabled(false);
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        jLabel7.setVisible(false);
        jLabel8.setVisible(false);
        jLabel3.setVisible(false);
        jTextField1.setText("0");
        jTextField2.setText("0");
        jTextField3.setText("0");
        jTextField4.setText("0");
        jTextField5.setText("0");

       jTextField3.setBackground(java.awt.Color.blue);
        //jTextField3.setForeground(java.awt.Color.MAGENTA);
        jTextField5.setBackground(java.awt.Color.blue);
       // jTextField5.setForeground(java.awt.Color.MAGENTA);


        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();

        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        String head[]={"CO7 No.","Net Payable Amount"};
        dtm=new javax.swing.table.DefaultTableModel(head,0);
        jTable1.setModel(dtm);

        javax.swing.table.TableColumn column;

        column=jTable1.getColumn("CO7 No.");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(90);
        column=jTable1.getColumn("Net Payable Amount");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(140);

        jTable2.setAutoResizeMode(jTable2.AUTO_RESIZE_OFF);
        String head1[]={"Cashier No.","OB","Debit","Total","Credit","CB","Dues with(Sr.DC)"};
        dtm1=new javax.swing.table.DefaultTableModel(head1,0);
        jTable2.setModel(dtm1);

       
        column=jTable2.getColumn("Cashier No.");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(100);
        column=jTable2.getColumn("OB");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(150);
        column=jTable2.getColumn("Debit");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(150);
        column=jTable2.getColumn("Total");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(150);
        column=jTable2.getColumn("Credit");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(150);
        column=jTable2.getColumn("CB");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(150);
        column=jTable2.getColumn("Dues with(Sr.DC)");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(150);


        jTable3.setAutoResizeMode(jTable3.AUTO_RESIZE_OFF);
        String head3[]={"Category","DFM","PD","Hajipur","Total"};
        dtm2=new javax.swing.table.DefaultTableModel(head3,0);
        jTable3.setModel(dtm2);
        column=jTable3.getColumn("Category");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(100);
        column=jTable3.getColumn("DFM");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(150);
        column=jTable3.getColumn("PD");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(150);
        column=jTable3.getColumn("Hajipur");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(150);
        column=jTable3.getColumn("Total");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jProgressBar2 = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("DC's Balance Register");
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(164, 156, 105));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Date");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 30, 130, 25);

        jLabel2.setBackground(new java.awt.Color(220, 226, 184));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("0");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(150, 30, 140, 25);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/calendar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(290, 30, 30, 25);

        jPanel1.setBackground(new java.awt.Color(133, 172, 157));
        jPanel1.setLayout(null);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 20, 540, 240);
        jPanel1.add(jProgressBar2);
        jProgressBar2.setBounds(20, 260, 540, 10);

        jLabel3.setBackground(new java.awt.Color(0, 204, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("0");
        jLabel3.setOpaque(true);
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 390, 10, 20);

        jLabel4.setBackground(new java.awt.Color(102, 102, 102));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setForeground(new java.awt.Color(204, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("TOTAL");
        jLabel4.setOpaque(true);
        jPanel1.add(jLabel4);
        jLabel4.setBounds(400, 280, 160, 20);

        jLabel5.setBackground(new java.awt.Color(204, 204, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("0");
        jLabel5.setOpaque(true);
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 300, 10, 20);

        jLabel6.setBackground(new java.awt.Color(255, 255, 204));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("0");
        jLabel6.setOpaque(true);
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 330, 10, 20);

        jLabel7.setBackground(new java.awt.Color(102, 102, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel7.setForeground(new java.awt.Color(204, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("0");
        jLabel7.setOpaque(true);
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 360, 10, 20);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(20, 280, 380, 170);

        jLabel8.setBackground(new java.awt.Color(102, 102, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel8.setForeground(new java.awt.Color(204, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("0");
        jLabel8.setOpaque(true);
        jPanel1.add(jLabel8);
        jLabel8.setBounds(10, 420, 10, 20);

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("jTextField1");
        jPanel1.add(jTextField1);
        jTextField1.setBounds(400, 300, 160, 25);

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("jTextField2");
        jPanel1.add(jTextField2);
        jTextField2.setBounds(400, 330, 160, 25);

        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("jTextField3");
        jPanel1.add(jTextField3);
        jTextField3.setBounds(400, 360, 160, 25);

        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.setText("jTextField4");
        jPanel1.add(jTextField4);
        jTextField4.setBounds(400, 390, 160, 25);

        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("jTextField5");
        jPanel1.add(jTextField5);
        jTextField5.setBounds(400, 420, 160, 25);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(310, 80, 580, 470);

        jButton2.setMnemonic('S');
        jButton2.setText("Show");
        jButton2.setToolTipText("Show");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton2FocusLost(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(330, 30, 240, 30);

        jPanel2.setBackground(new java.awt.Color(223, 194, 161));
        jPanel2.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 20, 260, 430);
        jPanel2.add(jProgressBar1);
        jProgressBar1.setBounds(10, 450, 260, 10);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(20, 80, 280, 470);

        jButton4.setMnemonic('P');
        jButton4.setText("Print");
        jButton4.setToolTipText("Print");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton4FocusLost(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(580, 30, 150, 30);

        jButton3.setMnemonic('C');
        jButton3.setText("Close");
        jButton3.setToolTipText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton3FocusLost(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(740, 30, 150, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Cal date1=new Cal();
        jLabel2.setText(date1.getdate());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        loadNetAmount lNA=new loadNetAmount();
        lNA.start();
     
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.out.println("Pring is on>>>>>>>>>>>>>>>>>.");
          printDCReport printNew=new printDCReport();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusGained
        // TODO add your handling code here:
        jButton2.setBackground(java.awt.Color.yellow);
    }//GEN-LAST:event_jButton2FocusGained

    private void jButton2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusLost
        // TODO add your handling code here:
        jButton2.setBackground(java.awt.Color.white);
    }//GEN-LAST:event_jButton2FocusLost

    private void jButton4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton4FocusGained
        // TODO add your handling code here:
        jButton4.setBackground(java.awt.Color.yellow);
    }//GEN-LAST:event_jButton4FocusGained

    private void jButton4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton4FocusLost
        // TODO add your handling code here:
        jButton4.setBackground(java.awt.Color.white);
    }//GEN-LAST:event_jButton4FocusLost

    private void jButton3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton3FocusGained
        // TODO add your handling code here:
        jButton3.setBackground(java.awt.Color.yellow);
    }//GEN-LAST:event_jButton3FocusGained

    private void jButton3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton3FocusLost
        // TODO add your handling code here:
         jButton3.setBackground(java.awt.Color.white);
    }//GEN-LAST:event_jButton3FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
javax.swing.table.DefaultTableModel dtm;
javax.swing.table.DefaultTableModel dtm1;
javax.swing.table.DefaultTableModel dtm2;

class loadNetAmount extends Thread
{
    public void run()
    {
        try
        {
            dtm.setRowCount(0);
           // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
            String d1[]=jLabel2.getText().split("-");
            String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
        
           // System.out.println("setDate......"+setDate);

        //String qry="Select distinct(CO7) from build_distribution where edate='"+setDate+"' and closing_status="+0+"";
            String qry="Select dp_code from department_detail order by dp_code asc";
            String loadDPCode[]=object1.getResultSetAs_1D_Array(qry,Main.year);
            if(loadDPCode!=null)
            {
                for(int j=0;j<loadDPCode.length;j++)
                {
                    qry="Select dp_name from department_detail where dp_code="+Integer.parseInt(loadDPCode[j]);
                    String getDPName=object1.getSigetngleValue(qry,Main.year);
                    qry="Select distinct(CO7) from build_distribution where edate='"+setDate+"' and dp_Code="+Integer.parseInt(loadDPCode[j])+"";

                   // System.out.println("qry........."+qry);
                    String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                    double amt=0.0;
                    String arr[]=new String[2];
                    int ind=0;
                    if(load!=null)
                    {
                        jProgressBar1.setVisible(true);
                        jProgressBar1.setMaximum(load.length);
                        jProgressBar1.setMinimum(0);
                        jProgressBar1.setValue(0);
                        double tot=0.00;
                        arr[0]=getDPName;
                        arr[1]="";
                        dtm.addRow(arr);
                        
                        for(int i=0;i<load.length;i++)
                        {
                            //qry="select sum(amount) from build_distribution where CO7="+Integer.parseInt(load[i])+" and amounttype='"+"Cash"+"'and edate='"+setDate+"'";
                            //qry="select sum(amount) from build_distribution where CO7="+Integer.parseInt(load[i])+" and edate='"+setDate+"'";
                            qry="select sum(mix_amount) from build_distribution where CO7="+Integer.parseInt(load[i])+" and edate='"+setDate+"'";
                          //  System.out.println("qry............."+qry);
                            String getAmount[]=object1.getResultSetAs_1D_Array(qry,Main.year);

                            if(getAmount[0]!=null)
                            {
                                amt=Double.valueOf(getAmount[0]);
                            }
                            arr[0]=load[i];
                            arr[1]=(""+new java.math.BigDecimal(amt).setScale(2,5));
                            tot=tot+amt;
                            dtm.addRow(arr);
                            amt=0.0;
                            jProgressBar1.setValue(i+1);
                        }
                        arr[0]="Total";
                        arr[1]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                        dtm.addRow(arr);
                       /* for(int i=0;i<10;i++)
                        {
                            arr[0]="Total";
                            arr[1]="0.00";
                            dtm.addRow(arr);
                        }*/
                      
                    }
                }
               loadWholeDetail lWD=new loadWholeDetail();
               lWD.start();
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadNetAmount Method."+e);
    }
 }

}
class loadWholeDetail extends Thread
{
    public void run()
    {
    try
    {
        dtm1.setRowCount(0);
       
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select cashier_number from cashier_detail order by cashier_code";
        String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);

        String d1[]=jLabel2.getText().split("-");
        String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];

        String deadDate=2000+"-"+1+"-"+1;
      //  System.out.println("deadDate......"+deadDate);
        if(load!=null)
        {
            String arr[]=null;
            //int ind=0,index=0;
             

            double amt=0.0,amt1=0.0,tot=0.0,paymentReceived=0.0,TOTAL=0.0,currentAmount=0.0,creditBalance=0.0,duesWithDC=0.0;
            for(int i=0;i<load.length;i++)
            {
                
                 java.math.BigDecimal bdCredit=new java.math.BigDecimal("0");
                java.math.BigDecimal bdOldBils=new java.math.BigDecimal("0");
              java.math.BigDecimal bdDebit=new java.math.BigDecimal("0");
                java.math.BigDecimal bdTotal=new java.math.BigDecimal("0");
                java.math.BigDecimal bdCRBalance=new java.math.BigDecimal("0");
                java.math.BigDecimal bdDue=new java.math.BigDecimal("0");
                java.math.BigDecimal tempTOT=new java.math.BigDecimal("0");
                java.math.BigDecimal bdPaid=new java.math.BigDecimal("0");

                jProgressBar2.setVisible(true);
                jProgressBar2.setMaximum(load.length);
                jProgressBar2.setMinimum(0);
                jProgressBar2.setValue(0);
               // index=0;

               qry="select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(load[i])+"";
               String getCode1=object1.getSigetngleValue(qry,Main.year);
               qry="Select cashier_code from build_distribution where edate='"+setDate+"' and cashier_code="+Integer.parseInt(getCode1)+"";
            //   System.out.println("qry........"+qry);
               String getCashierCode=object1.getSigetngleValue(qry,Main.year);
             // System.out.println("getCashierCode............"+getCashierCode);
              /* if(getCashierCode.length()>0)
               {
                   index=2;
               }
               else if(getCashierCode.length()==0)
               {
                   index=1;
               }
               System.out.println(getCashierCode+" index........"+index);*/


               
               arr=new String[7];
               tot=0.0;
               amt=0.0;
               amt1=0.0;
              /* if(index==1)
               {
                //   javax.swing.JOptionPane.showMessageDialog(null,"Coming here..");
                  
                 ////1st column//////////
               
                qry="Select creditbalance from cashier_creditbalance where cashier_code="+Integer.parseInt(getCode1);
                System.out.println("qry.11.........."+qry);
                String getAmt=object1.getSigetngleValue(qry,Main.year);
                System.out.println("getAmt......"+getAmt);
                if(getAmt.length()>0 || getAmt.equals("")==false)
                {
                    System.out.println("amt......."+amt);
                    amt=Double.valueOf(getAmt);

                  //  amt=0;
                }
              
                //qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(getCode1)+" and amounttype='"+"Cash"+"' and (edate<'"+setDate+"' and paymentdate='"+deadDate+"')";
                qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(getCode1)+" and (edate<'"+setDate+"' and paymentdate='"+deadDate+"')";
                System.out.println("qry.22..."+qry);
                String getAmt1=object1.getSigetngleValue(qry,Main.year);
                System.out.println("getAmt1..........."+getAmt1);
                if(getAmt1!=null)
                {
                    System.out.println("amt1......."+amt1);
                    amt1=Double.valueOf(getAmt1);
                //    javax.swing.JOptionPane.showMessageDialog(null,"amt1 in cashier.."+amt1);
                }
                tot=amt+amt1;
                System.out.println("tot......."+tot);

                //////////1st column  this is to ask//////
                /*double dueamt=dueAmount(getCode);
                tot=dueamt+tot;
                System.out.println("tot......."+tot);/////////////////




                   
                   arr[0]=load[i];
                   arr[1]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                   arr[2]="0.00";
                 //  arr[3]="0.00";
                    arr[3]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                   arr[4]="0.00";
                   arr[5]="0.00";
                   arr[6]="0.00";
                   dtm1.addRow(arr);
               }*/

               /*if(index==2)
               {*/
                tot=0.0;
                 ////1st column//////////
                /*qry="Select amount from cashier_openingamount where cashier_code="+Integer.parseInt(getCode);
                String getAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);*/
                qry="Select creditbalance from cashier_creditbalance where cashier_code="+Integer.parseInt(getCode1);
                String getAmt=object1.getSigetngleValue(qry,Main.year);
                amt=0.0;

                if(getAmt.length()>0 || getAmt.equals("")==false)
                {
                    //amt=Double.valueOf(getAmt);
                    bdCredit=new java.math.BigDecimal(getAmt);
                    System.out.println("amt shweta34555..."+amt);

              //      System.out.println("amt shweta34555..."+bdCredit);
                    //amt=0;
                }
               /* qry="Select sum(received_amount) from received_cash_detail where cashier_code="+Integer.parseInt(getCode)+"";

                String getAmt1[]=object1.getResultSetAs_1D_Array(qry,Main.year);*/
               // qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(getCode1)+" and  amounttype='"+"Cash"+"' and (edate<'"+setDate+"' and paymentdate='"+deadDate+"')";
                 //qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(getCode1)+" and (edate<'"+setDate+"' and paymentdate='"+deadDate+"')";
                 qry="Select sum(mix_amount) from build_distribution where cashier_code="+Integer.parseInt(getCode1)+" and (edate<'"+setDate+"' and paymentdate='"+deadDate+"')";
              //  System.out.println("qry shwet22222"+qry);
                String getAmt1=object1.getSigetngleValue(qry,Main.year);
                amt1=0.0;
                if(getAmt1!=null)
                {
                   // amt1=Double.valueOf(getAmt1);
                   bdOldBils=new java.math.BigDecimal(getAmt1);
               //     System.out.println("sum amount...."+amt1);
                }
                //tot=amt+amt1;
                tempTOT=tempTOT.add(bdOldBils);
                tempTOT=tempTOT.add(bdCredit);
                //qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(getCode1)+" and edate='"+setDate+"' and amounttype='"+"Cash"+"'";
                //qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(getCode1)+" and edate='"+setDate+"'";
                qry="Select sum(mix_amount) from build_distribution where cashier_code="+Integer.parseInt(getCode1)+" and edate='"+setDate+"'";
                String todayPaymentReceived[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                paymentReceived=0.0;
                if(todayPaymentReceived[0]!=null)
                {
                    //paymentReceived=Double.valueOf(todayPaymentReceived[0]);
                    bdDebit=new java.math.BigDecimal(todayPaymentReceived[0]);

                }
             //   System.out.println("paymentReceived......"+paymentReceived);

              
                ///////////end of 2nd column/////
                //////////3rd column/////////////
                  //  TOTAL=tot+paymentReceived;
                bdTotal=bdTotal.add(tempTOT);
                bdTotal=bdTotal.add(bdDebit);
             //       System.out.println("TOTAL....."+TOTAL);
                ///////////end of 3rd column/////
                //////////4th column/////////////
                /*qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(getCode)+" and edate='"+setDate+"'";
                String currentAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                if(currentAmt[0]!=null)
                {
                    currentAmount=Double.valueOf(currentAmt[0]);
                }*/
                 //qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(getCode1)+" and paymentdate='"+setDate+"'";
                 qry="Select sum(mix_amount) from build_distribution where cashier_code="+Integer.parseInt(getCode1)+" and paymentdate='"+setDate+"'";
                String currentAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                currentAmount=0.0;
                if(currentAmt[0]!=null)
                {
                   // currentAmount=Double.valueOf(currentAmt[0]);
                    bdPaid=new java.math.BigDecimal(currentAmt[0]);
                }
                ///////end of 4th column/////////
                ///////5th column/////////////////
               //creditBalance=TOTAL-currentAmount;
                bdCRBalance=bdCRBalance.add(bdTotal);
                bdCRBalance=bdCRBalance.subtract(bdPaid);
           
               // ////////end of 5th column////////
               // ///////6th column////////////////
               //duesWithDC=totalDueAmount(getCode);
               // duesWithDC=dueAmount(getCode1);
                 duesWithDC=dueAmount(getCode1);
           bdDue=bdDue.add(new java.math.BigDecimal(duesWithDC));
               ////////end of 6th column/////////
              
                   arr[0]=load[i];
                   System.out.println("1."+arr[0]);
                 //  tempTOT
                   //arr[1]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                   arr[1]=""+tempTOT;
                   System.out.println("2."+arr[1]);
                   //bdDebit
                   //arr[2]=(""+new java.math.BigDecimal(paymentReceived).setScale(2,5));
                   arr[2]=""+bdDebit;
                   System.out.println("3."+arr[2]);
                   //bdTotal
                   //arr[3]=(""+new java.math.BigDecimal(TOTAL).setScale(2,5));
                   arr[3]=""+bdTotal;
                   System.out.println("4."+arr[3]);
                   //bdPaid
                   //arr[4]=(""+new java.math.BigDecimal(currentAmount).setScale(2,5));
                   arr[4]=""+bdPaid;
                   System.out.println("5."+arr[4]);
                   //bdCRBalance
                   //arr[5]=(""+new java.math.BigDecimal(creditBalance).setScale(2,5));
                   arr[5]=""+bdCRBalance;
                   System.out.println("6."+arr[5]);
                   //bdDue
                   //arr[6]=(""+new java.math.BigDecimal(duesWithDC).setScale(2,5));
                   arr[6]=""+bdDue.setScale(2,5);
                   System.out.println("7."+arr[6]);
                   dtm1.addRow(arr);
                //}
             
               jProgressBar2.setValue(i+1);
               

            }
                
                  /*arr[0]="0.00";
                  arr[1]="0.00";
                  arr[2]="0.00";
                  arr[3]="0.00";
                  arr[4]="0.00";
                  arr[5]="0.00";
                  arr[6]="0.00";*/
                  //adding blank line
                  for(int ii=0;ii<7;ii++)
                      arr[ii]="";
                  dtm1.addRow(arr);
                /*  tot=0.0;
                  paymentReceived=0.0;
                  TOTAL=0.0;
                  currentAmount=0.0;
                  creditBalance=0.0;
                  duesWithDC=0.0;*/
                   java.math.BigDecimal bdCredit=new java.math.BigDecimal("0");
                java.math.BigDecimal bdOldBils=new java.math.BigDecimal("0");
              java.math.BigDecimal bdDebit=new java.math.BigDecimal("0");
                java.math.BigDecimal bdTotal=new java.math.BigDecimal("0");
                java.math.BigDecimal bdCRBalance=new java.math.BigDecimal("0");
                java.math.BigDecimal bdDue=new java.math.BigDecimal("0");
                java.math.BigDecimal tempTOT=new java.math.BigDecimal("0");
                java.math.BigDecimal bdPaid=new java.math.BigDecimal("0");
                  for(int i=0;i<dtm1.getRowCount()-1;i++)
                  {
                      //tot=tot+Double.valueOf(""+jTable2.getValueAt(i,1));
                      tempTOT=tempTOT.add(new java.math.BigDecimal(""+jTable2.getValueAt(i,1)));//Double.valueOf(""+jTable2.getValueAt(i,1));
                      //paymentReceived=paymentReceived+Double.valueOf(""+jTable2.getValueAt(i,2));
                      bdDebit=bdDebit.add(new java.math.BigDecimal(""+jTable2.getValueAt(i,2)));
                     // paymentReceived=paymentReceived+Double.valueOf(""+jTable2.getValueAt(i,2));
                     // TOTAL=TOTAL+Double.valueOf(""+jTable2.getValueAt(i,3));
                      bdTotal=bdTotal.add(new java.math.BigDecimal(""+jTable2.getValueAt(i,3)));
                     // currentAmount=currentAmount+Double.valueOf(""+jTable2.getValueAt(i,4));
                      bdPaid=bdPaid.add(new java.math.BigDecimal(""+jTable2.getValueAt(i,4)));
                      //creditBalance=creditBalance+Double.valueOf(""+jTable2.getValueAt(i,5));
                      bdCRBalance=bdCRBalance.add(new java.math.BigDecimal(""+jTable2.getValueAt(i,5)));
                      //duesWithDC=duesWithDC+Double.valueOf(""+jTable2.getValueAt(i,6));
                      bdDue=bdDue.add(new java.math.BigDecimal(""+jTable2.getValueAt(i,6)));
                  }

                  /* for(int i=0;i<10;i++)
                   {
                       arr[0]="0.00";
                       arr[1]="0.00";
                       arr[2]="0.00";
                       arr[3]="0.00";
                       arr[4]="0.00";
                       arr[5]="0.00";
                       arr[6]="0.00";
                       dtm1.addRow(arr);
                   }*/





                  arr[0]="Grand Total";
                 /* arr[1]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                  arr[2]=(""+new java.math.BigDecimal(paymentReceived).setScale(2,5));
                  arr[3]=(""+new java.math.BigDecimal(TOTAL).setScale(2,5));
                  arr[4]=(""+new java.math.BigDecimal(currentAmount).setScale(2,5));
                  arr[5]=(""+new java.math.BigDecimal(creditBalance).setScale(2,5));
                  arr[6]=(""+new java.math.BigDecimal(duesWithDC).setScale(2,5));*/
                  arr[1]=""+tempTOT;
                  arr[2]=""+bdDebit;
                  arr[3]=""+bdTotal;
                  arr[4]=""+bdPaid;
                  arr[5]=""+bdCRBalance;
                  arr[6]=""+bdDue.setScale(2,5);
                  dtm1.addRow(arr);



                  int n=dtm1.getRowCount();
                  jTable2.setRowSelectionInterval(n-1,n-1);
                  
        }

 loadDepartmentWiseDetail();
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadWholeDetail Class"+e);
    }
    }
}
private double dueAmount(String cashiercode)
{
    double amount=0.0,receivedamount=0.0,dueAmount=0.0,totalDueAmt=0.0,totdue=0.0,returningAmt=0.0,lastyearDueAmt=0.0,totalChequeAmt=0.0;
    String load=cashiercode;
    String  getChequeAmt[]=null;
  //  String dpCode=dpcode;
    try
    {
        String d1[]=jLabel2.getText().split("-");
        String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String  qry="Select dueamount from opening_dueamount where cashier_code="+Integer.parseInt(load)+"";
        String dueAmt=object1.getSigetngleValue(qry,Main.year);
        if(dueAmt.length()>0 || dueAmt.equals("")==false)// || dueAmt.length>0)
                  dueAmount=Double.valueOf(dueAmt);
        else if(dueAmt.length()==0)
                  dueAmount=0.0;

        //qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load)+" and amounttype='"+"Cash"+"' and edate<'"+setDate+"'";
        //qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load)+"  and edate<='"+setDate+"'";
        qry="Select sum(mix_amount) from build_distribution where cashier_code="+Integer.parseInt(load)+"  and edate<='"+setDate+"'";
        String amt=object1.getSigetngleValue(qry,Main.year);
        if(amt!=null )//|| amt.length>0)
                  amount=Double.valueOf(amt);
        else if(amt==null || amt.equals("")==true)
                  amount=0.0;


        //qry="Select distinct(bill_Code) from build_distribution where cashier_code="+Integer.parseInt(load)+" and dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate+"'";
        qry="Select sum(chq_Amt) from build_distribution where cashier_code="+Integer.parseInt(load)+" and edate='"+setDate+"'";
        String totalChqAmount[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(totalChqAmount!=null)
        {
            totalChequeAmt=Double.valueOf(totalChqAmount[0]);
        }
        else
        {
            totalChequeAmt=0.0;
        }
        /*qry="Select distinct(bill_Code) from build_distribution where cashier_code="+Integer.parseInt(load)+" and edate='"+setDate+"'";
                        String getBillCode[]=object1.getResultSetAs_1D_Array(qry, Main.year);
                        if(getBillCode!=null)
                        {
                            for(int k=0;k<getBillCode.length;k++)
                            {
                                qry="Select distinct(bill_Code) from cheque_details where bill_Code="+Integer.parseInt(getBillCode[k]);
                                String tempBillCode[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                                for(int x=0;x<tempBillCode.length;x++)
                                {
                                    qry="Select sum(chq_amt) from cheque_details where bill_Code="+Integer.parseInt(tempBillCode[x]);
                                    getChequeAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
                                    totalChequeAmt=totalChequeAmt+Double.valueOf(getChequeAmt[x]);

                                }
                          //  System.out.println("getChequeAmt....cheque amt...."+totalChequeAmt);
                            }
                        }*/


      
                  //////sum of received amount///////////////
        qry="Select sum(received_amount) from received_cash_detail where cashier_code="+Integer.parseInt(load)+" and edate<'"+setDate+"'";
        String receivedAmt=object1.getSigetngleValue(qry,Main.year);
        if(receivedAmt!=null)// || receivedAmt.length>0)
                  receivedamount=Double.valueOf(receivedAmt);
        else if(receivedAmt==null)
                  receivedamount=0.0;
        totdue=(dueAmount+amount)-totalChequeAmt;
        //if(totdue>=receivedamount)
            totalDueAmt=totdue-receivedamount;
       // else
        //    totalDueAmt=totdue;
       //     System.out.println("totalDueAmt................"+totalDueAmt);

        String deadDate=2000+"-"+1+"-"+1;
        /////////////returning dues of closed challan/////////////////
        qry="Select edate from challan_detail where edate<'"+setDate+"' and cashier_code="+Integer.parseInt(load)+" and closing_status="+"1"+" order by edate asc";
        String loadDate[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(loadDate!=null && loadDate.length>0)
        {
            for(int i=0;i<loadDate.length;i++)
            {
                String D1[]=loadDate[i].split("-");
                String matchDate=D1[2]+"-"+D1[1]+"-"+D1[0];
                //qry="Select sum(amount) from build_distribution where edate='"+matchDate+"' and paymentdate='"+deadDate+"' and (amounttype='"+"Cash"+"' and cashier_code="+Integer.parseInt(load)+")";
                qry="Select sum(amount) from build_distribution where edate='"+matchDate+"' and paymentdate='"+deadDate+"' and cashier_code="+Integer.parseInt(load)+"";
                String getReturningAmount=object1.getSigetngleValue(qry,Main.year);
                if(getReturningAmount!=null && getReturningAmount.length()>0)
                {
                    returningAmt=returningAmt+Double.valueOf(getReturningAmount);
                }
              
            }
        }
       // if(totalDueAmt>=returningAmt)
            totalDueAmt=totalDueAmt-returningAmt;
        /////////////////////////////////////////////////////////////
    }
    catch(Exception e)
    {
        System.out.println("Error ! In due Amount Method."+e);
    }
    return totalDueAmt;
}

private void loadDepartmentWiseDetail()
{
    try
    {
        dtm2.setRowCount(0);
        double amt1=0.0;
        String d1[]=jLabel2.getText().split("-");
        String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];

        String deadDate=2000+"-"+1+"-"+1;
        //jTable3.setGridColor(java.awt.Color.DARK_GRAY);
        //System.out.println("deadDate......"+deadDate);
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
                interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select dp_code from department_detail order by dp_code asc";
        String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(load!=null)
        {
             /*qry="Select sum(amount) from build_distribution where dp_code="+Integer.parseInt(load[0])+" and (edate<'"+setDate+"' and paymentDate='"+deadDate+"')";

             String getAmt1[]=object1.getResultSetAs_1D_Array(qry,Main.year);

             if(getAmt1[0]!=null)
             {
                    amt1=Double.valueOf(getAmt1[0]);
             }*/
            String head[]=new String[load.length];
            for(int i=0;i<load.length;i++)
            {
                qry="select dp_name from department_detail where dp_code="+Integer.parseInt(load[i]);
                head[i]=object1.getSigetngleValue(qry,Main.year);
               // loadDpName[i]=getDpName
              //  System.out.println(head[i]);
            }
            dtm2=new javax.swing.table.DefaultTableModel(head,0);
            jTable3.setModel(dtm2);
             javax.swing.table.TableColumn column;
             javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
              javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
               CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
             CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
             for(int x=0;x<head.length;x++)
             {
                    column=jTable3.getColumn(head[x]);
              //      System.out.println("head......"+column);
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(120);
        //jTable3.setRowHeight(x,80);
             }

            double OB=0.0,creditBalance=0.0;
            String arr[]=null;
            int ind=0;
            for(int i=0;i<5;i++)
            {
                arr=new String[load.length];
                   java.math.BigDecimal bdCredit=new java.math.BigDecimal("0");
                java.math.BigDecimal bdOldBils=new java.math.BigDecimal("0");
              java.math.BigDecimal bdDebit=new java.math.BigDecimal("0");
                java.math.BigDecimal bdTotal=new java.math.BigDecimal("0");
                java.math.BigDecimal bdCRBalance=new java.math.BigDecimal("0");
                java.math.BigDecimal bdDue=new java.math.BigDecimal("0");
                java.math.BigDecimal tempTOT=new java.math.BigDecimal("0");
                java.math.BigDecimal bdPaid=new java.math.BigDecimal("0");
                java.math.BigDecimal bdtemp1=new java.math.BigDecimal("0");
                java.math.BigDecimal bdtemp2=new java.math.BigDecimal("0");

                if(i==0)
                {
                    for(int j=0;j<load.length;j++)
                    {



                        /*qry="Select dp_code from build_distribution where edate<'"+setDate+"' and dp_code="+Integer.parseInt(load[j])+" and paymentDate='"+deadDate+"'";

                        String getDpCode=object1.getSigetngleValue(qry, Main.year);
                        System.out.println("getDpCode 112222..."+getDpCode);
                        if(getDpCode.length()>0)
                        {*/
                       // creditBalance=0.0;
                       /*    qry="Select sum(creditbalance) from cashier_creditbalance";
                           String getCredit[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                           if(getCredit[0]!=null)
                               creditBalance=Double.valueOf(getCredit[0]);
                           else
                               creditBalance=0.0;*/

                           // qry="Select sum(amount) from build_distribution where dp_code="+Integer.parseInt(load[j])+" and  amounttype='"+"Cash"+"' and(edate<'"+setDate+"' and paymentdate='"+deadDate+"')";
                          //qry="Select sum(amount) from build_distribution where dp_code="+Integer.parseInt(load[j])+" and(edate<'"+setDate+"' and paymentdate='"+deadDate+"')";
                          qry="Select sum(mix_amount) from build_distribution where dp_code="+Integer.parseInt(load[j])+" and(edate<'"+setDate+"' and paymentdate='"+deadDate+"')";
                            System.out.println("qry.coming here here 1234234........."+qry);
                            String getAmt1=object1.getSigetngleValue(qry,Main.year);
                      //      System.out.println("getAmt1........."+getAmt1);
                            if(getAmt1!=null)
                            {
                                arr[j]=getAmt1;//+creditBalance;
                            //    javax.swing.JOptionPane.showMessageDialog(null,"TOT....of dp..."+arr[j]);
                            }
                            else
                                arr[j]="0.00";

                            //qry="Select sum(mix_amount) from build_distribution where dp_code="+Integer.parseInt(load[j])+" and(edate<'"+setDate+"' and paymentdate='"+deadDate+"')";

                       /* }
                        else
                            arr[j]="0.00";*/
                        
                    }
                    dtm2.addRow(arr);
                }
                if(i==1)
                {
                    for(int j=0;j<load.length;j++)
                    {
                       //qry="Select sum(amount) from build_distribution where dp_code="+Integer.parseInt(load[j])+" and edate='"+setDate+"' and paymentDate='"+deadDate+"'";
                        //qry="Select sum(amount) from build_distribution where dp_code="+Integer.parseInt(load[j])+" and edate='"+setDate+"' and amounttype='"+"Cash"+"'";
                        //qry="Select sum(amount) from build_distribution where dp_code="+Integer.parseInt(load[j])+" and edate='"+setDate+"'";
                        qry="Select sum(mix_amount) from build_distribution where dp_code="+Integer.parseInt(load[j])+" and edate='"+setDate+"'";
                       //System.out.println("qry.shweta3333........."+qry);
                       String getAmt1=object1.getSigetngleValue(qry,Main.year);
                       if(getAmt1!=null)
                             arr[j]=getAmt1;
                       else
                             arr[j]="0.0";
                       
                    }
                    dtm2.addRow(arr);
                }
                if(i==2)
                {
                    int n=dtm2.getRowCount();
                    double tot=0.0;
                    
                        for(int k=0;k<load.length;k++)
                        {
                            tot=0.0;
                            tempTOT=new java.math.BigDecimal("0");
                            bdCredit=new java.math.BigDecimal("0");
                            for(int j=0;j<n;j++)
                            {
                                if(k==0 && j==0)
                                {
                                    qry="Select sum(creditbalance) from cashier_creditbalance";
                                    String getCredit[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                                    if(getCredit[0]!=null)
                                    {
                                     //   creditBalance=Double.valueOf(getCredit[0]);
                                        bdCredit=bdCredit.add(new java.math.BigDecimal(getCredit[0]));
                                    }
                                    else
                                    {
                                    //creditBalance=0.0;
                                        bdCredit=bdCredit.add(new java.math.BigDecimal("0"));
                                    }
                                    tempTOT=tempTOT.add(bdCredit);
                                    tempTOT=tempTOT.add(new java.math.BigDecimal(""+jTable3.getValueAt(j,k)));
                              //      System.out.println("tempTOT>>>>>>>>>>>>>>."+tempTOT);
                                    //tot=tot+creditBalance+Double.valueOf(""+jTable3.getValueAt(j,k));
                                }
                                else
                                {
                                 //  tot=tot+Double.valueOf(""+jTable3.getValueAt(j,k));
                                    tempTOT=tempTOT.add(new java.math.BigDecimal(""+jTable3.getValueAt(j,k)));
                                }

                                //arr[k]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                                arr[k]=""+tempTOT;
                            }
                        }
                    dtm2.addRow(arr);
                    n=dtm2.getRowCount();
                    jTable3.setRowSelectionInterval(n-1,n-1);
                }
                if(i==3)
                {
                    for(int j=0;j<load.length;j++)
                    {
                       //qry="Select sum(amount) from build_distribution where dp_code="+Integer.parseInt(load[j])+" and paymentdate='"+setDate+"'";
                       qry="Select sum(mix_amount) from build_distribution where dp_code="+Integer.parseInt(load[j])+" and paymentdate='"+setDate+"'";
                      // System.out.println("qry.........."+qry);
                       String getAmt1=object1.getSigetngleValue(qry,Main.year);
                       if(getAmt1!=null)
                           arr[j]=getAmt1;
                       else
                           arr[j]="0.0";
                    }
                    dtm2.addRow(arr);
                }
                if(i==4)
                {
                    int n=dtm2.getRowCount();
                    double tot=0.0;
                    String temp1[]=new String[load.length];
                    for(int k=0;k<load.length;k++)
                    {
                         tot=0.0;
                          tempTOT=new java.math.BigDecimal("0");
                         for(int j=2;j<3;j++)
                         {
                          //   tot=tot+Double.valueOf(""+jTable3.getValueAt(j,k));
                             tempTOT=tempTOT.add(new java.math.BigDecimal(""+jTable3.getValueAt(j,k)));
                             //temp1[k]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                             temp1[k]=""+tempTOT;
                           //  System.out.println("temp1[k]>>>>>>>>>>"+temp1[k]);
                         }
                    }
                    String temp[]=new String[load.length];
                    for(int k=0;k<load.length;k++)
                    {
                         tot=0.0;
                         tempTOT=new java.math.BigDecimal("0");
                         for(int j=3;j<4;j++)
                         {
                            // tot=tot+Double.valueOf(""+jTable3.getValueAt(j,k));
                             tempTOT=tempTOT.add(new java.math.BigDecimal(""+jTable3.getValueAt(j,k)));
                             //temp[k]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                               temp[k]=""+tempTOT;
                           //    System.out.println("temp[k]>>>>>>>>>>"+temp[k]);
                         }
                    }

                    for(int c=0;c<load.length;c++)
                    {
                        bdtemp1=new java.math.BigDecimal("0");
                        bdtemp2=new java.math.BigDecimal("0");
                        bdtemp1=bdtemp1.add(new java.math.BigDecimal(temp1[c]));
                     //   System.out.println("bdtemp1>>>>>>>>>>"+bdtemp1);
                        bdtemp2=bdtemp2.add(new java.math.BigDecimal(temp[c]));
                     //   System.out.println("bdtemp2>>>>>>>>>>"+bdtemp2);
                        if(Double.valueOf(temp1[c])>Double.valueOf(temp[c]))
                        {
                         //   arr[c]=""+(Double.valueOf(temp1[c])-Double.valueOf(temp[c]));
                           
                            bdtemp1=bdtemp1.subtract(bdtemp2);
                            arr[c]=""+bdtemp1;
                         //   System.out.println("arr[c]>>>>>>>>>>"+arr[c]);
                        }
                        else
                            arr[c]="0.0";
                    }

                    dtm2.addRow(arr);
                    int rowCount =dtm2.getRowCount()-1;
                    if(rowCount%2==0)
                    {
                        jTable3.setBackground(java.awt.Color.cyan);
                        jTable3.addRowSelectionInterval(rowCount,rowCount);
                    }
                    else
                    {
                            jTable3.setBackground(java.awt.Color.orange);
                        jTable3.addRowSelectionInterval(rowCount,rowCount);
                         jTable3.setGridColor(java.awt.Color.RED);
                    }
                 //   n=dtm2.getRowCount();
                 //   jTable3.setRowSelectionInterval(n-1,n-1);
                    //jTable3.setRowSelectionInterval(2,2);
                }

            }
            double totalCreditAmt=0.0,tot=0.0;
            java.math.BigDecimal bdCRBalance=new java.math.BigDecimal("0");
            qry="Select sum(creditbalance) from cashier_creditbalance";
            String getCreditAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
            if(getCreditAmt[0]!=null)
            {
                //totalCreditAmt=Double.valueOf(getCreditAmt[0]);
                bdCRBalance=bdCRBalance.add(new java.math.BigDecimal(getCreditAmt[0]));
             //   System.out.println("bdCRBalance......"+bdCRBalance);
            }
            
            for(int i=0;i<5;i++)
            {
                tot=0.00;
                 java.math.BigDecimal tempTOT=new java.math.BigDecimal("0");
                for(int j=0;j<load.length;j++)
                {
                   // tot=tot+Double.valueOf(""+jTable3.getValueAt(i,j));
                    tempTOT=tempTOT.add(new java.math.BigDecimal(""+jTable3.getValueAt(i,j)));
                }
                if(i==0)
                {
                    //tot=tot+totalCreditAmt;
                    tempTOT=tempTOT.add(bdCRBalance);
                    jTextField1.setText(""+tempTOT);
                  //  System.out.println("tot.............."+tot);
                  //  jLabel5.setText(""+new java.math.BigDecimal(tot).setScale(2,5));
                      jLabel5.setText(""+tempTOT);
                }
                if(i==1)
                {
                 //   jLabel6.setText(""+new java.math.BigDecimal(tot).setScale(2,5));
                       jLabel6.setText(""+tempTOT);
                       jTextField2.setText(""+tempTOT);
                }
                if(i==2)
                {
                    tot=tot;
                  //  jLabel7.setText(""+new java.math.BigDecimal(tot).setScale(2,5));
                      jLabel7.setText(""+tempTOT);
                      jTextField3.setText(""+tempTOT);
                }
                if(i==3)
                {
                 //   jLabel3.setText(""+new java.math.BigDecimal(tot).setScale(2,5));
                       jLabel3.setText(""+tempTOT);
                       jTextField4.setText(""+tempTOT);
                }
                if(i==4)
                {
                    tot=tot;
                  //  jLabel8.setText(""+new java.math.BigDecimal(tot).setScale(2,5));
                      jLabel8.setText(""+tempTOT);
                      jTextField5.setText(""+tempTOT);
                }
            }

        }


    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadDepartmentWiseDetail Method."+e);
    }

}
/*private double backDateCalculation(String cashierCode)
{
    double amount=0.0;
    String d1[]=jLabel2.getText().split("-");
    String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
    try
    {
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select sum(amount) from carryforward_build_distribution where cashier_code="+Integer.parseInt(cashierCode)+" and amounttype='"+"Cash"+"'and edate<'"+setDate+"'";
        String getAmt=object1.getSigetngleValue(qry,Main.year);
        if(getAmt!=null && getAmt.equals("")==false)
        {
            amount=Double.valueOf(getAmt);
        }

    }
    catch(Exception e)
    {
        System.out.println("Error ! In backDateCalculation Method."+e);
    }

    return amount;
}*/
class printDCReport1 extends javax.swing.JFrame
{
        PrintWriter pw;
           public printDCReport1()
           {
                  
                     FileOutputStream fos=null;
                        try
                        {
                                String space="";
                                String temp="";
                                int rep=0;
                                int maxrows=68;
                                System.out.println("Start printing");
                              //  fos=new FileOutputStream("LPT1");
                              

                                try
                                {
                                        fos=new java.io.FileOutputStream("LPT1");
                                   /// fos=new java.io.FileOutputStream("System.in");//LPT1");
                                  // fos=new java.io.FileOutputStream("DCRpt.in");
                                        System.out.println("inside find port...LPT1");
                                }
                                catch(Exception ex)
                                {
                                        System.out.println("port not found..."+ex);
                                        fos=new java.io.FileOutputStream("DCRpt.in");//LPT1");
                                }


                                 interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}


                                pw=new PrintWriter(fos);
                                int countLine=1;
                                String line="";
                                int l=0;
                                pw.println("");
                                pw.println("");
                                pw.println("");
                                pw.println("");

                                //pw.println("                                                        SECTION REPORT");
                                pw.println("EAST CENTRAL RAILWAY                    DIVISIONAL CASH PAY OFFICE      ECR MUGHALSARAI");
                                pw.println("PAY MASTER/SR.DC's Balance Register for :          "+jLabel2.getText().toUpperCase());
                               // pw.println("DATE : "+dateValuelb.getText());
                                pw.println("");
                                pw.println("---------------------------------------------------------------------------------------------------------------------------------");
                                pw.println("CO7     Net Payab   Cashier     OB           Debit       Total        Credit      CB          Dues with  ");
                                pw.println("        le Amount   No.                                                                       Sr. DC     ");
                                pw.println("---------------------------------------------------------------------------------------------------------------------------------");

                                countLine=11;
                                
                                int row=countLine;
                                ////////////there is need to change to execute two tables together/////////
                                int row1=0,start=0,flag1=0,flag2=0,z=0,x1=1,index=0,ok=0;
                                if(jTable1.getRowCount()>jTable2.getRowCount())
                                   start=jTable1.getRowCount();
                                else if(jTable2.getRowCount() > jTable1.getRowCount())
                                   start=(jTable2.getRowCount()+1);

                                start=start+(jTable3.getRowCount()+5);
                               System.out.println("start......."+start);
                                //////////////////////////////////////////////////////////////////////////
                                //for(int r=0,r1=0;r<jTable1.getRowCount()|| r1<jTable2.getRowCount();r++,r1++)
                                //for(int r=0,r1=0;r<jTable1.getRowCount()|| r1<jTable1.getRowCount();r++,r1++)
                              
                                for(int r=0;r<start;)
                                {
                                    //if(flag2==1 && r<jTable1.getRowCount())
                                    if(index==1)
                                        ok=1;
                                    if(r<jTable1.getRowCount())
                                    {
                                       /* if(z==jTable3.getRowCount())
                                            pw.println();*/
                                        
                                        temp=""+jTable1.getValueAt(r,0);
                                      //  System.out.println(r+" temp....."+temp);
                                        rep=7-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=temp+space+"|";
                                        pw.print(line);
                                        l=line.length();

                                        temp =""+jTable1.getValueAt(r,1);
                                        System.out.println(r+" temp....."+temp);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);
                                        //flag2=1;
                                     //   r++;
                                    
                                    }
                                    else if(flag1!=3)
                                    {
                                        //flag2=0;
                                        rep=7;
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space;
                                        pw.print(line);
                                        rep=12;
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+"|";
                                        pw.print(line);

                                    }
                                    else if(jTable1.getRowCount()<=jTable2.getRowCount())
                                    {
                                        rep=19;
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+"|";
                                        pw.print(line);

                                    }
                                 /*   else if(jTable2.getRowCount()<=jTable1.getRowCount())
                                    {
                                        rep=19;
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+"|";
                                        pw.print(line);
                                    }*/
                                    //if(flag1==1 && r<jTable2.getRowCount())
                                    if(r<jTable2.getRowCount())
                                    {
                                        
                                        if(r==jTable2.getRowCount()-2)
                                        {
                                            rep=85;
                                            space="";
                                            for(int x=1;x<=rep;space+="-",x++);
                                            line=space;
                                            pw.print(line);
                                        }
                                        else
                                        {
                                        temp=""+jTable2.getValueAt(r,0);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,1);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,2);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,3);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,4);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,5);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,6);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);
                                        }
                                      //  pw.println();
                                       row++;
                                    }
                                    else
                                    {
                                        flag1=3;
                                       // x1=1;
                                       
                                    }
                                    if(flag1==3)
                                    {
                                       System.out.println("Cominghere...."+flag1);
                                       if(x1<=5)
                                       {
                                           
                                           if(x1==4)
                                           {
                                                temp=""+jTable3.getColumnName(0);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=temp+space+"|";
                                                pw.print(line);
                                                
                                                temp=""+jTable3.getColumnName(1);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=temp+space+"|";
                                                pw.print(line);
                                                
                                                temp=""+jTable3.getColumnName(2);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=temp+space+"|";
                                                pw.print(line);

                                                temp="Total";
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=temp+space+"|";
                                                pw.print(line);
                                                row++;
                                                                                   
                                           }
                                           else if(x1==5)
                                           {
                                               rep=48;
                                               space="";
                                               for(int x=1;x<=rep;space+="-",x++);
                                               line=space;
                                               pw.print(line);
                                               index=1;
                                               row++;
                                           }
                                           else
                                           {
                                           rep=11;
                                           space="";
                                           for(int x=1;x<=rep;space+=" ",x++);
                                           line=space;
                                           pw.print(line);
                                           row++;
                                           }
                                           x1++;
                                       }
                                       if(ok==1)
                                       {
                                           System.out.println("ok>>>>>>>>>>"+ok);
                                           if(z<jTable3.getRowCount())
                                           {
                                                temp=""+jTable3.getValueAt(z,0);
                                                System.out.println("temp...333333...."+temp);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=space+temp+"|";
                                                pw.print(line);

                                                temp=""+jTable3.getValueAt(z,1);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=space+temp+"|";
                                                pw.print(line);

                                                temp=""+jTable3.getValueAt(z,2);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=space+temp+"|";
                                                pw.print(line);
                                                if(z==0)
                                                {
                                                   temp=jLabel5.getText();
                                                   temp=jTextField1.getText().trim();
                                                }
                                                if(z==1)
                                                {
                                                   temp=jLabel6.getText();
                                                   temp=jTextField2.getText().trim();
                                                }
                                                if(z==2)
                                                {
                                                   temp=jLabel7.getText();
                                                   temp=jTextField3.getText().trim();
                                                }
                                                if(z==3)
                                                {
                                                   temp=jLabel3.getText();
                                                   temp=jTextField4.getText().trim();
                                                }
                                                if(z==4)
                                                {
                                                   temp=jLabel8.getText();
                                                   temp=jTextField5.getText().trim();
                                                }
                                                System.out.println("temp inside....."+temp);
                                                 rep=11-temp.length();
                                                 space="";
                                                 for(int x=1;x<=rep;space+=" ",x++);
                                                 line=space+temp+"|";
                                                 pw.print(line);

                                                z++;
                                               // pw.println();
                                               // row++;
                                           }
                                       }

                                       
                                    }


                                    r++;
                                    pw.println();
                                    row++;

                                    if(row>maxrows)
                                    {
                                        int next=maxrows-row;
                                       scroll(next) ;
                                    }
                                    /*if(row<maxrows)
                                    {
                                      System.out.println("Coming here 999999......");
                                      scroll();

                                    }*/
                                    
                                 //   System.out.println("row..........."+row);
                                }
                          //     scroll();
                        /*       double total1=0.0,total2=0.0;
                            //   double dcAmt=0.0;
                                String d1[]=jLabel2.getText().split("-");
                                String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
                                String qry="Select asset,amount from fixedassets";
                                String data[][]=object1.getInformationDD(qry,2,Main.year);
                                qry="Select AdvanceText1,Amount1,AdvanceText2,Amount2,AdvanceText3,Amount3,AdvanceText4,Amount4,AdvanceText5,Amount5,TotalAmount from integrated_assetsvalue where edate='"+setDate+"'";
                                System.out.println("qry........"+qry);
                                String data1[][]=object1.getInformationDD(qry,11,Main.year);
                                System.out.println("data1......"+data1.length);
                                temp="LIABILITIES";
                                System.out.println(" temp....."+temp);
                                rep=15-temp.length();
                                space="";
                                for(int x=1;x<=rep;space+=" ",x++);
                                line=temp+space+"|";
                                pw.print(line);
                                l=line.length();

                                temp =" ";
                                System.out.println(" temp....."+temp);
                                rep=15-temp.length();
                                space="";
                                for(int x=1;x<=rep;space+=" ",x++);
                                   line=space+"|";
                                   pw.print(line);

                               temp="ASSETS";
                               System.out.println("temp.........."+temp);
                               rep=15-temp.length();
                                space="";
                                for(int x=1;x<=rep;space+=" ",x++)
                                   line=temp+space+"|";
                                   pw.print(line);
                               temp =" ";
                                System.out.println(" temp....."+temp);
                                rep=15-temp.length();
                                space="";
                                for(int x=1;x<=rep;space+=" ",x++);
                                   line=space+temp+"|";
                                   pw.print(line);
                                   pw.println();
                                   space="";
                                for(int i=0;i<63;space +="-",i++);
                                   pw.println(space);


                                 int y=0;
                                 System.out.println("data len.........."+data.length);
                                for(int i=0;i<data.length;i++)
                                {
                                    if(i==0)
                                    {
                                        temp="DUES RETAINED";
                                        rep=15-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                         line=temp+space+"|";
                                        pw.print(line);
                                        temp=""+jTable2.getValueAt(jTable2.getSelectedRow(),6);
                                        total1=total1+Double.valueOf(temp);
                                        rep=15-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++)
                                         line=space+temp+"|";
                                        pw.print(line);

                                    }
                                    if(i==1)
                                    {

                                        temp="LIEU CASH";
                                        rep=15-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                         line=temp+space+"|";
                                        pw.print(line);
                                        temp="0";
                                        total1=total1+Double.valueOf(temp);
                                        rep=15-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++)
                                         line=space+temp+"|";
                                        pw.print(line);


                                    }
                                    if(i>1)
                                    {
                                      
                                        pw.print(" ");
                                        space="";
                                        for(int x=1;x<=15;space+=" ",x++)
                                         line=space+"|";
                                        pw.print(line);

                                     
                                        space="";
                                        for(int x=1;x<=15;space+=" ",x++)
                                         line=space+"|";
                                        pw.print(line);


                                    }
                                    temp=data[i][0];
                                    rep=15-temp.length();
                                    space="";
                                    for(int x=1;x<=rep;space+=" ",x++)
                                        line=temp+space+"|";
                                    pw.print(line);
                                    temp=data[i][1];
                                    total2=total2+Double.valueOf(data[i][1]);
                                    rep=15-temp.length();
                                    space="";
                                    for(int x=1;x<=rep;space+=" ",x++)
                                        line=space+temp+"|";
                                    pw.println(line);

                                                              
                                }
                          
                                 String temp1="";
                                  for(int i=0;i<5;i++)
                                 {
                                      
                                      pw.print(" ");
                                     space="";
                                     for(int x=1;x<15;space+=" ",x++);
                                         line=space+"|";
                                     pw.print(line);
                                     space="";
                                     for(int x=1;x<15;space+=" ",x++);
                                         line=space+"|";
                                     pw.print(line);
                                     if(data1.length>0)
                                     {
                                    if(i==0)
                                    {
                                        temp=data1[0][0];
                                            System.out.println("temp...1st..."+temp);
                                        temp1=data1[0][1];
                                         total2=total2+Double.valueOf(temp1);
                                            System.out.println("temp..2nd...."+temp1);

                                    }
                                         else if(i == 1)
                                    {
                                        temp=data1[0][2];
                                            System.out.println("temp...1st..."+temp);
                                        temp1=data1[0][3];
                                        total2=total2+Double.valueOf(temp1);
                                            System.out.println("temp..2nd...."+temp1);
                                    }
                                         else if(i == 2)
                                     {
                                         temp=data1[0][4];
                                            System.out.println("temp...1st..."+temp);
                                        temp1=data1[0][5];
                                        total2=total2+Double.valueOf(temp1);
                                            System.out.println("temp..2nd...."+temp1);
                                     }
                                         else if(i == 3)
                                     {
                                         temp=data1[0][6];
                                            System.out.println("temp...1st..."+temp);
                                        temp1=data1[0][7];
                                        total2=total2+Double.valueOf(temp1);
                                            System.out.println("temp..2nd...."+temp1);
                                     }
                                         else if(i == 4)
                                     {
                                         temp=data1[0][8];
                                            System.out.println("temp...1st..."+temp);
                                        temp1=data1[0][9];
                                        total2=total2+Double.valueOf(temp1);
                                            System.out.println("temp..2nd...."+temp1);
                                     }
                                     }
                                     else
                                     {
                                        temp=" ";
                                        temp1="0.00";
                                        total2=total2+Double.valueOf(temp1);
                                     }
                                    
                                     rep=15-temp.length();
                                     space="";
                                     for(int x=1;x<=rep;space+=" ",x++)
                                         line=temp+space+"|";
                                     pw.print(line);

                                     //temp=arr[i+1];
                                  
                                     rep=15-temp1.length();
                                     space="";
                                     for(int x=1;x<=rep;space+=" ",x++)
                                         line=space+temp1+"|";
                                    // i++;
                                     pw.println(line);


                                    
                                    
                                  
                                   //  pw.println();

                                 }
                                 space="";
                                   for(int i=0;i<63;space +="-",i++);
                                   pw.println(space);
                                   pw.print(" ");
                                   temp="Grand Total";
                                   space="";
                                   rep=15-temp.length();
                                   for(int x=1;x<=rep;space+=" ",x++)
                                       line=temp+space+"|";
                                   pw.print(line);
                                   temp=""+total1;
                                   space="";
                                   rep=15-temp.length();
                                   for(int x=1;x<=rep;space+=" ",x++)
                                       line=space+temp+"|";
                                   pw.print(line);
                                   temp="Total";
                                   space="";
                                   rep=15-temp.length();
                                   for(int x=1;x<=rep;space+=" ",x++)
                                       line=temp+space+"|";
                                   pw.print(line);
                                   temp=""+total2;
                                   space="";
                                   rep=15-temp.length();
                                   for(int x=1;x<=rep;space+=" ",x++)
                                       line=space+temp+"|";
                                   pw.println(line);*/

                                pw.close();
                                fos.close();
                               
                                System.out.println("End printing");
                            
                              
                    }
                    catch(Exception x)
                    {
                                System.out.println("Error at the time of divisionreport's printing...."+x);
                    }

         }
   public void scroll()
     {
            for(int i=1;i<=6;i++)
            {
                pw.println();
            }
     }
     public void scroll(int n)
     {
            for(int i=1;i<=n;i++)
            {
                pw.println();
            }
     }

  }
class printDCReport extends javax.swing.JFrame
{
        PrintWriter pw;
           public printDCReport()
           {

                     FileOutputStream fos=null;
                        try
                        {
                                String space="";
                                String temp="";
                                int rep=0;
                                int maxrows=68;
                                System.out.println("Start printing");
                              //  fos=new FileOutputStream("LPT1");


                                try
                                {
                                        fos=new java.io.FileOutputStream("LPT1");
                                   // fos=new java.io.FileOutputStream("System.in");//LPT1");
                                   // fos=new java.io.FileOutputStream("DCRpt.in");
                                        System.out.println("inside find port...LPT1");
                                }
                                catch(Exception ex)
                                {
                                        System.out.println("port not found...");
                                        fos=new java.io.FileOutputStream("System.in");//LPT1");
                                }

                                pw=new PrintWriter(fos);
                                int countLine=1;
                                String line="";
                                int l=0;
                                pw.println("");
                                pw.println("");
                                pw.println("");
                                pw.println("");

                                //pw.println("                                                        SECTION REPORT");
                                pw.println("EAST CENTRAL RAILWAY                    DIVISIONAL CASH PAY OFFICE      ECR MUGHALSARAI");
                                pw.println("PAY MASTER/SR.DC's Balance Register for :          "+jLabel2.getText().toUpperCase());
                               // pw.println("DATE : "+dateValuelb.getText());
                                pw.println("");
                                pw.println("---------------------------------------------------------------------------------------------------------------------------------");
                                pw.println("CO7     Net Payab   Cashier     OB           Debit       Total        Credit      CB          Dues with  ");
                                pw.println("        le Amount   No.                                                                       Sr. DC     ");
                                pw.println("---------------------------------------------------------------------------------------------------------------------------------");

                                countLine=11;

                                int row=countLine;
                                ////////////there is need to change to execute two tables together/////////
                                int row1=0,start=0,flag1=0,flag2=0,z=0,x1=1,index=0,ok=0;
                                if(jTable1.getRowCount()>jTable2.getRowCount())
                                   start=jTable1.getRowCount();
                                else if(jTable2.getRowCount() > jTable1.getRowCount())
                                   start=(jTable2.getRowCount()+1);

                                start=start+(jTable3.getRowCount()+14);
                               System.out.println("start......."+start);
                                //////////////////////////////////////////////////////////////////////////
                                //for(int r=0,r1=0;r<jTable1.getRowCount()|| r1<jTable2.getRowCount();r++,r1++)
                                //for(int r=0,r1=0;r<jTable1.getRowCount()|| r1<jTable1.getRowCount();r++,r1++)

                                for(int r=0;r<start;)
                                {
                                    //if(flag2==1 && r<jTable1.getRowCount())
                                    if(index==1)
                                        ok=1;
                                    if(r<jTable1.getRowCount())
                                    {
                                       /* if(z==jTable3.getRowCount())
                                            pw.println();*/

                                        temp=""+jTable1.getValueAt(r,0);
                                        System.out.println(r+" temp....."+temp);
                                        rep=7-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=temp+space+"|";
                                        pw.print(line);
                                        l=line.length();

                                        temp =""+jTable1.getValueAt(r,1);
                                        System.out.println(r+" temp....."+temp);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);
                                        //flag2=1;
                                     //   r++;

                                    }
                                    else if(flag1!=3)
                                    {
                                        //flag2=0;
                                        rep=7;
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space;
                                        pw.print(line);
                                        rep=12;
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+"|";
                                        pw.print(line);

                                    }
                                    else if(jTable1.getRowCount()<=jTable2.getRowCount())
                                    {
                                        rep=19;
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+"|";
                                        pw.print(line);

                                    }
                                  
                                 /*   else if(jTable2.getRowCount()<=jTable1.getRowCount())
                                    {
                                        rep=19;
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+"|";
                                        pw.print(line);
                                    }*/
                                    //if(flag1==1 && r<jTable2.getRowCount())
                                    if(r<jTable2.getRowCount())
                                    {

                                        if(r==jTable2.getRowCount()-2)
                                        {
                                            rep=85;
                                            space="";
                                            for(int x=1;x<=rep;space+="-",x++);
                                            line=space;
                                            pw.print(line);
                                        }
                                        else
                                        {
                                        temp=""+jTable2.getValueAt(r,0);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,1);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,2);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,3);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,4);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,5);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);

                                        temp=""+jTable2.getValueAt(r,6);
                                        rep=11-temp.length();
                                        space="";
                                        for(int x=1;x<=rep;space+=" ",x++);
                                        line=space+temp+"|";
                                        pw.print(line);
                                        }
                                      //  pw.println();
                                       row++;
                                    }
                                    else
                                    {
                                        flag1=3;
                                      //  x1=1;

                                    }
                                    if(flag1==3)
                                    {
                                       System.out.println("Cominghere...."+flag1+"  x1>>>"+x1);
                                       if(x1<=5)
                                       {

                                           if(x1==4)
                                           {
                                                temp=""+jTable3.getColumnName(0);
                                                System.out.println("temp inside>>>"+temp);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=temp+space+"|";
                                                pw.print(line);

                                                temp=""+jTable3.getColumnName(1);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=temp+space+"|";
                                                pw.print(line);

                                                temp=""+jTable3.getColumnName(2);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=temp+space+"|";
                                                pw.print(line);

                                                temp="Total";
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=temp+space+"|";
                                                pw.print(line);
                                                row++;

                                           }
                                           else if(x1==5)
                                           {
                                               rep=48;
                                               space="";
                                               for(int x=1;x<=rep;space+="-",x++);
                                               line=space;
                                               pw.print(line);
                                               index=1;
                                               row++;
                                           }
                                           else
                                           {
                                               System.out.println("Coming inside print>>>>>>>>>>");
                                           rep=11;
                                           space="";
                                           for(int x=1;x<=rep;space+=" ",x++);
                                           line=space;
                                           pw.print(line);
                                           row++;
                                           }
                                           x1++;
                                       }
                                       if(ok==1)
                                       {
                                           if(z<jTable3.getRowCount())
                                           {
                                                temp=""+jTable3.getValueAt(z,0);
                                                System.out.println("temp...333333...."+temp);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=space+temp+"|";
                                                pw.print(line);

                                                temp=""+jTable3.getValueAt(z,1);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=space+temp+"|";
                                                pw.print(line);

                                                temp=""+jTable3.getValueAt(z,2);
                                                rep=11-temp.length();
                                                space="";
                                                for(int x=1;x<=rep;space+=" ",x++);
                                                line=space+temp+"|";
                                                pw.print(line);
                                                if(z==0)
                                                {
                                                   temp=jLabel5.getText();
                                                   temp=jTextField1.getText();
                                               }
                                                if(z==1)
                                                {
                                                   temp=jLabel6.getText();
                                                   temp=jTextField2.getText();
                                               }
                                                if(z==2)
                                                {
                                                   temp=jLabel7.getText();
                                                   temp=jTextField3.getText();
                                               }
                                                if(z==3)
                                                {
                                                   temp=jLabel3.getText();
                                                   temp=jTextField4.getText();
                                               }
                                                if(z==4)
                                                {
                                                   temp=jLabel8.getText();
                                                   temp=jTextField5.getText();
                                                }
                                                   

                                                 rep=11-temp.length();
                                                 space="";
                                                 for(int x=1;x<=rep;space+=" ",x++);
                                                 line=space+temp+"|";
                                                 pw.print(line);

                                                z++;
                                               // pw.println();
                                               // row++;
                                           }
                                       }


                                    }
                                    r++;
                                    pw.println();
                                    row++;

                                    if(row>maxrows)
                                    {
                                        int next=maxrows-row;
                                       scroll(next) ;
                                    }
                                    /*if(row<maxrows)
                                    {
                                      System.out.println("Coming here 999999......");
                                      scroll();

                                    }*/

                                 //   System.out.println("row..........."+row);
                                }
                                pw.close();
                                fos.close();

                                System.out.println("End printing");


                    }
                    catch(Exception x)
                    {
                                System.out.println("Error at the time of divisionreport's printing...."+x);
                    }

         }
   public void scroll()
     {
            for(int i=1;i<=6;i++)
            {
                pw.println();
            }
     }
     public void scroll(int n)
     {
            for(int i=1;i<=n;i++)
            {
                pw.println();
            }
     }

  }

}
