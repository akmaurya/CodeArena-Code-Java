/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClosingWindow.java
 *
 * Created on Apr 27, 2012, 2:09:46 PM
 */

package railwaycashoffice;

import java.util.Calendar;
/**
 *
 * @author pratiksha
 */
public class ClosingWindow extends javax.swing.JInternalFrame {

    /** Creates new form ClosingWindow */
    public ClosingWindow() {
        initComponents();
        java.util.Date dt=new java.util.Date();
        int date=dt.getDate();
        int month=dt.getMonth()+1;
        int yr=dt.getYear()+1900;
        String setDate=date+"-"+month+"-"+yr;
        jLabel2.setText(setDate);
        jLabel7.setText(setDate);
      // jTextField1.setEditable(false);
      // jComboBox2.setEnabled(false);
        loadInitialInfo();
       // uploadDCNo();
       
        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();

        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);


        String heading[]={"Sr.No.","Department","Challan No.","Paid Amount","Unpaid Amount","DC No."};
        dtm=new javax.swing.table.DefaultTableModel(heading,0);
        jTable1.setModel(dtm);

        javax.swing.table.TableColumn column;


        column=jTable1.getColumn("Sr.No.");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(50);
        column=jTable1.getColumn("Department");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(80);
        column=jTable1.getColumn("Challan No.");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(80);
        column=jTable1.getColumn("Paid Amount");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(200);
        column=jTable1.getColumn("Unpaid Amount");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(200);
        column=jTable1.getColumn("DC No.");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(80);


      /*  jTable2.setAutoResizeMode(jTable2.AUTO_RESIZE_OFF);

        String heading1[]={"Sr.No.","PMR No.","CO7","CO6","Amount"};
        dtm1=new javax.swing.table.DefaultTableModel(heading1,0);
        jTable2.setModel(dtm1);
        javax.swing.table.TableColumn column1;

        column1=jTable2.getColumn("Sr.No.");
        column1.setCellRenderer(CRCenter);
        column1.setPreferredWidth(50);
        column1=jTable2.getColumn("PMR No.");
        column1.setCellRenderer(CRLeft);
        column1.setPreferredWidth(50);
        column1=jTable2.getColumn("CO7");
        column1.setCellRenderer(CRLeft);
        column1.setPreferredWidth(50);
        column1=jTable2.getColumn("CO6");
        column1.setCellRenderer(CRLeft);
        column1.setPreferredWidth(50);
        column1=jTable2.getColumn("Amount");
        column1.setCellRenderer(CRRight);
        column1.setPreferredWidth(70);*/
        

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setBackground(new java.awt.Color(113, 142, 119));
        setClosable(true);
        setIconifiable(true);
        setTitle("Closing Window");
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 190, 660, 310);

        jButton4.setText("Save Closing");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton4FocusLost(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(30, 520, 320, 30);

        jButton5.setText("Close");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton5FocusLost(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(370, 520, 320, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("PAID BILLS :-");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 170, 260, 20);

        jPanel1.setBackground(new java.awt.Color(168, 196, 207));
        jPanel1.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(194, 192, 94));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Date");
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 20, 70, 25);

        jLabel2.setBackground(new java.awt.Color(183, 180, 218));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("0");
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(80, 20, 170, 25);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/calendar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(250, 20, 30, 25);

        jLabel5.setBackground(new java.awt.Color(166, 214, 198));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Cashier Number");
        jLabel5.setOpaque(true);
        jPanel1.add(jLabel5);
        jLabel5.setBounds(290, 20, 140, 25);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox1FocusLost(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(430, 20, 220, 25);

        jLabel6.setBackground(new java.awt.Color(166, 214, 198));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Select Department");
        jLabel6.setOpaque(true);
        jPanel1.add(jLabel6);
        jLabel6.setBounds(290, 70, 140, 25);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jComboBox2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox2FocusLost(evt);
            }
        });
        jComboBox2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox2KeyPressed(evt);
            }
        });
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(430, 70, 220, 25);

        jLabel4.setText("Uploading Bill Date :-");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 50, 240, 20);

        jLabel7.setBackground(new java.awt.Color(183, 180, 218));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("0");
        jLabel7.setOpaque(true);
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 70, 240, 25);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/calendar.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(250, 70, 30, 25);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(30, 10, 660, 110);

        jButton7.setMnemonic('S');
        jButton7.setText("Show");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton7FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton7FocusLost(evt);
            }
        });
        jButton7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton7KeyPressed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(30, 130, 660, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
           Cal date1=new Cal();
           jLabel2.setText(date1.getdate());
           jButton2.requestFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
     
      
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       // int variable=javax.swing.JOptionPane.showConfirmDialog(null, "Are you sure?","Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        //System.out.println(variable);

      	
            if(dtm.getRowCount()>0)
            {
               // javax.swing.JOptionPane.showMessageDialog(null,"Coming here.");
                int res=javax.swing.JOptionPane.showConfirmDialog(null,"Are you sure about this updation?","Confirmation",javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
                if(res==javax.swing.JOptionPane.YES_OPTION)
                {
                   // updateClosing();
                    UpdateClosing();
                }
                
            }
           /* else if(dtm.getRowCount()==0)
            {
                   javax.swing.JOptionPane.showMessageDialog(null,"Please select the cashier from the list");
                   jComboBox1.requestFocus();
            }
            else if(dtm1.getRowCount()==0)
            {
                javax.swing.JOptionPane.showMessageDialog(null,"Please select the unpaid bills.");
                jTable1.requestFocus();
            }*/
           





    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        dtm.setRowCount(0);
        if(!jComboBox1.getSelectedItem().equals("Select"))
        {
          uploadDCNo();

          // loadUnpaidBills();
         //   javax.swing.JOptionPane.showMessageDialog(null,"Coming here.");
         //  loadUnclosedChallan();
         /////  settingOfDCNo();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Cal date1=new Cal();
        jLabel7.setText(date1.getdate());
        jComboBox1.requestFocus();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
     //   uploadDCNo();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jButton2.requestFocus();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jComboBox1.requestFocus();
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jComboBox2.requestFocus();
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void jComboBox2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jButton7.requestFocus();
        }
    }//GEN-LAST:event_jComboBox2KeyPressed

    private void jButton7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton7KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {

        dtm.setRowCount(0);
        if(!jComboBox1.getSelectedItem().equals("Select"))
        {
            
          // loadUnpaidBills();
         //   javax.swing.JOptionPane.showMessageDialog(null,"Coming here.");
        //   loadUnclosedChallan();
        //   settingOfDCNo();
        }
        }
    }//GEN-LAST:event_jButton7KeyPressed

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        // TODO add your handling code here:
        jComboBox1.setBackground(java.awt.Color.yellow);
    }//GEN-LAST:event_jComboBox1FocusGained

    private void jComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusLost
        // TODO add your handling code here:
         jComboBox1.setBackground(java.awt.Color.white);
    }//GEN-LAST:event_jComboBox1FocusLost

    private void jComboBox2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusGained
        // TODO add your handling code here:
         jComboBox2.setBackground(java.awt.Color.yellow);
    }//GEN-LAST:event_jComboBox2FocusGained

    private void jComboBox2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox2FocusLost
        // TODO add your handling code here:
        jComboBox2.setBackground(java.awt.Color.white);
    }//GEN-LAST:event_jComboBox2FocusLost

    private void jButton7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton7FocusGained
        // TODO add your handling code here:
        jButton7.setBackground(java.awt.Color.yellow);
    }//GEN-LAST:event_jButton7FocusGained

    private void jButton7FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton7FocusLost
        // TODO add your handling code here:
         jButton7.setBackground(java.awt.Color.white);
    }//GEN-LAST:event_jButton7FocusLost

    private void jButton4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton4FocusGained
        // TODO add your handling code here:
         jButton4.setBackground(java.awt.Color.yellow);
    }//GEN-LAST:event_jButton4FocusGained

    private void jButton4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton4FocusLost
        // TODO add your handling code here:
        jButton4.setBackground(java.awt.Color.yellow);
    }//GEN-LAST:event_jButton4FocusLost

    private void jButton5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton5FocusGained
        // TODO add your handling code here:
        jButton5.setBackground(java.awt.Color.yellow);
    }//GEN-LAST:event_jButton5FocusGained

    private void jButton5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton5FocusLost
        // TODO add your handling code here:
        jButton5.setBackground(java.awt.Color.white);
    }//GEN-LAST:event_jButton5FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
javax.swing.table.DefaultTableModel dtm;
javax.swing.table.DefaultTableModel dtm1;
  String arr[][]=null;
private void loadInitialInfo()
{
    try
    {
       // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
       interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select cashier_number from cashier_detail order by cashier_number";
        String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(load!=null)
        {
            jComboBox1.addItem("Select");
            for(int i=0;i<load.length;i++)
            {
                jComboBox1.addItem(load[i]);
            }
        }
        qry="Select dp_name from department_detail order by dp_code";
        load=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(load!=null)
        {
            jComboBox2.removeAllItems();
            for(int i=0;i<load.length;i++)
            {
                jComboBox2.addItem(load[i]);
            }
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadInitialInfo Method."+e);
    }

}
/*private void loadUnpaidBills()
{
    dtm.setRowCount(0);
    try
    {
        interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        String qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jComboBox1.getSelectedItem())+"";
        String getCode=object1.getSigetngleValue(qry,Main.year);
        
        qry="Select dp_code from department_detail where dp_name='"+(jComboBox2.getSelectedItem())+"'";
        String getDpCode=object1.getSigetngleValue(qry,Main.year);

        qry="Select closing_date from build_distribution where cashier_code="+Integer.parseInt(getCode)+" order by closing_date desc";
        System.out.println("qry......."+qry);
        String getDate=object1.getSigetngleValue(qry,Main.year);
        System.out.println("getDate.........."+getDate);
        if(getDate.length()>0 || getDate.equals("")==false)
        {
        String d1[]=getDate.split("-");
        String LowerLimit=d1[0]+"-"+d1[1]+"-"+d1[2];
        System.out.println("LowerLimit....."+LowerLimit);
        
        
        String d12[]=jLabel2.getText().split("-");
        int date=Integer.parseInt(d12[0]);
        int mon=Integer.parseInt(d12[1]);
        int yer=Integer.parseInt(d12[2]);
        String setDate1=yer+"/"+mon+"/"+date;
        System.out.println("setDate1..........."+setDate1);
        java.util.Date dt1=new java.util.Date();
        long getParse=dt1.parse(setDate1);
        System.out.println("getParse..........."+getParse);
        for(int i=0;i<30;i++)
        {
           // getParse=getParse-(86400000*30);
              getParse=getParse-86400000;
           // System.out.println("getParse..........."+getParse);
        }
        System.out.println("getParse...finaly........"+getParse);
        java.util.Date dt11=new java.util.Date(getParse);
        java.util.Date dt3=dt11;
      //  System.out.println("dt3......."+dt3);
        String setDt=""+dt3;
        String D1[]=setDt.split(":");
     //   System.out.println(D1[0]);
        String getyr[]=D1[2].split(" ");
     //   System.out.println("getyr......"+getyr.length+"  "+getyr[2]);
        String D2[]=D1[0].split(" ");
        int date1=Integer.parseInt(D2[2]);
     //   System.out.println("date1......"+date1);
     //   System.out.println("mon........"+D2[1]);
      //  System.out.println("year......."+getyr[2]);
        int month1=getMonth(D2[1])+1;
        int yr=Integer.parseInt(getyr[2]);
     //   System.out.println("Month.Next......."+month1);
    //    System.out.println("year......."+yr);
        String D3[]=D1[2].split(" ");
        // String currentDate=month1+"/"+D2[2]+"/"+D3[2];
         //String currentDate=month1+"/"+date1+"/"+yr;
        String UpperLimit=yr+"-"+month1+"-"+date1;
        //System.out.println("UpperLimit............"+UpperLimit);
        
        String setDeadDate=2000+"-"+1+"-"+1;
        //qry="Select distinct(CO7) from build_distribution where cashier_code="+Integer.parseInt(getCode)+" and closing_status="+0+" and (edate>='"+UpperLimit+"' and edate<='"+LowerLimit+"')";
        qry="Select distinct(CO7) from build_distribution where cashier_code="+Integer.parseInt(getCode)+" and closing_status="+0+" and dp_code="+Integer.parseInt(getDpCode)+" and paymentdate<>'"+setDeadDate+"'";
        String getCO7[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(getCO7!=null)
        {
          int ind=0;
          for(int i=0;i<getCO7.length;i++)
          {
             qry="Select pmrno,CO6,amount from build_distribution where cashier_code="+Integer.parseInt(getCode)+" and CO7="+Integer.parseInt(getCO7[i])+" and dp_code="+Integer.parseInt(getDpCode)+"";
             String getData[][]=object1.getInformationDD(qry, 3,Main.year);
             if(getData!=null)
             {
                 String arr[]=new String[5];
                 
                 for(int j=0;j<getData.length;j++)
                 {
                     arr[0]=""+(++ind);
                     arr[1]=getData[j][0];
                     arr[2]=getCO7[i];
                     arr[3]=getData[j][1];
                     arr[4]=getData[j][2];
                     dtm.addRow(arr);
                 }
             }
          }
        }
        }
        else if(getDate.length()==0)
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Sorry ! No record found");
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadUnpaidBills"+e);
    }

}*/
private void ForwardProcess()
{
    int ind=jTable1.getSelectedRow();
    int rowcount=dtm.getRowCount();
    String arr[]=new String[5];
    int index=0;
    if(dtm1.getRowCount()==0)
    {
       
        arr[0]=""+(++index);
        arr[1]=""+jTable1.getValueAt(ind,1);
        arr[2]=""+jTable1.getValueAt(ind,2);
        arr[3]=""+jTable1.getValueAt(ind,3);
        arr[4]=""+jTable1.getValueAt(ind,4);
        dtm1.addRow(arr);
    }
    else
    {

        index=rowcount;
      
            arr[0]=""+(++index);
            arr[1]=""+jTable1.getValueAt(ind,1);
            arr[2]=""+jTable1.getValueAt(ind,2);
            arr[3]=""+jTable1.getValueAt(ind,3);
            arr[4]=""+jTable1.getValueAt(ind,4);
            dtm1.addRow(arr);
       
    }
    jTable1.removeRowSelectionInterval(ind, ind);
    dtm.removeRow(ind);
    ind=dtm.getRowCount();

    int x=0;
    for(int i=0;i<dtm.getRowCount();i++)
    {
        jTable1.setValueAt(""+(++x),i,0);
    }
    x=0;
    for(int i=0;i<dtm1.getRowCount();i++)
    {
       // jTable2.setValueAt(""+(++x),i,0);
    }
}



/*private void BackwardProcess()
{
    int ind=jTable2.getSelectedRow();
    int rowcount=dtm.getRowCount();
    String arr[]=new String[5];
    int index=0;
    if(dtm.getRowCount()==0)
    {
        arr[0]=""+(++index);
        arr[1]=""+jTable2.getValueAt(ind,1);
        arr[2]=""+jTable2.getValueAt(ind,2);
        arr[3]=""+jTable2.getValueAt(ind,3);
        arr[4]=""+jTable2.getValueAt(ind,4);
        dtm.addRow(arr);
    }
    else
    {
        index=(rowcount);
       
        arr[0]=""+(++index);
        arr[1]=""+jTable2.getValueAt(ind,1);
        arr[2]=""+jTable2.getValueAt(ind,2);
        arr[3]=""+jTable2.getValueAt(ind,3);
        arr[4]=""+jTable2.getValueAt(ind,4);
        dtm.addRow(arr);
      
    }
    jTable2.removeRowSelectionInterval(ind, ind);
    dtm1.removeRow(ind);
    ind=dtm1.getRowCount();
    int x=0;
    for(int i=0;i<dtm1.getRowCount();i++)
    {
        jTable2.setValueAt(""+(++x),i,0);
    }
    x=0;
    for(int i=0;i<dtm.getRowCount();i++)
    {
        jTable1.setValueAt(""+(++x),i,0);
    }

}*/
/*private void updateClosing()
{
    try
    {
        //javax.swing.JOptionPane.showMessageDialog(this,"Coming here.");
      
        interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        String qry="Select cashier_code from cashier_detail where cashier_number='"+(""+jComboBox1.getSelectedItem())+"'";
        String getCode=object1.getSigetngleValue(qry,Main.year);
        qry="Select dp_code from department_detail where dp_name='"+(""+jComboBox2.getSelectedItem())+"'";
        String dpCode=object1.getSigetngleValue(qry,Main.year);
      //  System.out.println("getCode........."+getCode);
        String d1[]=jLabel2.getText().split("-");
       // String setDate=d1[0]+"-"+d1[1]+"-"+d1[2];
         String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
       //System.out.println("setDate....."+setDate);
        if(getCode.length()>0 || getCode.equals("")==false)
        {

            for(int i=0;i<dtm1.getRowCount();i++)
            {
                String getpmr=""+jTable2.getValueAt(i, 1);
                qry="update build_distribution set closing_date='"+setDate+"' ,closing_status="+1+" where pmrno="+Integer.parseInt(getpmr)+" and  dp_code="+Integer.parseInt(dpCode)+" and cashier_code="+Integer.parseInt(getCode);
                object1.saveInformation(qry, Main.year);
            }
            qry="Select cashier_code from closing_status where closing_date='"+setDate+"'";
            String cashierCode=object1.getSigetngleValue(qry,Main.year);
            if(cashierCode.length()==0)
            {
                qry="insert into closing_status values('"+setDate+"',"+Integer.parseInt(getCode)+")";
                boolean bn=object1.saveInformation(qry, Main.year);
                if(bn)
                {
                    javax.swing.JOptionPane.showMessageDialog(null,"Process Completed.");
                    dtm.setRowCount(0);
                    dtm1.setRowCount(0);
                    jComboBox1.setSelectedIndex(0);
                    jButton1.requestFocus();
          
                }
            }
            else if(cashierCode.length()>0 || cashierCode.equals("")==false)
            {
                qry="update closing_status set closing_date='"+setDate+"' where cashier_code="+Integer.parseInt(cashierCode)+"";
                boolean bn=object1.saveInformation(qry, Main.year);
                if(bn)
                {
                    javax.swing.JOptionPane.showMessageDialog(null,"Process Completed.");
                    dtm.setRowCount(0);
                    dtm1.setRowCount(0);
                    jComboBox1.setSelectedIndex(0);
                    jButton1.requestFocus();

                }
            }
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In updateClosing Method"+e);
    }
}*/
    private int getMonth(String getM)
  {
      int month=0;
        if(getM.equals("Jan"))
            month=Calendar.JANUARY;
        if(getM.equals("Feb"))
            month=Calendar.FEBRUARY;
        if(getM.equals("Mar"))
            month=Calendar.MARCH;
        if(getM.equals("Apr"))
            month=Calendar.APRIL;
        if(getM.equals("May"))
            month=Calendar.MAY;
        if(getM.equals("Jun"))
            month=Calendar.JUNE;
        if(getM.equals("Jul"))
            month=Calendar.JULY;
        if(getM.equals("Aug"))
            month=Calendar.AUGUST;
        if(getM.equals("Sep"))
            month=Calendar.SEPTEMBER;
        if(getM.equals("Oct"))
            month=Calendar.OCTOBER;
        if(getM.equals("Nov"))
            month=Calendar.NOVEMBER;
        if(getM.equals("Dec"))
            month=Calendar.DECEMBER;

        System.out.println("month......"+month);
        return month;
  }
/*private void uploadDCNo()
{
    try
    {
       // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
       // String qry="Select DC_No from "
interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}

        String qry="Select dp_Code from department_detail where dp_name='"+(""+jComboBox2.getSelectedItem())+"'";
        String getDpCode=object1.getSigetngleValue(qry,Main.year);
        if(getDpCode!=null)
        {
            qry="Select max(DC_No) from challan_detail where dp_Code="+Integer.parseInt(getDpCode)+"";
            String getDC_No=object1.getSigetngleValue(qry,Main.year);
            System.out.println("getDC_No........"+getDC_No);
            int DCNo=0;
            if(getDC_No.equals("-1")==false && getDC_No!=null)
            {
                DCNo=Integer.parseInt(getDC_No)+1;
                jTextField1.setText(""+DCNo);
            }
            if(getDC_No.equals("-1"))
            {
                qry="Select cashier_code from carryforward_challan_detail";
                String getCode=object1.getSigetngleValue(qry,Main.year);
                if(getCode==null && getCode.equals("")==true)
                {
                    qry="Select DC_No from opening_dc_number where dp_Code="+Integer.parseInt(getDpCode)+"";
                    String getDC=object1.getSigetngleValue(qry,Main.year);
                    System.out.println("getDC........"+getDC);
                    if(getDC!=null && getDC.equals("")==false)
                    {
                        DCNo=Integer.parseInt(getDC);
                        jTextField1.setText(""+DCNo);
                    }
                }
                else
                {
                        qry="Select max(DC_No) from carryforward_challan_detail where dp_Code="+Integer.parseInt(getDpCode)+"";
                        getDC_No=object1.getSigetngleValue(qry,Main.year);
                        System.out.println("getDC_No........"+getDC_No);
                        DCNo=0;
                        if(getDC_No.equals("-1")==false && getDC_No!=null)
                        {
                            DCNo=Integer.parseInt(getDC_No)+1;
                            jTextField1.setText(""+DCNo);
                        }
                        if(getDC_No.equals("-1")==true)
                        {
                            jTextField1.setText(""+1);
                        }
                }



            }
        }

    }
    catch(Exception e)
    {
        System.out.println("Error ! In uploadDCNo."+e);
    }

}*/
private void uploadDCNo()
{
    try
    {
       // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
       // String qry="Select DC_No from "
        String qry="";
                interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}

     /*   String qry="Select dp_Code from department_detail where dp_name='"+(""+jComboBox2.getSelectedItem())+"'";
        String getDpCode=object1.getSigetngleValue(qry,Main.year);
        if(getDpCode!=null)
        {*/
            String D1[]=jLabel7.getText().split("-");
            String setDate=D1[2]+"-"+D1[1]+"-"+D1[0];
            int flag1=0,flag2=0,flag3=0;
          
            qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jComboBox1.getSelectedItem())+"";
            String getCashierCode=object1.getSigetngleValue(qry,Main.year);
            qry="Select distinct(dp_Code) from build_distribution where edate<='"+setDate+"' and cashier_Code="+Integer.parseInt(getCashierCode)+" order by dp_Code";
            String loadDP[]=object1.getResultSetAs_1D_Array(qry,Main.year);
            if(loadDP!=null)
            {
                arr=new String[loadDP.length][2];
                String getDC_No="";
                for(int i=0;i<loadDP.length;i++)
                {
                  System.out.println("loadDp......."+loadDP[i]);

                  if(loadDP[i].equals("1"))
                  {
                      qry="Select max(DC_No) from challan_detail";
                      getDC_No=object1.getSigetngleValue(qry,Main.year);

                  }
                  else if(loadDP[i].equals("2"))
                  {
                      qry="Select max(dc_no_pd) from challan_detail";
                      getDC_No=object1.getSigetngleValue(qry,Main.year);
                  }
                  else if(loadDP[i].equals("3"))
                  {
                      qry="Select max(dc_no_hz) from challan_detail";
                      getDC_No=object1.getSigetngleValue(qry,Main.year);
                  }
                  System.out.println("getDC_No........"+getDC_No);
                  int DCNo=0;
                  if(getDC_No!=null)
                  if((getDC_No.equals("-1")==false || getDC_No!=null))//&&getDC_No.equalsIgnoreCase("null")==false)
                  {
                      System.out.println("1..");
                      arr[i][0]=loadDP[i];
                      arr[i][1]=""+(Integer.parseInt(getDC_No)+1);

                      //DCNo=Integer.parseInt(getDC_No)+1;
                     // jTextField1.setText(""+DCNo);
                  }
                  if(getDC_No.equals("-1")==true || getDC_No==null)
                  {
                      qry="Select cashier_code from carryforward_challan_detail";
                      String getCode=object1.getSigetngleValue(qry,Main.year);
                      System.out.println("getCOde"+getCode);
                      String getDC="";
                      if(getCode==null || getCode.equals("")==true)
                      {

                          if(loadDP[i].equals("1"))
                          {
                                  qry="Select DC_No from opening_dc_number where dp_Code=1";
                                  getDC=object1.getSigetngleValue(qry,Main.year);
                                  System.out.println("getDC........"+getDC);
                          }
                          else if(loadDP[i].equals("2"))
                          {
                                  qry="Select DC_No from opening_dc_number where dp_Code=2";
                                  getDC=object1.getSigetngleValue(qry,Main.year);
                                  System.out.println("getDC........"+getDC);
                          }
                          else if(loadDP[i].equals("3"))
                          {
                                  qry="Select DC_No from opening_dc_number where dp_Code=3";
                                  getDC=object1.getSigetngleValue(qry,Main.year);
                                  System.out.println("getDC........"+getDC);
                          }
                          
                          if(getDC!=null || getDC.equals("")==false)
                          {

                                arr[i][0]=loadDP[i];
                                arr[i][1]=getDC;

                               //  DCNo=Integer.parseInt(getDC);
                                // jTextField1.setText(""+DCNo);
                          }
                      }
                      else
                      {
                          if(loadDP[i].equals("1"))
                          {
                            qry="Select max(DC_No) from carryforward_challan_detail";
                            getDC_No=object1.getSigetngleValue(qry,Main.year);
                          }
                          else if(loadDP[i].equals("2"))
                          {
                            qry="Select max(dc_no_pd) from carryforward_challan_detail";
                            getDC_No=object1.getSigetngleValue(qry,Main.year);
                          }
                          else if(loadDP[i].equals("3"))
                          {
                            qry="Select max(dc_no_hz) from carryforward_challan_detail";
                            getDC_No=object1.getSigetngleValue(qry,Main.year);
                          }
                                  DCNo=0;
                                  if(getDC_No.equals("-1")==false || getDC_No!=null)
                                  {
                                      arr[i][0]=loadDP[i];
                                      arr[i][1]=""+(Integer.parseInt(getDC_No)+1);
                                   //     DCNo=Integer.parseInt(getDC_No)+1;
                                   //     jTextField1.setText(""+DCNo);
                                  }
                                  if(getDC_No.equals("-1")==true)
                                  {
                                      arr[i][0]=loadDP[i];
                                      arr[i][1]=getDC_No;
                                     //   jTextField1.setText(""+1);
                                  }
                         }

                   }
                }
            }
            for(int i=0;i<loadDP.length;i++)
            {
                System.out.println("i...."+loadDP[i]);
              
            }
            for(int i=0;i<arr.length;i++)
            {
                System.out.println("arr[i][0]...."+arr[i][0]);
                System.out.println(".arr[i][1]..."+arr[i][1]);
            }
          //  loadChallan();
            challanLoading();
           
       // }

    }
    catch(Exception e)
    {
        System.out.println("Error ! In uploadDCNo."+e);
    }

}
/*private void loadUnclosedChallan()
{
     int ind=0,dcNo=0,row=0;
    try
    {
        String deadDate=2000+"-"+1+"-"+1;
        dtm.setRowCount(0);
      //  interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
       interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select dp_Code from department_detail where dp_name='"+(""+jComboBox2.getSelectedItem())+"'";
        String getDpCode=object1.getSigetngleValue(qry,Main.year);
        qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jComboBox1.getSelectedItem())+"";
        String getCashierCode=object1.getSigetngleValue(qry,Main.year);
        if(getDpCode!=null && getCashierCode!=null)
        {
            String D1[]=jLabel7.getText().split("-");
            String setDate=D1[2]+"-"+D1[1]+"-"+D1[0];
            qry="Select distinct(dp_Code),edate from carryforward_build_distribution where edate<='"+setDate+"' and cashier_Code="+Integer.parseInt(getCashierCode)+" order by edate";
            String lastYearRec[][]=object1.getInformationDD(qry, 2,Main.year);
            System.out.println("lastYearRec........."+lastYearRec);
            if(lastYearRec!=null)
            {
                lastYearRecord(getCashierCode,lastYearRec);
            }
            qry="Select distinct(dp_Code),edate from build_distribution where edate<='"+setDate+"' and cashier_Code="+Integer.parseInt(getCashierCode)+" order by edate";
            String load[][]=object1.getInformationDD(qry,2,Main.year);
            if(load!=null)
            {
                String arr[]=new String[5];
               
                double paidAmt=0.0,unPaidAmt=0.0;
               
                for(int i=0;i<load.length;i++)
                {
                    paidAmt=0.0;
                    unPaidAmt=0.0;
                   
                    String D2[]=load[i][1].split("-");
                    setDate=D2[2]+"-"+D2[1]+"-"+D2[0];
                    //qry="Select challan_no from challan_detail where dp_Code="+Integer.parseInt(load[i][0])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate='"+load[i][1]+"' and closing_status="+"0"+")order by challan_no asc";
                    qry="Select challan_no from challan_detail where cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate='"+load[i][1]+"' and closing_status="+"0"+")order by challan_no asc";
                    System.out.println("qry............."+qry);
                    //qry="Select challan_no from challan_detail where cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate='"+load[i][1]+"' and closing_status="+"0"+")order by challan_no asc";
                    String getChallanNo=object1.getSigetngleValue(qry,Main.year);
                    System.out.println("getChallanNo.........."+getChallanNo+"..len......"+getChallanNo.length());
                    if(getChallanNo.length()>0)
                    {
                        row++;
                        System.out.println("row.........."+row);
                        qry="Select sum(amount) from build_distribution where dp_Code="+Integer.parseInt(load[i][0])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate='"+load[i][1]+"' and paymentdate<>'"+deadDate+"')";
                        String getPaidAmount[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                        if(getPaidAmount[0]!=null)
                        {
                            paidAmt=Double.valueOf(getPaidAmount[0]);
                        }
                        else
                        {
                                paidAmt=0.0;
                        }
                        qry="Select sum(amount) from build_distribution where dp_Code="+Integer.parseInt(load[i][0])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate='"+load[i][1]+"' and paymentdate='"+deadDate+"')";
                        String getUnPaidAmount[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                        if(getUnPaidAmount[0]!=null)
                        {
                            unPaidAmt=Double.valueOf(getUnPaidAmount[0]);
                        }
                        else
                        {
                            unPaidAmt=0.0;
                        }
                        if(dtm.getRowCount()!=0)
                        {
                            row=row+dtm.getRowCount();
                            ind=ind+dtm.getRowCount();
                        }
                        else
                        {
                            ind++;
                        }
                        if(row==1)
                        {
                          //  dcNo=Integer.parseInt(jTextField1.getText());
                        }
                        else
                        {
                        //    dcNo=Integer.parseInt(jTextField1.getText())+1;
                        }

                        arr[0]=""+(ind);
                        arr[1]=getChallanNo;
                        arr[2]=(""+new java.math.BigDecimal(paidAmt).setScale(2,5));
                        arr[3]=(""+new java.math.BigDecimal(unPaidAmt).setScale(2,5));
                        arr[4]=""+dcNo;
                        dtm.addRow(arr);
                        

                    }

                }
            }
        }


    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadUnclosedChallan Method."+e);
    }

}*/
/*private void loadChallan()
{
     String qry="";
     int ind=0,dcNo=0,row=0;
     String deadDate=2000+"-"+1+"-"+1;
     int flag=0;
     dtm.setRowCount(0);
    try
    {
                interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}

        qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jComboBox1.getSelectedItem())+"";
        String getCashierCode=object1.getSigetngleValue(qry,Main.year);
        String D1[]=jLabel7.getText().split("-");
        String setDate=D1[2]+"-"+D1[1]+"-"+D1[0];

        qry="Select edate,challan_no from challan_detail where cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate<='"+setDate+"' and closing_status="+"0"+")order by challan_no asc";
        System.out.println("qry............."+qry);
        String getChallanNo[][]=object1.getInformationDD(qry,2,Main.year);
        System.out.println("getChallanNo.........."+getChallanNo+"..len......"+getChallanNo.length);
        if(getChallanNo.length>0)
        {
            for(int x=0;x<getChallanNo.length;x++)
            {
              //    dcNo=0;
                qry="Select distinct(dp_Code),edate from build_distribution where edate='"+getChallanNo[x][0]+"' and cashier_Code="+Integer.parseInt(getCashierCode)+" order by dp_Code";
                String load[][]=object1.getInformationDD(qry,2,Main.year);
                System.out.println("load...length......"+load.length);
                if(load!=null)
                {
                     String arr1[]=new String[5];

                    double paidAmt=0.0,unPaidAmt=0.0;
                  
                    for(int i=0;i<load.length;i++)
                    {
                  //        dcNo=0;
                    System.out.println("load..."+load[i][0]);
                    System.out.println("load..."+load[i][1]);
                     paidAmt=0.0;
                    unPaidAmt=0.0;

                    String D2[]=load[i][1].split("-");
                    setDate=D2[2]+"-"+D2[1]+"-"+D2[0];



                    /*qry="Select challan_no from challan_detail where cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate='"+load[i][1]+"' and closing_status="+"0"+")order by challan_no asc";
                    System.out.println("qry............."+qry);
                    String getChallanNo=object1.getSigetngleValue(qry,Main.year);
                    System.out.println("getChallanNo.........."+getChallanNo+"..len......"+getChallanNo.length());
                    if(getChallanNo.length()>0)
                    {
                //        row++;
                        flag=1;
                    }//////////////
                    //if(flag==1)
                    {
                        System.out.println("flag......"+flag);
                        qry="Select sum(amount) from build_distribution where dp_Code="+Integer.parseInt(load[i][0])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate='"+load[i][1]+"' and paymentdate<>'"+deadDate+"')";
                        String getPaidAmount[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                        System.out.println("getPaidAmount.........."+getPaidAmount[0]+"    "+getPaidAmount.length);
                        if(getPaidAmount[0]!=null)
                        {
                            paidAmt=Double.valueOf(getPaidAmount[0]);
                        }
                        else
                        {
                                paidAmt=0.0;
                        }
                        qry="Select sum(amount) from build_distribution where dp_Code="+Integer.parseInt(load[i][0])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate='"+load[i][1]+"' and paymentdate='"+deadDate+"')";
                        String getUnPaidAmount[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                        System.out.println("getUnPaidAmount.........."+getUnPaidAmount[0]+"    "+getUnPaidAmount.length);
                        if(getUnPaidAmount[0]!=null)
                        {
                            unPaidAmt=Double.valueOf(getUnPaidAmount[0]);
                        }
                        else
                        {
                            unPaidAmt=0.0;
                        }
                         System.out.println("unPaidAmt......."+unPaidAmt);

                         row++;
                         System.out.println("arr.."+arr[i][0]);
                         System.out.println("arr.."+arr[i][1]);
                         if(row==1)
                         {
                           for(int j=0;j<arr.length;j++)
                           {
                                if(arr[j][0].equals(load[i][0]))
                                {

                                        dcNo=Integer.parseInt(arr[j][1]);
                                        System.out.println("dcNO.if.."+dcNo);
                                }
                           }

                         }
                         else
                         {
                             System.out.println("dcNo........"+dcNo);
                           for(int j=0;j<arr.length;j++)
                           {
                               if(arr[j][0].equals(load[i][0]))
                               {
                                   if(dcNo==0)
                                      dcNo=Integer.parseInt(arr[j][1])+1;
                                   else
                                      dcNo=dcNo+1;
                                   javax.swing.JOptionPane.showMessageDialog(null,"dcNo.."+dcNo);
                                   
                               }
                           }
                         }
                        //   dcNo=Integer.parseInt(arr[i][1])+1;

                       arr1[0]=""+(++ind);
                       arr1[1]=getChallanNo[x][1];
                       arr1[2]=(""+new java.math.BigDecimal(paidAmt).setScale(2,5));
                       arr1[3]=(""+new java.math.BigDecimal(unPaidAmt).setScale(2,5));
                       arr1[4]=""+dcNo;
                       dtm.addRow(arr1);
                    }

                 }

                }
            }

        }

        qry="Select distinct(dp_Code),edate from build_distribution where edate<='"+setDate+"' and cashier_Code="+Integer.parseInt(getCashierCode)+" order by dp_Code";
        String load[][]=object1.getInformationDD(qry,2,Main.year);
        System.out.println("load...length......"+load.length);
       



    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadChallan Method."+e);
    }

}*/
private void challanLoading()
{
    String qry="";
    int ind=0,dcNo=0,row=0;
    String deadDate=2000+"-"+1+"-"+1;
    int flag=0;
    dtm.setRowCount(0);
    try
    {
          interfaceRailway object1=null;
          try
	  {
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
          }
          catch(Exception e)
	  {
			System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
			getIPaddress.changeIP();
			try
			{
				object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
			}
			catch(Exception ex)
			{
				System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
			}
	  }

          lastYearChallanLoading();
        qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jComboBox1.getSelectedItem())+"";
        String getCashierCode=object1.getSigetngleValue(qry,Main.year);
        String D1[]=jLabel7.getText().split("-");
        String setDate=D1[2]+"-"+D1[1]+"-"+D1[0];
        qry="Select edate,challan_no from challan_detail where cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate<='"+setDate+"' and closing_status="+"0"+")order by challan_no asc";
        System.out.println("qry............."+qry);
        String getChallandate[][]=object1.getInformationDD(qry,2,Main.year);
        System.out.println("getChallandate.........."+getChallandate.length);
        String firstDate="",lastDate="";
        String load[]=null;
        double paidAmt=0.0,unPaidAmt=0.0;
        String getDpName="";
        if(getChallandate.length>0)
        {
            String D[]=getChallandate[0][0].split(" ");
            String D2[]=D[0].split("-");
            firstDate=D2[0]+"-"+D2[1]+"-"+D2[2];
            System.out.println("firstDate......."+firstDate);

            String D3[]=(getChallandate[getChallandate.length-1][0].split(" "));
            String D4[]=D3[0].split("-");
            lastDate=D4[0]+"-"+D4[1]+"-"+D4[2];
            System.out.println("lastDate......."+lastDate);
           
            qry="Select distinct(dp_Code) from build_distribution where cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate<='"+lastDate+"'  and edate>='"+firstDate+"')";
            load=object1.getResultSetAs_1D_Array(qry,Main.year);
            if(load!=null)
            {
                
                    System.out.println("load...."+load.length);
                     System.out.println("getChallandate...."+getChallandate.length);
                 /*   qry="Select sum(amount) from build_distribution where dp_Code="+Integer.parseInt(load[i])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate<='"+lastDate+"'  and edate>='"+firstDate+"')";
                    String loadAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                    if(loadAmt!=null)
                    {
                        for(int k=0;k<loadAmt.length;k++)
                        {
                            System.out.println("loadAmt....."+loadAmt[k]);
                        }
                    }*/
               
            }

        }
        else
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Sorry ! No record found.");
        }
        if(load.length>0)
        {
            row=0;
            dcNo=0;
            ind=0;
    String arr1[]=new String[6];

    for(int i=0;i<arr.length;i++)
    {
        System.out.println("i......."+arr[i][0]);
    }

             for(int i=0;i<load.length;i++)
             {
                 dcNo=0;

                 for(int x=0;x<getChallandate.length;x++)
                 {

                     String D[]=getChallandate[x][0].split(" ");
                     String D2[]=D[0].split("-");
                     firstDate=D2[0]+"-"+D2[1]+"-"+D2[2];
                    

                     qry="Select sum(mix_amount) from build_distribution where dp_Code="+Integer.parseInt(load[i])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and edate='"+firstDate+"' and paymentdate<>'"+deadDate+"'";
                     String getPaidAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                     if(getPaidAmt[0]!=null)
                     {
                         paidAmt=Double.valueOf(getPaidAmt[0]);
                     }
                     else
                     {
                                paidAmt=0.0;
                     }
                    
                     qry="Select sum(mix_amount) from build_distribution where dp_Code="+Integer.parseInt(load[i])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and edate='"+firstDate+"' and paymentdate='"+deadDate+"'";
                     String getUnPaidAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                     
                     if(getUnPaidAmt[0]!=null)
                     {
                          unPaidAmt=Double.valueOf(getUnPaidAmt[0]);
                     }
                     else
                     {
                            unPaidAmt=0.0;
                     }
                     
                    // System.out.println("unPaidAmt....."+unPaidAmt);
                       row++;
                        if(dtm.getRowCount()!=0)
                        {
                            row=row+dtm.getRowCount();
                            ind=ind+dtm.getRowCount();
                        }
                        else
                        {
                            ind++;
                        }


                                if(row==1)
                                {
                                  //  javax.swing.JOptionPane.showMessageDialog(null,"row..."+row);
                                    for(int j=0;j<arr.length;j++)
                                    {
                                        if(arr[j][0].equals(load[i])==true)
                                        {
                                            qry="Select dp_name from department_detail where dp_Code="+Integer.parseInt(load[i]);
                                            getDpName=object1.getSigetngleValue(qry,Main.year);
                                         //   System.out.println("arr[j][1]....."+arr[j][1]);
                                                dcNo=Integer.parseInt(arr[j][1]);
                                              //  dcNo=1;
                                   
                                        }
                                    }

                                }
                                else
                                {
                                        for(int j=0;j<arr.length;j++)
                                        {

                                            if(arr[j][0].equals(load[i])==true)
                                            {
                                                qry="Select dp_name from department_detail where dp_Code="+Integer.parseInt(load[i]);
                                               getDpName=object1.getSigetngleValue(qry,Main.year);
                                                if(dcNo==0)
                                                    dcNo=Integer.parseInt(arr[j][1]);
                                                else
                                                    dcNo=dcNo+1;
                                            }
                                        }
                                }
                     ///////////load data here//////
                       arr1[0]=""+(ind);
                       System.out.println("arr1....."+arr1[0]);
                       arr1[1]=getDpName;
                       System.out.println("arr1....."+arr1[1]);
                       arr1[2]=getChallandate[x][1];
                       System.out.println("arr2....."+arr1[2]);
                       arr1[3]=(""+new java.math.BigDecimal(paidAmt).setScale(2,5));
                       System.out.println("arr3....."+arr1[3]);
                       arr1[4]=(""+new java.math.BigDecimal(unPaidAmt).setScale(2,5));
                       System.out.println("arr4....."+arr1[4]);
                       arr1[5]=""+dcNo;
                       System.out.println("arr5....."+arr1[5]);
                       dtm.addRow(arr1);
                 }
             }
        }

    }
    catch(Exception e)
    {
        System.out.println("Eror ! In challanLaoding Method."+e);
    }

}
private void lastYearChallanLoading()
{
    String qry="";
    int ind=0,dcNo=0,row=0;
    String deadDate=2000+"-"+1+"-"+1;
    int flag=0;
    dtm.setRowCount(0);
    try
    {
          interfaceRailway object1=null;
          try
	  {
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
          }
          catch(Exception e)
	  {
			System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
			getIPaddress.changeIP();
			try
			{
				object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
			}
			catch(Exception ex)
			{
				System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
			}
	  }
        qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jComboBox1.getSelectedItem())+"";
        String getCashierCode=object1.getSigetngleValue(qry,Main.year);
        String D1[]=jLabel7.getText().split("-");
        String setDate=D1[2]+"-"+D1[1]+"-"+D1[0];
        qry="Select edate,challan_no from carryforward_challan_detail where cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate<='"+setDate+"' and closing_status="+"0"+")order by challan_no asc";
        System.out.println("qry............."+qry);
        String getChallandate[][]=object1.getInformationDD(qry,2,Main.year);
        System.out.println("getChallandate.........."+getChallandate.length);
        String firstDate="",lastDate="";
        String load[]=null;
        double paidAmt=0.0,unPaidAmt=0.0;
        String getDpName="";
        if(getChallandate.length>0)
        {
            String D[]=getChallandate[0][0].split(" ");
            String D2[]=D[0].split("-");
            firstDate=D2[0]+"-"+D2[1]+"-"+D2[2];
            System.out.println("firstDate......."+firstDate);

            String D3[]=(getChallandate[getChallandate.length-1][0].split(" "));
            String D4[]=D3[0].split("-");
            lastDate=D4[0]+"-"+D4[1]+"-"+D4[2];
            System.out.println("lastDate......."+lastDate);

            qry="Select distinct(dp_Code) from carryforward_build_distribution where cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate<='"+lastDate+"'  and edate>='"+firstDate+"')";
            load=object1.getResultSetAs_1D_Array(qry,Main.year);
            if(load!=null)
            {

                    System.out.println("load...."+load.length);
                     System.out.println("getChallandate...."+getChallandate.length);
                 /*   qry="Select sum(amount) from build_distribution where dp_Code="+Integer.parseInt(load[i])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and (edate<='"+lastDate+"'  and edate>='"+firstDate+"')";
                    String loadAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                    if(loadAmt!=null)
                    {
                        for(int k=0;k<loadAmt.length;k++)
                        {
                            System.out.println("loadAmt....."+loadAmt[k]);
                        }
                    }*/

            }

        }
        if(load.length>0)
        {
            row=0;
            dcNo=0;
            ind=0;
    String arr1[]=new String[6];

    for(int i=0;i<arr.length;i++)
    {
        System.out.println("i......."+arr[i][0]);
    }

             for(int i=0;i<load.length;i++)
             {
                 dcNo=0;

                 for(int x=0;x<getChallandate.length;x++)
                 {

                     String D[]=getChallandate[x][0].split(" ");
                     String D2[]=D[0].split("-");
                     firstDate=D2[0]+"-"+D2[1]+"-"+D2[2];
                     System.out.println("firstDate......."+firstDate);

                     qry="Select sum(mix_amount) from carryforward_build_distribution where dp_Code="+Integer.parseInt(load[i])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and edate='"+firstDate+"' and paymentdate<>'"+deadDate+"'";
                     String getPaidAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                     if(getPaidAmt[0]!=null)
                     {
                         paidAmt=Double.valueOf(getPaidAmt[0]);
                     }
                     else
                     {
                                paidAmt=0.0;
                     }
                     System.out.println("paid amount....."+paidAmt);
                     qry="Select sum(mix_amount) from carryforward_build_distribution where dp_Code="+Integer.parseInt(load[i])+" and cashier_Code="+Integer.parseInt(getCashierCode)+" and edate='"+firstDate+"' and paymentdate='"+deadDate+"'";
                     String getUnPaidAmt[]=object1.getResultSetAs_1D_Array(qry,Main.year);

                     if(getUnPaidAmt[0]!=null)
                     {
                          unPaidAmt=Double.valueOf(getUnPaidAmt[0]);
                     }
                     else
                     {
                            unPaidAmt=0.0;
                     }

                    // System.out.println("unPaidAmt....."+unPaidAmt);
                       row++;
                                if(row==1)
                                {
                                  //  javax.swing.JOptionPane.showMessageDialog(null,"row..."+row);
                                    for(int j=0;j<arr.length;j++)
                                    {
                                        if(arr[j][0].equals(load[i])==true)
                                        {
                                            qry="Select dp_name from department_detail where dp_Code="+Integer.parseInt(load[i]);
                                            getDpName=object1.getSigetngleValue(qry,Main.year);
                                         //   System.out.println("arr[j][1]....."+arr[j][1]);
                                                dcNo=Integer.parseInt(arr[j][1]);
                                              //  dcNo=1;
                                                System.out.println("dcNO.if.."+dcNo);
                                        }
                                    }

                                }
                                else
                                {
                                        System.out.println("dcNo........"+dcNo);
                                        for(int j=0;j<arr.length;j++)
                                        {

                                            if(arr[j][0].equals(load[i])==true)
                                            {
                                                qry="Select dp_name from department_detail where dp_Code="+Integer.parseInt(load[i]);
                                               getDpName=object1.getSigetngleValue(qry,Main.year);
                                                if(dcNo==0)
                                                    dcNo=Integer.parseInt(arr[j][1]);
                                                else
                                                    dcNo=dcNo+1;


                                            }
                                        }
                                }
                     ///////////load data here//////
                       arr1[0]=""+(++ind);
                       System.out.println("arr1....."+arr1[0]);
                       arr1[1]=getDpName;
                       System.out.println("arr1....."+arr1[1]);
                       arr1[2]=getChallandate[x][1];
                       System.out.println("arr2....."+arr1[2]);
                       arr1[3]=(""+new java.math.BigDecimal(paidAmt).setScale(2,5));
                       System.out.println("arr3....."+arr1[3]);
                       arr1[4]=(""+new java.math.BigDecimal(unPaidAmt).setScale(2,5));
                       System.out.println("arr4....."+arr1[4]);
                       arr1[5]=""+dcNo;
                       System.out.println("arr5....."+arr1[5]);
                       dtm.addRow(arr1);
                 }

             }
        }

  }
    catch(Exception e)
    {
        System.out.println("Eror ! In challanLaoding Method."+e);
    }

}



/*private void settingOfDCNo()
{
    if(dtm.getRowCount()>0)
    {
        int dcNo=Integer.parseInt(jTextField1.getText().trim());
        String challanNo=""+jTable1.getValueAt(0,1);
        for(int i=0;i<dtm.getRowCount();i++)
        {
            String data=""+jTable1.getValueAt(i,1);
            if(data.equalsIgnoreCase(challanNo))
            {
                jTable1.setValueAt(""+dcNo,i,4);
                System.out.println("if..."+dcNo);
            }
            else
            {
                challanNo=""+jTable1.getValueAt(i,1);
                jTable1.setValueAt(""+(++dcNo),i,4);
            }
        }
    }
}*/
/*private void lastYearRecord(String cashiercode,String dateRange[][])
{
    String loadArr[][]=dateRange;
    String CashierCode=cashiercode;
    String deadDate=2000+"-"+1+"-"+1;
    int ind=0,dcNo=0,row=0;
    try
    {
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
       interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
            if(loadArr!=null)
            {
                String arr[]=new String[5];

                double paidAmt=0.0,unPaidAmt=0.0;

                for(int i=0;i<loadArr.length;i++)
                {
                    paidAmt=0.0;
                    unPaidAmt=0.0;

                    String D2[]=loadArr[i][1].split("-");
                    String setDate=D2[2]+"-"+D2[1]+"-"+D2[0];
                   // String qry="Select challan_no from carryforward_challan_detail where dp_Code="+Integer.parseInt(loadArr[i][0])+" and cashier_Code="+Integer.parseInt(CashierCode)+" and (edate='"+loadArr[i][1]+"' and closing_status="+"0"+")order by challan_no asc";
                    String qry="Select challan_no from carryforward_challan_detail where cashier_Code="+Integer.parseInt(CashierCode)+" and (edate='"+loadArr[i][1]+"' and closing_status="+"0"+")order by challan_no asc";
                    String getChallanNo=object1.getSigetngleValue(qry,Main.year);

                    if(getChallanNo.length()>0 && getChallanNo.equals("")==false)
                    {
                        row++;
                        System.out.println("row.........."+row);
                        qry="Select sum(amount) from carryforward_build_distribution where dp_Code="+Integer.parseInt(loadArr[i][0])+" and cashier_Code="+Integer.parseInt(CashierCode)+" and (edate='"+loadArr[i][1]+"' and paymentdate<>'"+deadDate+"')";
                        String getPaidAmount[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                        if(getPaidAmount[0]!=null)
                        {
                            paidAmt=Double.valueOf(getPaidAmount[0]);
                        }
                        else
                        {
                                paidAmt=0.0;
                        }
                        qry="Select sum(amount) from carryforward_build_distribution where dp_Code="+Integer.parseInt(loadArr[i][0])+" and cashier_Code="+Integer.parseInt(CashierCode)+" and (edate='"+loadArr[i][1]+"' and paymentdate='"+deadDate+"')";
                        String getUnPaidAmount[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                        if(getUnPaidAmount[0]!=null)
                        {
                            unPaidAmt=Double.valueOf(getUnPaidAmount[0]);
                        }
                        else
                        {
                            unPaidAmt=0.0;
                        }

                        if(row==1)
                        {
                         //   dcNo=Integer.parseInt(jTextField1.getText());
                           // dcNo=
                        }
                        else
                        {
                     //   dcNo=Integer.parseInt(jTextField1.getText())+1;
                        }
                        arr[0]=""+(++ind);
                        arr[1]=getChallanNo;
                        arr[2]=(""+new java.math.BigDecimal(paidAmt).setScale(2,5));
                        arr[3]=(""+new java.math.BigDecimal(unPaidAmt).setScale(2,5));
                        arr[4]=""+dcNo;
                        dtm.addRow(arr);


                    }

                }
            }


    }
    catch(Exception e)
    {
        System.out.println("Error ! In lastYearRecord Method."+e);
    }

}*/
private void UpdateClosing()
 {
    try
    {
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
       interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}        
        String qry="Select cashier_code from cashier_detail where cashier_number="+Integer.parseInt(""+jComboBox1.getSelectedItem())+"";
        String getCode=object1.getSigetngleValue(qry,Main.year);
        qry="Select dp_code from department_detail where dp_name='"+(""+jComboBox2.getSelectedItem())+"'";
        String dpCode=object1.getSigetngleValue(qry,Main.year);
      //  System.out.println("getCode........."+getCode);
        String d1[]=jLabel2.getText().split("-");
       // String setDate=d1[0]+"-"+d1[1]+"-"+d1[2];
         String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
         if(getCode!=null && dpCode!=null)
         {
             boolean bn=false;
             for(int i=0;i<dtm.getRowCount();i++)
             {
               /*  qry="Select  cashier_code from carryforward_challan_detail  where cashier_code="+Integer.parseInt(getCode)+" and challan_no="+Integer.parseInt(""+jTable1.getValueAt(i,1))+"";
                 String getCode1=object1.getSigetngleValue(qry,Main.year);
                 if(getCode1.length()>0 || getCode1.equals("")==false)
                 {
                   // qry="update carryforward_challan_detail set DC_No="+Integer.parseInt(""+jTable1.getValueAt(i,4))+",closing_date='"+setDate+"',closing_status="+"1"+" where dp_Code="+Integer.parseInt(dpCode)+" and cashier_code="+Integer.parseInt(getCode)+" and challan_no="+Integer.parseInt(""+jTable1.getValueAt(i,1))+"";
                      qry="update carryforward_challan_detail set DC_No="+Integer.parseInt(""+jTable1.getValueAt(i,4))+",closing_date='"+setDate+"',closing_status="+"1"+" where cashier_code="+Integer.parseInt(getCode)+" and challan_no="+Integer.parseInt(""+jTable1.getValueAt(i,1))+"";
                      bn=object1.saveInformation(qry,Main.year);
                 }*/
                
                   // qry="update challan_detail set DC_No="+Integer.parseInt(""+jTable1.getValueAt(i,4))+",closing_date='"+setDate+"',closing_status="+"1"+" where dp_Code="+Integer.parseInt(dpCode)+" and cashier_code="+Integer.parseInt(getCode)+" and challan_no="+Integer.parseInt(""+jTable1.getValueAt(i,1))+"";
                 if((""+jTable1.getValueAt(i,1)).equals("DFM"))
                 {
                        qry="update challan_detail set DC_No="+Integer.parseInt(""+jTable1.getValueAt(i,5))+",closing_date='"+setDate+"',closing_status="+"1"+" where cashier_code="+Integer.parseInt(getCode)+" and challan_no="+Integer.parseInt(""+jTable1.getValueAt(i,2))+"";
                        bn=object1.saveInformation(qry,Main.year);
                 }
                else if((""+jTable1.getValueAt(i,1)).equals("PD"))
                {
                        qry="update challan_detail set dc_no_pd="+Integer.parseInt(""+jTable1.getValueAt(i,5))+",closing_date='"+setDate+"',closing_status="+"1"+" where cashier_code="+Integer.parseInt(getCode)+" and challan_no="+Integer.parseInt(""+jTable1.getValueAt(i,2))+"";
                        bn=object1.saveInformation(qry,Main.year);

                }
                else if((""+jTable1.getValueAt(i,1)).equals("Hajipur"))
                {
                        qry="update challan_detail set dc_no_hz="+Integer.parseInt(""+jTable1.getValueAt(i,5))+",closing_date='"+setDate+"',closing_status="+"1"+" where cashier_code="+Integer.parseInt(getCode)+" and challan_no="+Integer.parseInt(""+jTable1.getValueAt(i,2))+"";
                        bn=object1.saveInformation(qry,Main.year);

                }
                
             }
            
             javax.swing.JOptionPane.showMessageDialog(null,"Process Completed.");
             dtm.setRowCount(0);
             java.util.Date dt=new java.util.Date();
             int date=dt.getDate();
             int month=dt.getMonth()+1;
             int yr=dt.getYear()+1900;
             setDate=date+"-"+month+"-"+yr;
             jLabel2.setText(setDate);
             jComboBox1.setSelectedIndex(0);
          ////   jComboBox2.setSelectedIndex(0);
           //  uploadDCNo();
          
         }


    }
    catch(Exception e)
    {
        System.out.println("Error ! In UploadClosing Method."+e);
    }

}
}

