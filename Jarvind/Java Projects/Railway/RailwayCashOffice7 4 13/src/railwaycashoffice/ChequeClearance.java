/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChequeClearance.java
 *
 * Created on Dec 1, 2012, 4:18:19 PM
 */

package railwaycashoffice;

import java.math.BigInteger;

/**
 *
 * @author ZED
 */
public class ChequeClearance extends javax.swing.JInternalFrame {

    /** Creates new form ChequeClearance */
    public ChequeClearance() {
        initComponents();
        java.util.Date dt=new java.util.Date();
        int date=dt.getDate();
        int month=dt.getMonth()+1;
        int yr=dt.getYear()+1900;
        String setDate=date+"-"+month+"-"+yr;
        jLabel9.setText(setDate);

        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();

        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        String head[]={"Cheque No.","Cheque Amount",""};
        dtm1=new javax.swing.table.DefaultTableModel(head,0);
        jTable1.setModel(dtm1);
        jTable1.setRowHeight(25);

        javax.swing.table.TableColumn column;
        column=jTable1.getColumn("Cheque No.");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(85);

        column=jTable1.getColumn("Cheque Amount");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);
        
        column=jTable1.getColumn("");
        column.setMaxWidth(0);
        column.setMinWidth(0);
        column.setPreferredWidth(0);

        jTable2.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        dtm2=new javax.swing.table.DefaultTableModel(head,0);
        jTable2.setModel(dtm2);
        jTable2.setRowHeight(25);

        //javax.swing.table.TableColumn column;
        column=jTable2.getColumn("Cheque No.");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(85);

        column=jTable2.getColumn("Cheque Amount");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);

        column=jTable2.getColumn("");
        column.setMaxWidth(0);
        column.setMinWidth(0);
        column.setPreferredWidth(0);

        addDepartmentNameInList();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(null);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel5.setText("Cheque Receiving Date");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 20, 170, 20);

        jLabel9.setBackground(new java.awt.Color(255, 255, 204));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("jLabel9");
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(200, 20, 170, 25);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/calendar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(370, 20, 30, 25);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel4.setForeground(new java.awt.Color(0, 51, 204));
        jLabel4.setText("Cleared Cheque(s)");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(360, 86, 180, 20);

        jComboBox1.setForeground(new java.awt.Color(0, 0, 255));
        jComboBox1.setToolTipText("Please select department");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox1FocusLost(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(200, 50, 200, 26);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel6.setText("Select Department");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 50, 140, 26);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 110, 270, 320);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(360, 110, 270, 320);

        jButton2.setText(">>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(300, 220, 50, 30);

        jButton3.setText("<<");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(300, 260, 50, 30);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/show.gif"))); // NOI18N
        jButton4.setText("Show Un-Cleared Cheques");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(410, 50, 220, 25);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/update.gif"))); // NOI18N
        jButton5.setMnemonic('u');
        jButton5.setText("Update");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(150, 440, 160, 30);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/Close1.gif"))); // NOI18N
        jButton6.setMnemonic('c');
        jButton6.setText("Close");
        jButton6.setToolTipText("Close");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton6FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton6FocusLost(evt);
            }
        });
        jButton6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton6KeyPressed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(330, 440, 160, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel7.setForeground(new java.awt.Color(0, 51, 204));
        jLabel7.setText("Un-cleared Cheque(s)");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 86, 180, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Cal date1=new Cal();
        jLabel9.setText(date1.getdate());
        jComboBox1.requestFocus();
        showUnclearedCheques();
        showClearedCheques();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            Cal date1=new Cal();
            jLabel9.setText(date1.getdate());
        }
}//GEN-LAST:event_jButton1KeyPressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        //  javax.swing.JOptionPane.showMessageDialog(null,"coming here first.....");

        //setData();
}//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        // TODO add your handling code here:
        //jComboBox1.setForeground(Color.red);
        jComboBox1.setBackground(java.awt.Color.yellow);
}//GEN-LAST:event_jComboBox1FocusGained

    private void jComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusLost
        // TODO add your handling code here:
        jComboBox1.setBackground(java.awt.Color.white);
        //jComboBox1.setForeground(Color.black);
}//GEN-LAST:event_jComboBox1FocusLost

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            jButton4.requestFocus();
        }
}//GEN-LAST:event_jComboBox1KeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        showUnclearedCheques();
        showClearedCheques();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int rowindex[]=jTable1.getSelectedRows();
        if(rowindex!=null)
        {
           for(int r=0;r<rowindex.length;r++)
           {
               String arr[]=new String[3];
               arr[0]=""+jTable1.getValueAt(rowindex[r], 0);
               arr[1]=""+jTable1.getValueAt(rowindex[r], 1);
               arr[2]=""+jTable1.getValueAt(rowindex[r], 2);
               dtm2.addRow(arr);
           }
           for(int r=rowindex.length-1;r>=0;r--)
           {
               dtm1.removeRow(rowindex[r]);
           }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int rowindex[]=jTable2.getSelectedRows();
        if(rowindex!=null)
        {
           for(int r=0;r<rowindex.length;r++)
           {
               String arr[]=new String[3];
               arr[0]=""+jTable2.getValueAt(rowindex[r], 0);
               arr[1]=""+jTable2.getValueAt(rowindex[r], 1);
               arr[2]=""+jTable2.getValueAt(rowindex[r], 2);
               dtm1.addRow(arr);
           }
           for(int r=rowindex.length-1;r>=0;r--)
           {
               dtm2.removeRow(rowindex[r]);
           }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_jButton6ActionPerformed

    private void jButton6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton6FocusGained
        // TODO add your handling code here:
        //jButton2.setForeground(Color.red);
        //jButton2.setBackground(Color.yellow);
}//GEN-LAST:event_jButton6FocusGained

    private void jButton6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton6FocusLost
        // TODO add your handling code here:
        //jButton2.setForeground(Color.black);
        //jButton2.setBackground(Color.white);
}//GEN-LAST:event_jButton6FocusLost

    private void jButton6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton6KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
            this.dispose();
}//GEN-LAST:event_jButton6KeyPressed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            showUnclearedCheques();
            showClearedCheques();
        }
    }//GEN-LAST:event_jButton4KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
private javax.swing.table.DefaultTableModel dtm1,dtm2;

    private void addDepartmentNameInList()
    {
        try
        {
             interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
             String qry="Select dp_name from department_detail order by dp_code";
             String[] load=object1.getResultSetAs_1D_Array(qry,Main.year);
             jComboBox1.removeAllItems();
             jComboBox1.addItem("All");
            if(load!=null && load.length>0)
            {
                for(int i=0;i<load.length;i++)
                {
                    jComboBox1.addItem(load[i]);
                }
            }

        }
        catch(Exception ex)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error no 891..."+ex);
        }
    }


private boolean showUnclearedCheques()
{
        try
        {
             interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
             dtm1.setRowCount(0);
             String qry="Select chq_no,chq_amt,sq_no from dc_chq_details where chq_status=0  order by sq_no";
             if(jComboBox1.getSelectedIndex()!=0)
             {
                 qry="select dp_code from department_detail where dp_name='"+jComboBox1.getSelectedItem()+"'";
                 String dpcode_string=object1.getSigetngleValue(qry, Main.year);
                 int dpcode_int=Integer.parseInt(dpcode_string);
                 qry="Select chq_no,chq_amt,sq_no from dc_chq_details where chq_status=0 and dp_code="+dpcode_int+" order by sq_no";
            }
            
             String[][] load = object1.getInformationDD(qry, 3, Main.year);
             if(load!=null && load.length>0)
             {
                for(int i=0;i<load.length;i++)
                {
                    dtm1.addRow(load[i]);
                }
            }

        }
        catch(Exception ex)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error no 891..."+ex);
        }

    return true;
}

private boolean showClearedCheques()
{
        try
        {
             interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}

             String dt[]=jLabel9.getText().split("-");
             String setDate=dt[2]+"-"+dt[1]+"-"+dt[0];
             dtm2.setRowCount(0);
             String qry="Select chq_no,chq_amt,sq_no from dc_chq_details where chq_status=1 and clearance_date='"+setDate+"' order by sq_no";
             if(jComboBox1.getSelectedIndex()!=0)
             {
                 qry="select dp_code from department_detail where dp_name='"+jComboBox1.getSelectedItem()+"'";
                 String dpcode_string=object1.getSigetngleValue(qry, Main.year);
                 int dpcode_int=Integer.parseInt(dpcode_string);
                 qry="Select chq_no,chq_amt,sq_no from dc_chq_details where chq_status=1 and clearance_date='"+setDate+"' and dp_code="+dpcode_int+" order by sq_no";
                 //qry="Select chq_no,chq_amt,sq_no from dc_chq_details where chq_status=0 and dp_code="+dpcode_int+" order by sq_no";
            }
             String[][] load=object1.getInformationDD(qry,3,Main.year);
             if(load!=null && load.length>0)
             {
                for(int i=0;i<load.length;i++)
                {
                    dtm2.addRow(load[i]);
                }
            }

        }
        catch(Exception ex)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error no 891..."+ex);
        }

    return true;
}

private boolean update()
{
        try
        {
                interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}

             String dt[]=jLabel9.getText().split("-");
             String setDate=dt[2]+"-"+dt[1]+"-"+dt[0];
           if(rollbackData(setDate)==true)
           {
             int sqno;
             String qry="";
             qry="select cash_amt,rec_date from dc_cash_in_hand where rec_date<'"+setDate+"' order by rec_date desc";
             String openingAmt=object1.getSigetngleValue(qry, Main.year);
             if(openingAmt==null || openingAmt.equals(""))
                 openingAmt="0";
             java.math.BigDecimal bd1=new java.math.BigDecimal(openingAmt);
             java.math.BigDecimal bd2=new java.math.BigDecimal("0");
             java.math.BigDecimal bd3=new java.math.BigDecimal("0");
             for(int r=0;r<dtm2.getRowCount();r++)
             {
                 sqno=Integer.parseInt(jTable2.getValueAt(r, 2)+"");
                 qry="update dc_chq_details set chq_status=1,clearance_date='"+setDate+"' where sq_no="+sqno+"";
                 object1.saveInformation(qry, Main.year);
             
                 bd1=bd1.add(new java.math.BigDecimal(""+jTable2.getValueAt(r, 1)));
                 bd3=bd3.add(new java.math.BigDecimal(""+jTable2.getValueAt(r, 1)));
             }
             qry="select sum(received_amount) from received_cash_detail where edate='"+setDate+"'";
             String distributedAmt=object1.getSigetngleValue(qry, Main.year);
             if(distributedAmt!=null)
             {
                bd1=bd1.subtract(new java.math.BigDecimal(distributedAmt));
             }
             qry="insert into dc_cash_in_hand values("+bd1+",'"+setDate+"')";
             boolean response=object1.saveInformation(qry, Main.year);
             qry="select cash_amt,rec_date from dc_cash_in_hand where rec_date>'"+setDate+"' order by rec_date";
             String existingBalance[][]=object1.getInformationDD(qry, 2, Main.year);
             if(existingBalance!=null)
             {
                 System.out.println("length="+existingBalance.length);
                 System.out.println("bd3="+bd3);
                for(int r=0;r<existingBalance.length;r++)
                {
                    bd2=new java.math.BigDecimal(existingBalance[r][0]);
                    System.out.println("bd2="+bd2);
                    bd2=bd2.add(bd3);
                    qry="update dc_cash_in_hand set cash_amt="+bd2+" where rec_date='"+existingBalance[r][1]+"'";
                    System.out.println("qry="+qry);
                    object1.saveInformation(qry, Main.year);
                }
             }             
             javax.swing.JOptionPane.showMessageDialog(this, "Cheque clearance completed successfully.","Information",javax.swing.JOptionPane.INFORMATION_MESSAGE);
          }
          else
          {
                javax.swing.JOptionPane.showMessageDialog(this, "Some error Cheque clearance completed successfully.","Information",javax.swing.JOptionPane.ERROR_MESSAGE);
          }
        }
        catch(Exception ex)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error no 891..."+ex);
        }

    return true;
}

private boolean rollbackData(String setDate)
{
        try
        {
                interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
                
            java.math.BigDecimal bd1=new java.math.BigDecimal("0");
            java.math.BigDecimal bd2=new java.math.BigDecimal("0");
            String qry="select sum(chq_amt) from dc_chq_details where clearance_date='"+setDate+"' and chq_status=1";
            String lastdata=object1.getSigetngleValue(qry, Main.year);
            if(lastdata==null || lastdata.equals(""))
            {}
            else       
            {
                bd1=new java.math.BigDecimal(lastdata);
            }
            qry="select cash_amt,rec_date from dc_cash_in_hand where rec_date>='"+setDate+"' order by rec_date";
            String existingBalance[][]=object1.getInformationDD(qry, 2, Main.year);
            if(existingBalance!=null)
            {
                for(int r=0;r<existingBalance.length;r++)
                {
                    bd2=new java.math.BigDecimal(existingBalance[r][0]);
                    bd2=bd2.subtract(bd1);
                    qry="update dc_cash_in_hand set cash_amt="+bd2+" where rec_date='"+existingBalance[r][1]+"'";
                    object1.saveInformation(qry, Main.year);

                }
            }
            qry="delete  from dc_cash_in_hand where rec_date='"+setDate+"'";
            System.out.println("qry="+qry);
            boolean res=object1.saveInformation(qry, Main.year);
            System.out.println("res="+res);

            qry="update dc_chq_details set chq_status=0 where clearance_date='"+setDate+"'";
            object1.saveInformation(qry, Main.year);
            System.out.println("ok");

        }
        catch(Exception ex)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error no 891..."+ex);
        }
    return true;
}
}
