/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClosingReportCashierwise.java
 *
 * Created on Jun 7, 2012, 11:47:01 AM
 */

/**
 *
 * @author user1
 */
package railwaycashoffice;

import java.awt.Color;
import java.io.*;

public class ClosingReportCashierwise extends javax.swing.JInternalFrame {

    /** Creates new form ClosingReportCashierwise */
    public ClosingReportCashierwise() {
        initComponents();
        java.util.Date dt=new java.util.Date();
        String curDate=dt.getDate()+"-"+(dt.getMonth()+1)+"-"+(dt.getYear()+1900);
        jLabel2.setText(curDate);
        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        jTable2.setAutoResizeMode(jTable2.AUTO_RESIZE_OFF);
        jTable1.setEnabled(false);
        jTable2.setEnabled(false);
        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();

        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        javax.swing.table.TableColumn column;
        //String head[]={"Using  ","Dept. Name","DC No.","Bill Date","Paid Amt.","Unpaid Amt.","Grand Total"};
        String head[]={"Using  ","","DC No.","Bill Date","Paid Amt.","Unpaid Amt.","Grand Total"};
        colsOfTable1=head.length;
        dtm1=new javax.swing.table.DefaultTableModel(head,0);
        jTable1.setModel(dtm1);

        column=jTable1.getColumn("Using  ");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(120);
        //column=jTable1.getColumn("Dept. Name");
        //column.setCellRenderer(CRLeft);
        //column.setPreferredWidth(90);
        column=jTable1.getColumn("");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(5);
        column=jTable1.getColumn("DC No.");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(90);
        column=jTable1.getColumn("Bill Date");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(90);
        column=jTable1.getColumn("Paid Amt.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(110);
        column=jTable1.getColumn("Unpaid Amt.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(110);
        column=jTable1.getColumn("Grand Total");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(140);
        int howManyDept=0;
        String deptList[][]=null;
        try
        {
            interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
            deptList=object1.getInformationDD("select dp_name from department_detail order by dp_code",1,Main.year);
            if(deptList!=null)
                howManyDept=deptList.length;
            //System.out.println("no="+howManyDept);
            head1=new String[(4+(howManyDept*2))];
        }
        catch(Exception e)
        {
            System.out.println("Errrorr,....1..."+e);
        }
        int col=0;
        head1[col++]="Using  ";
        for(int i=0;i<deptList.length;i++)
        {
            head1[col++]=deptList[i][0]+" Paid Amt.";
            head1[col++]=deptList[i][0]+" Unpaid Amt.";
        }
        head1[col++]="Total Paid Amt.";
        head1[col++]="Total Unpaid Amt.";
        head1[col++]="Grand Total";

        
        dtm2=new javax.swing.table.DefaultTableModel(head1,0);
        jTable2.setModel(dtm2);
        column=jTable2.getColumn("Using  ");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(110);
        for(int i=1;i<head1.length;i++)
        {
            column=jTable2.getColumn(""+head1[i]);
            column.setCellRenderer(CRRight);
            column.setPreferredWidth(140);
        }
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(113, 142, 119));
        setClosable(true);
        setIconifiable(true);
        setTitle("Closing Report : Cashier wise");
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel1.setText("Closing Date");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 10, 100, 20);

        jLabel2.setBackground(new java.awt.Color(51, 255, 102));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("99/99/9999");
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(110, 10, 90, 20);

        jButton1.setBackground(new java.awt.Color(51, 255, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/calendar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(210, 0, 30, 40);

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jButton2.setMnemonic('S');
        jButton2.setText("Show");
        jButton2.setToolTipText("Show Record");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(340, 10, 380, 30);

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jButton4.setMnemonic('C');
        jButton4.setText("Close");
        jButton4.setToolTipText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(380, 60, 340, 30);

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jButton3.setMnemonic('P');
        jButton3.setText("Print");
        jButton3.setToolTipText("Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(10, 60, 340, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 20, 730, 110);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cashierwise Reoprt", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 150, 730, 180);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Summerized Report", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(204, 0, 51))); // NOI18N
        jPanel3.setLayout(new java.awt.BorderLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setFillsViewportHeight(true);
        jScrollPane2.setViewportView(jTable2);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(10, 380, 730, 190);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel3.setText("Total Amount");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 340, 120, 20);

        jLabel4.setBackground(new java.awt.Color(255, 255, 204));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("0.00");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(220, 340, 150, 20);

        jLabel5.setBackground(new java.awt.Color(204, 204, 255));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("0.00");
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(400, 340, 150, 20);

        jLabel6.setBackground(new java.awt.Color(204, 255, 204));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("0.00");
        jLabel6.setOpaque(true);
        getContentPane().add(jLabel6);
        jLabel6.setBounds(590, 340, 150, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Cal date1=new Cal();
        jLabel2.setText(date1.getdate());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            Cal date1=new Cal();
            jLabel2.setText(date1.getdate());
            jButton2.requestFocus();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
            this.dispose();
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //deleting all rows of table1 and table2
        dtm1.setRowCount(0);
        dtm2.setRowCount(0);
        
        //Setting of table1 values--------
        String label[]=new String[colsOfTable1];
        for(int i=0;i<colsOfTable1;i++)
            label[i]="";
        label[0]="Previous Year :-";
        dtm1.addRow(label);
        jTable1.setSelectionBackground(Color.CYAN);
        jTable1.setSelectionForeground(Color.MAGENTA);
        jTable1.addRowSelectionInterval(0, 0);
        //getting values of previous financial year-----
        showClosingDetailsOfTable1OfPrevFinancialYear();
        //
        if(dtm1.getRowCount()<=1)
            dtm1.setRowCount(0);
        else
        {
            label[0]="Current Year :-";
            dtm1.addRow(label);
            jTable1.setSelectionBackground(Color.CYAN);
            jTable1.setSelectionForeground(Color.MAGENTA);
            jTable1.addRowSelectionInterval(dtm1.getRowCount()-1,dtm1.getRowCount()-1);
        }
        showClosingDetailsOfTable1OfCurrFinancialYear();

        //----end of setting of table1 values-----

        //---Setting of table2 values---------
        label=new String[head1.length];
        for(int i=0;i<head1.length;i++)
            label[i]="";
        label[0]="Previous Year :-";
        dtm2.addRow(label);
        jTable2.setSelectionBackground(Color.CYAN);
        jTable2.setSelectionForeground(Color.MAGENTA);
        jTable2.addRowSelectionInterval(0, 0);
        //getting values of previous financial year-----
        setSummaryDeptwiseOfTable2OfPrevFinancialYear();
        //
        boolean f=true;
        if(dtm2.getRowCount()<=1)
        {
            dtm2.setRowCount(0);
            f=false;
        }
        if(dtm2.getRowCount() > 1)
        {
            boolean flag=true;
            for(int i=1;i<dtm2.getRowCount();i++)
            {
                String lastValue=""+dtm2.getValueAt(i,head1.length-1);
                if(lastValue.trim().equals("0.00")==false)
                {
                    flag=false;
                    break;
                }
            }
            if(flag)
            {
                dtm2.setRowCount(0);
                f=false;
            }
        }
        if(f)
        {
            label[0]="Current Year :-";
            dtm2.addRow(label);
            jTable2.setSelectionBackground(Color.CYAN);
            jTable2.setSelectionForeground(Color.MAGENTA);
            jTable2.addRowSelectionInterval(dtm2.getRowCount()-1,dtm2.getRowCount()-1);
        }
        setSummaryDeptwiseOfTable2OfCurrFinancialYear();
        //---end of setting table2 values-----
        //---setting total amounts values in JLabel---
        settingOfTotalAmtInJLabel();
        colouringOfJTable1();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {

            dtm1.setRowCount(0);
            dtm2.setRowCount(0);

        //Setting of table1 values--------
            String label[]=new String[colsOfTable1];
            for(int i=0;i<colsOfTable1;i++)
                label[i]="";
            label[0]="Previous Year :-";
            dtm1.addRow(label);
            jTable1.setSelectionBackground(Color.CYAN);
            jTable1.setSelectionForeground(Color.MAGENTA);
            jTable1.addRowSelectionInterval(0, 0);
        //getting values of previous financial year-----
            showClosingDetailsOfTable1OfPrevFinancialYear();
        //
            if(dtm1.getRowCount()<=1)
                dtm1.setRowCount(0);
            else
            {
                label[0]="Current Year :-";
                dtm1.addRow(label);
                jTable1.setSelectionBackground(Color.CYAN);
                jTable1.setSelectionForeground(Color.MAGENTA);
                jTable1.addRowSelectionInterval(dtm1.getRowCount()-1,dtm1.getRowCount()-1);
            }
            showClosingDetailsOfTable1OfCurrFinancialYear();

        //----end of setting of table1 values-----

        //---Setting of table2 values---------
            label=new String[head1.length];
            for(int i=0;i<head1.length;i++)
                label[i]="";
            label[0]="Previous Year :-";
            dtm2.addRow(label);
            jTable2.setSelectionBackground(Color.CYAN);
            jTable2.setSelectionForeground(Color.MAGENTA);
            jTable2.addRowSelectionInterval(0, 0);
        //getting values of previous financial year-----
            setSummaryDeptwiseOfTable2OfPrevFinancialYear();
        //
            boolean f=true;
            if(dtm2.getRowCount()<=1)
            {
                dtm2.setRowCount(0);
                f=false;
            }
            if(dtm2.getRowCount() > 1)
            {
                boolean flag=true;
                for(int i=1;i<dtm2.getRowCount();i++)
                {
                    String lastValue=""+dtm2.getValueAt(i,head1.length-1);
                    if(lastValue.trim().equals("0.00")==false)
                    {
                        flag=false;
                        break;
                    }
                }
                if(flag)
                {
                    dtm2.setRowCount(0);
                    f=false;
                }
            }
            if(f)
            {
                label[0]="Current Year :-";
                dtm2.addRow(label);
                jTable2.setSelectionBackground(Color.CYAN);
                jTable2.setSelectionForeground(Color.MAGENTA);
                jTable2.addRowSelectionInterval(dtm2.getRowCount()-1,dtm2.getRowCount()-1);
            }
            setSummaryDeptwiseOfTable2OfCurrFinancialYear();
        //---end of setting table2 values-----
        //---setting total amounts values in JLabel---
            settingOfTotalAmtInJLabel();
            colouringOfJTable1();
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new printClosingReport ();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            new printClosingReport ();
        }
    }//GEN-LAST:event_jButton3KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
    javax.swing.table.DefaultTableModel dtm1;
    javax.swing.table.DefaultTableModel dtm2;
    String head1[]=null;
    int colsOfTable1=0;
    double wholeTotalPaidAmtOfPrevYear=0.00,wholeTotalUnpaidAmtOfPrevYear=0.00,wholeTotalGrandTotalOfPrevYear=0.00;
    double wholeTotalPaidAmtOfCurrYear=0.00,wholeTotalUnpaidAmtOfCurrYear=0.00,wholeTotalGrandTotalOfCurrYear=0.00;
    /* For Making This Report Dept. Wise
     * Erase the comment
     * and comment the related code....
     * In All Method.....
     * See Constructor also....
     * See Print cmd. class also
     * only erase the comment....
     */
    private void showClosingDetailsOfTable1OfCurrFinancialYear()
    {
        try
        {
            wholeTotalPaidAmtOfCurrYear=0.00;
            wholeTotalUnpaidAmtOfCurrYear=0.00;
            wholeTotalGrandTotalOfCurrYear=0.00;
            //dtm1.setRowCount(0);
            //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
            String str[]=jLabel2.getText().split("-");
            String closingdt=str[2]+"-"+str[1]+"-"+str[0];
            String qry="select cashier_code,challan_no,edate,dp_code,DC_No from challan_Detail where closing_date='"+closingdt+"' and closing_status=1 order by cashier_code,challan_no";
            String data1[][]=object1.getInformationDD(qry,5,Main.year);
            double totalPaidAmt=0.00,totalUnpaidAmt=0.00,totalGrandTotal=0.00;
            String tab[]=null;
            boolean flag=false;
            if(data1!=null && (data1.length>0))
            {
                flag=true;
                int cashier_code=Integer.parseInt(data1[0][0]);
                for(int i=0;i<data1.length;i++)
                {
                    tab=new String[7];
                    if(cashier_code!=Integer.parseInt(data1[i][0]))
                    {
                        tab[0]="Total";
                        tab[1]="";
                        tab[2]="";
                        tab[3]="";
                        tab[4]=""+(new java.math.BigDecimal(totalPaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        tab[5]=""+(new java.math.BigDecimal(totalUnpaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        tab[6]=""+(new java.math.BigDecimal(totalGrandTotal).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        totalPaidAmt=0;
                        totalUnpaidAmt=0;
                        totalGrandTotal=0;
                        dtm1.addRow(tab);
                        /*jTable1.setSelectionBackground(Color.MAGENTA);
                        jTable1.setSelectionForeground(Color.BLUE);
                        jTable1.addRowSelectionInterval(i, i);*/
                        cashier_code=Integer.parseInt(data1[i][0]);
                        i--;
                        continue;
                    }
                    //qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and edate='"+data1[i][2]+"' and dp_code="+Integer.parseInt(data1[i][3])+" and status=1";
                    qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and edate='"+data1[i][2]+"' and status=1";
                    String data=object1.getSigetngleValue(qry,Main.year);
                    double paidAmt=0.00;
                    if((data!=null)&&(!(data.equals(""))))
                    {
                        paidAmt=Double.valueOf(data);
                        totalPaidAmt+=paidAmt;
                        wholeTotalPaidAmtOfCurrYear+=paidAmt;
                    }
                    //qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and edate='"+data1[i][2]+"' and dp_code="+Integer.parseInt(data1[i][3])+" and status=0";
                    qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and edate='"+data1[i][2]+"' and status=0";
                    data=object1.getSigetngleValue(qry,Main.year);
                    double unPaidAmt=0.00;
                    if((data!=null)&&(!(data.equals(""))))
                    {
                        unPaidAmt=Double.valueOf(data);
                        totalUnpaidAmt+=unPaidAmt;
                        wholeTotalUnpaidAmtOfCurrYear+=unPaidAmt;
                    }
                    double grandtotal=paidAmt+unPaidAmt;
                    totalGrandTotal+=grandtotal;
                    wholeTotalGrandTotalOfCurrYear+=grandtotal;
                    String cashierNo=object1.getSigetngleValue("select cashier_number from cashier_detail where cashier_code="+Integer.parseInt(data1[i][0])+"", Main.year);
                    tab[0]=cashierNo+"/"+data1[i][1];
                    //String dpName=object1.getSigetngleValue("select dp_name from department_detail where dp_code="+Integer.parseInt(data1[i][3])+"", Main.year);
                    //tab[1]=dpName;
                    tab[1]="";
                    tab[2]=data1[i][4];
                    String temp[]=data1[i][2].split("-");
                    String challanDate=temp[2]+"-"+temp[1]+"-"+temp[0];
                    tab[3]=challanDate;
                    tab[4]=""+(new java.math.BigDecimal(paidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    tab[5]=""+(new java.math.BigDecimal(unPaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    tab[6]=""+(new java.math.BigDecimal(grandtotal).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    dtm1.addRow(tab);
                }
                //---adding last column cashier total----
                if(flag)
                {
                    tab[0]="Total";
                    tab[1]="";
                    tab[2]="";
                    tab[3]="";
                    tab[4]=""+(new java.math.BigDecimal(totalPaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    tab[5]=""+(new java.math.BigDecimal(totalUnpaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    tab[6]=""+(new java.math.BigDecimal(totalGrandTotal).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    totalPaidAmt=0;
                    totalUnpaidAmt=0;
                    totalGrandTotal=0;
                    dtm1.addRow(tab);
                    /*jTable1.setSelectionBackground(Color.MAGENTA);
                    jTable1.setSelectionForeground(Color.BLUE);
                    jTable1.addRowSelectionInterval(dtm1.getRowCount()-1,dtm1.getRowCount()-1);*/
                }
            }
            //jLabel4.setText(""+(new java.math.BigDecimal(wholeTotalPaidAmtOfCurrYear).setScale(2,java.math.BigDecimal.ROUND_HALF_UP)));
            //jLabel5.setText(""+(new java.math.BigDecimal(wholeTotalUnpaidAmtOfCurrYear).setScale(2,java.math.BigDecimal.ROUND_HALF_UP)));
            //jLabel6.setText(""+(new java.math.BigDecimal(wholeTotalGrandTotalOfCurrYear).setScale(2,java.math.BigDecimal.ROUND_HALF_UP)));
            
        }
        catch(Exception e)
        {
            System.out.println("Error...123skm..."+e);
        }
    }
    private void setSummaryDeptwiseOfTable2OfCurrFinancialYear()
    {
        try
        {
            //dtm2.setRowCount(0);
            //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
           interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}        
            String str[]=jLabel2.getText().split("-");
            String closingdt=str[2]+"-"+str[1]+"-"+str[0];
            String tab[]=null;
            String qry="select cashier_code,cashier_number from cashier_detail order by cashier_number";
            String data1[][]=object1.getInformationDD(qry,2,Main.year);
            if(data1!=null && (data1.length>0))
            {
                int col;
                for(int i=0;i<data1.length;i++)
                {
                    tab=new String[head1.length];
                    col=0;
                    double totalPaidAmtCashierwise=0.00,totalUnpaidAmtCashierwise=0.00;
                    qry="select dp_code,dp_name from department_detail order by dp_code";
                    String dpList[][]=object1.getInformationDD(qry,2,Main.year);
                    if(dpList!=null )//&& (dpList.length>0))
                    {
                        for(int ind=0;ind<head1.length;ind++)//initializing table row
                            tab[ind]="0.00";
                        tab[col]=data1[i][1];
                        qry="select min(challan_no) from challan_detail where cashier_code="+Integer.parseInt(data1[i][0])+" and closing_date='"+closingdt+"' and closing_status=1";
                        String temp=object1.getSigetngleValue(qry,Main.year);
                        
                        if((temp!=null)&&(!(temp.equals(""))))
                            tab[col]+="/"+temp+"to";
                        qry="select max(challan_no) from challan_detail where cashier_code="+Integer.parseInt(data1[i][0])+" and closing_date='"+closingdt+"' and closing_status=1";
                        temp=object1.getSigetngleValue(qry,Main.year);
                        
                        if((temp!=null)&&(!(temp.equals(""))))
                            tab[col]+=temp;
                        col++;
                        for(int j=0;j<dpList.length;j++)
                        {
                            //qry="select edate from challan_detail where closing_date='"+closingdt+"' and closing_status=1 and cashier_code="+Integer.parseInt(data1[i][0])+" and dp_code="+Integer.parseInt(dpList[j][0])+"";
                            qry="select edate from challan_detail where closing_date='"+closingdt+"' and closing_status=1 and cashier_code="+Integer.parseInt(data1[i][0])+"";
                            String data2[][]=object1.getInformationDD(qry,1,Main.year);
                            if(data2!=null )//&& (data2.length>0))
                            {
                                double paidAmt=0,unPaidAmt=0;
                                for(int k=0;k<data2.length;k++)
                                {
                                    
                                    qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and dp_code="+Integer.parseInt(dpList[j][0])+" and edate='"+data2[k][0]+"' and status=1";
                                    String data=object1.getSigetngleValue(qry,Main.year);
                                    if((data!=null)&&(!(data.equals(""))))
                                    {
                                        double amt=Double.valueOf(data);
                                        paidAmt+=amt;
                                        totalPaidAmtCashierwise+=amt;
                                    }
                                    
                                    qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and dp_code="+Integer.parseInt(dpList[j][0])+" and edate='"+data2[k][0]+"' and status=0";
                                    
                                    data=object1.getSigetngleValue(qry,Main.year);
                                    if((data!=null)&&(!(data.equals(""))))
                                    {
                                        double amt=Double.valueOf(data);
                                        unPaidAmt+=amt;
                                        totalUnpaidAmtCashierwise+=amt;
                                    }
                                }//amount close=for k=0
                                tab[col++]=""+(new java.math.BigDecimal(paidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                                tab[col++]=""+(new java.math.BigDecimal(unPaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                            }
                        }//---dept close for j=0
                        tab[col++]=""+(new java.math.BigDecimal(totalPaidAmtCashierwise).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        tab[col++]=""+(new java.math.BigDecimal(totalUnpaidAmtCashierwise).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        double grandTotal=totalPaidAmtCashierwise+totalUnpaidAmtCashierwise;
                        tab[col++]=""+(new java.math.BigDecimal(grandTotal).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        
                        dtm2.addRow(tab);
                    }
                }
            }
        }
        catch(Exception e)
        {
            System.out.println("Error...123456..."+e);
        }
    }
    /*
     *Given below methods(showClosingDetailsOfTable1OfPrevFinancialYear() & showClosingDetailsOfTable1OfPrevFinancialYear())
     * will run only one time when starting of current financial year and closing is to be done of previous financial year
     * in current financial year...
     * Note-These methods runs only one time (at starting of) in current financial year...
     * So don't confused.
     */
    private void showClosingDetailsOfTable1OfPrevFinancialYear()
    {
        try
        {
            //dtm1.setRowCount(0);
            wholeTotalPaidAmtOfPrevYear=0.00;
            wholeTotalUnpaidAmtOfPrevYear=0.00;
            wholeTotalGrandTotalOfPrevYear=0.00;
            //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
            interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
            String str[]=jLabel2.getText().split("-");
            String closingdt=str[2]+"-"+str[1]+"-"+str[0];
            String qry="select cashier_code,challan_no,edate,dp_code,DC_No from carryforward_challan_Detail where closing_date='"+closingdt+"' and closing_status=1 order by cashier_code,challan_no";
            String data1[][]=object1.getInformationDD(qry,5,Main.year);
            double totalPaidAmt=0.00,totalUnpaidAmt=0.00,totalGrandTotal=0.00;
            String tab[]=null;
            boolean flag=false;
            if(data1!=null && (data1.length>0))
            {
                flag=true;
                int cashier_code=Integer.parseInt(data1[0][0]);
                for(int i=0;i<data1.length;i++)
                {
                    tab=new String[7];
                    if(cashier_code!=Integer.parseInt(data1[i][0]))
                    {
                        tab[0]="Total";
                        tab[1]="";
                        tab[2]="";
                        tab[3]="";
                        tab[4]=""+(new java.math.BigDecimal(totalPaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        tab[5]=""+(new java.math.BigDecimal(totalUnpaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        tab[6]=""+(new java.math.BigDecimal(totalGrandTotal).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        totalPaidAmt=0;
                        totalUnpaidAmt=0;
                        totalGrandTotal=0;
                        dtm1.addRow(tab);
                        /*jTable1.setSelectionBackground(Color.MAGENTA);
                        jTable1.setSelectionForeground(Color.BLUE);
                        jTable1.addRowSelectionInterval(i, i);*/
                        cashier_code=Integer.parseInt(data1[i][0]);
                        i--;
                        continue;
                    }
                    //qry="select sum(amount) from carryforward_build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and edate='"+data1[i][2]+"' and dp_code="+Integer.parseInt(data1[i][3])+" and status=1";
                    qry="select sum(amount) from carryforward_build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and edate='"+data1[i][2]+"' and status=1";
                    String data=object1.getSigetngleValue(qry,Main.year);
                    double paidAmt=0.00;
                    if((data!=null)&&(!(data.equals(""))))
                    {
                        paidAmt=Double.valueOf(data);
                        totalPaidAmt+=paidAmt;
                        wholeTotalPaidAmtOfPrevYear+=paidAmt;
                    }
                    //qry="select sum(amount) from carryforward_build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and edate='"+data1[i][2]+"' and dp_code="+Integer.parseInt(data1[i][3])+" and status=0";
                    qry="select sum(amount) from carryforward_build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and edate='"+data1[i][2]+"' and status=0";
                    data=object1.getSigetngleValue(qry,Main.year);
                    double unPaidAmt=0.00;
                    if((data!=null)&&(!(data.equals(""))))
                    {
                        unPaidAmt=Double.valueOf(data);
                        totalUnpaidAmt+=unPaidAmt;
                        wholeTotalUnpaidAmtOfPrevYear+=unPaidAmt;
                    }
                    double grandtotal=paidAmt+unPaidAmt;
                    totalGrandTotal+=grandtotal;
                    wholeTotalGrandTotalOfPrevYear+=grandtotal;
                    String cashierNo=object1.getSigetngleValue("select cashier_number from cashier_detail where cashier_code="+Integer.parseInt(data1[i][0])+"", Main.year);
                    tab[0]=cashierNo+"/"+data1[i][1];
                    //String dpName=object1.getSigetngleValue("select dp_name from department_detail where dp_code="+Integer.parseInt(data1[i][3])+"", Main.year);
                    //tab[1]=dpName;
                    tab[1]="";
                    tab[2]=data1[i][4];
                    String temp[]=data1[i][2].split("-");
                    String challanDate=temp[2]+"-"+temp[1]+"-"+temp[0];
                    tab[3]=challanDate;
                    tab[4]=""+(new java.math.BigDecimal(paidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    tab[5]=""+(new java.math.BigDecimal(unPaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    tab[6]=""+(new java.math.BigDecimal(grandtotal).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    dtm1.addRow(tab);
                }
                //---adding last column cashier total----
                if(flag)
                {
                    tab[0]="Total";
                    tab[1]="";
                    tab[2]="";
                    tab[3]="";
                    tab[4]=""+(new java.math.BigDecimal(totalPaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    tab[5]=""+(new java.math.BigDecimal(totalUnpaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    tab[6]=""+(new java.math.BigDecimal(totalGrandTotal).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                    totalPaidAmt=0;
                    totalUnpaidAmt=0;
                    totalGrandTotal=0;
                    dtm1.addRow(tab);
                    /*jTable1.setSelectionBackground(Color.MAGENTA);
                    jTable1.setSelectionForeground(Color.BLUE);
                    jTable1.addRowSelectionInterval(dtm1.getRowCount()-1,dtm1.getRowCount()-1);*/
                }
            }
            //jLabel4.setText(""+(new java.math.BigDecimal(wholeTotalPaidAmtOfPrevYear).setScale(2,java.math.BigDecimal.ROUND_HALF_UP)));
            //jLabel5.setText(""+(new java.math.BigDecimal(wholeTotalUnpaidAmtOfPrevYear).setScale(2,java.math.BigDecimal.ROUND_HALF_UP)));
            //jLabel6.setText(""+(new java.math.BigDecimal(wholeTotalGrandTotalOfPrevYear).setScale(2,java.math.BigDecimal.ROUND_HALF_UP)));

        }
        catch(Exception e)
        {
            System.out.println("Error...123skm..."+e);
        }
    }
    private void setSummaryDeptwiseOfTable2OfPrevFinancialYear()
    {
        try
        {
            //dtm2.setRowCount(0);
            //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
           interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
            String str[]=jLabel2.getText().split("-");
            String closingdt=str[2]+"-"+str[1]+"-"+str[0];
            String tab[]=null;
            String qry="select cashier_code,cashier_number from cashier_detail order by cashier_number";
            String data1[][]=object1.getInformationDD(qry,2,Main.year);
            if(data1!=null && (data1.length>0))
            {
                int col;
                for(int i=0;i<data1.length;i++)
                {
                    tab=new String[head1.length];
                    col=0;
                    double totalPaidAmtCashierwise=0.00,totalUnpaidAmtCashierwise=0.00;
                    qry="select dp_code,dp_name from department_detail order by dp_code";
                    String dpList[][]=object1.getInformationDD(qry,2,Main.year);
                    if(dpList!=null )//&& (dpList.length>0))
                    {
                        for(int ind=0;ind<head1.length;ind++)//initializing table row
                            tab[ind]="0.00";
                        tab[col]=data1[i][1];
                        qry="select min(challan_no) from carryforward_challan_detail where cashier_code="+Integer.parseInt(data1[i][0])+" and closing_date='"+closingdt+"' and closing_status=1";
                        String temp=object1.getSigetngleValue(qry,Main.year);

                        if((temp!=null)&&(!(temp.equals(""))))
                            tab[col]+="/"+temp+"to";
                        qry="select max(challan_no) from carryforward_challan_detail where cashier_code="+Integer.parseInt(data1[i][0])+" and closing_date='"+closingdt+"' and closing_status=1";
                        temp=object1.getSigetngleValue(qry,Main.year);

                        if((temp!=null)&&(!(temp.equals(""))))
                            tab[col]+=temp;
                        col++;
                        for(int j=0;j<dpList.length;j++)
                        {
                            //qry="select edate from carryforward_challan_detail where closing_date='"+closingdt+"' and closing_status=1 and cashier_code="+Integer.parseInt(data1[i][0])+" and dp_code="+Integer.parseInt(dpList[j][0])+"";
                            qry="select edate from carryforward_challan_detail where closing_date='"+closingdt+"' and closing_status=1 and cashier_code="+Integer.parseInt(data1[i][0])+"";
                            String data2[][]=object1.getInformationDD(qry,1,Main.year);
                            if(data2!=null )//&& (data2.length>0))
                            {
                                double paidAmt=0,unPaidAmt=0;
                                for(int k=0;k<data2.length;k++)
                                {

                                    qry="select sum(amount) from carryforward_build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and dp_code="+Integer.parseInt(dpList[j][0])+" and edate='"+data2[k][0]+"' and status=1";
                                    String data=object1.getSigetngleValue(qry,Main.year);
                                    if((data!=null)&&(!(data.equals(""))))
                                    {
                                        double amt=Double.valueOf(data);
                                        paidAmt+=amt;
                                        totalPaidAmtCashierwise+=amt;
                                    }

                                    qry="select sum(amount) from carryforward_build_distribution where cashier_code="+Integer.parseInt(data1[i][0])+" and dp_code="+Integer.parseInt(dpList[j][0])+" and edate='"+data2[k][0]+"' and status=0";

                                    data=object1.getSigetngleValue(qry,Main.year);
                                    if((data!=null)&&(!(data.equals(""))))
                                    {
                                        double amt=Double.valueOf(data);
                                        unPaidAmt+=amt;
                                        totalUnpaidAmtCashierwise+=amt;
                                    }
                                }//amount close=for k=0
                                tab[col++]=""+(new java.math.BigDecimal(paidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                                tab[col++]=""+(new java.math.BigDecimal(unPaidAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                            }
                        }//---dept close for j=0
                        tab[col++]=""+(new java.math.BigDecimal(totalPaidAmtCashierwise).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        tab[col++]=""+(new java.math.BigDecimal(totalUnpaidAmtCashierwise).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));
                        double grandTotal=totalPaidAmtCashierwise+totalUnpaidAmtCashierwise;
                        tab[col++]=""+(new java.math.BigDecimal(grandTotal).setScale(2,java.math.BigDecimal.ROUND_HALF_UP));

                        dtm2.addRow(tab);
                    }
                }
            }
        }
        catch(Exception e)
        {
            System.out.println("Error...123456..."+e);
        }
    }

    private void settingOfTotalAmtInJLabel()
    {
        jLabel4.setText(""+(new java.math.BigDecimal(wholeTotalPaidAmtOfPrevYear+wholeTotalPaidAmtOfCurrYear).setScale(2,java.math.BigDecimal.ROUND_HALF_UP)));
        jLabel5.setText(""+(new java.math.BigDecimal(wholeTotalUnpaidAmtOfPrevYear+wholeTotalUnpaidAmtOfCurrYear).setScale(2,java.math.BigDecimal.ROUND_HALF_UP)));
        jLabel6.setText(""+(new java.math.BigDecimal(wholeTotalGrandTotalOfPrevYear+wholeTotalGrandTotalOfCurrYear).setScale(2,java.math.BigDecimal.ROUND_HALF_UP)));
    }

    private void colouringOfJTable1()
    {
        for(int i=0;i<dtm1.getRowCount();i++)
        {
            String data=""+jTable1.getValueAt(i,0);
            if(data.equalsIgnoreCase("Total"))
            {
                jTable1.setSelectionBackground(Color.MAGENTA);
                jTable1.setSelectionForeground(Color.BLUE);
                jTable1.addRowSelectionInterval(i,i);
            }
        }
    }

    //-----------------------------------------------------------------------------
class printClosingReport extends javax.swing.JFrame
{

        PrintWriter pw;
        int assetLine;
        boolean flag2;
           public printClosingReport()
           {
                    boolean first=true;
                    assetLine=-2;
                    int ternLine=1;
                     FileOutputStream fos=null;
                        try
                        {
                                String space="";
                                String temp="";
                                int rep=0;
                                int maxrows=68;
                                System.out.println("Start printing...");
                              //  fos=new FileOutputStream("LPT1");


                                try
                                {
                                    //    fos=new java.io.FileOutputStream("LPT1");
                                   //fos=new java.io.FileOutputStream("LPT1");//LPT1");
                                    fos=new java.io.FileOutputStream("IntReport.in");
                                        System.out.println("inside find port...LPT1");
                                }
                                catch(Exception ex)
                                {
                                        System.out.println("port not found...");
                                        fos=new java.io.FileOutputStream("IntReport.in");//LPT1");
                                }

                                pw=new PrintWriter(fos);
                                int countLine=1;
                                String line="";
                                int l=0;
                                pw.println("");
                                pw.println("");
                                pw.println("");
                                pw.println("");
                                pw.println("EAST CENTRAL RAILWAY                    DIVISIONAL CASH PAY OFFICE      ECR MUGHALSARAI");
                                pw.println("Closing Report Cashier Wise :          ");
                                pw.println("Closing Date :-  "+jLabel2.getText().toUpperCase());
                                pw.println("");
                                pw.println("---------------------------------------------------------------------------------------------------------------------------------");
                                //String str="Using          Dept. Name    DC No.       Bill Date            PaidAmount          UnPaid Amount                Grand Total";
                                String str="Using                        DC No.       Bill Date            PaidAmount          UnPaid Amount                Grand Total";
                                pw.println(str);
                                for(int i=0;i<=dtm1.getRowCount();i++)
                                {
                                    boolean flag1=true;
                                    String data[]=new String[7];
                                    for(int x=0;x<data.length;x++)
                                        data[x]="";
                                    if(i<dtm1.getRowCount())
                                    {
                                        flag1=false;
                                        data[0]=""+jTable1.getValueAt(i,0);
                                        pw.print(data[0]);

                                        for(int s=data[0].length();s<17;s++)
                                            data[1]+=" ";
                                        data[1]+=""+jTable1.getValueAt(i,1);
                                        pw.print(data[1]);
                                        for(int s=(data[0].length()+data[1].length());s<30;s++)
                                            data[2]+=" ";
                                        data[2]+=""+jTable1.getValueAt(i,2);
                                        pw.print(data[2]);
                                        for(int s=(data[0].length()+data[1].length()+data[2].length());s<43;s++)
                                            data[3]+=" ";
                                        data[3]+=""+jTable1.getValueAt(i,3);
                                        pw.print(data[3]);
                                        int len=75-((""+jTable1.getValueAt(i,4)).length());
                                        int init=(data[0].length()+data[1].length()+data[2].length()+data[3].length());
                                       for(int s=init;s<len;s++)
                                            data[4]+=" ";
                                        data[4]+=""+jTable1.getValueAt(i,4);
                                        pw.print(data[4]);
                                        len=95-((""+jTable1.getValueAt(i,5)).length());
                                        init=(data[0].length()+data[1].length()+data[2].length()+data[3].length()+data[4].length());
                                       for(int s=init;s<len;s++)
                                            data[5]+=" ";
                                        data[5]+=""+jTable1.getValueAt(i,5);
                                        pw.print(data[5]);
                                        len=120-((""+jTable1.getValueAt(i,6)).length());
                                        init=(data[0].length()+data[1].length()+data[2].length()+data[3].length()+data[4].length()+data[5].length());
                                       for(int s=init;s<len;s++)
                                            data[6]+=" ";
                                        data[6]+=""+jTable1.getValueAt(i,6);
                                        pw.print(data[6]);
                                    }
                                    if(flag1)
                                    {
                                        flag1=false;
                                        pw.println();
                                        data[0]="Whole Total :-";
                                        pw.print(data[0]);
                                        int len=75-((""+jLabel4.getText()).length());
                                        int init=(data[0].length()+data[1].length()+data[2].length()+data[3].length());
                                       for(int s=init;s<len;s++)
                                            data[4]+=" ";
                                        data[4]+=""+jLabel4.getText();
                                        pw.print(data[4]);
                                        len=95-((""+""+jLabel5.getText()).length());
                                        init=(data[0].length()+data[1].length()+data[2].length()+data[3].length()+data[4].length());
                                       for(int s=init;s<len;s++)
                                            data[5]+=" ";
                                        data[5]+=""+""+jLabel5.getText();
                                        pw.print(data[5]);
                                        len=120-((""+""+jLabel6.getText()).length());
                                        init=(data[0].length()+data[1].length()+data[2].length()+data[3].length()+data[4].length()+data[5].length());
                                       for(int s=init;s<len;s++)
                                            data[6]+=" ";
                                        data[6]+=""+jLabel6.getText();
                                        pw.print(data[6]);  
                                    }
                                    pw.println("");
                                }
                                //---------------Printing of second table------------///
                                pw.println();
                                pw.println();
                                pw.println();
                                pw.println("EAST CENTRAL RAILWAY                    DIVISIONAL CASH PAY OFFICE      ECR MUGHALSARAI");
                                pw.println("Closing Report Department Wise :          ");
                                pw.println("Closing Date :-  "+jLabel2.getText().toUpperCase());
                                pw.println("");
                                pw.println("---------------------------------------------------------------------------------------------------------------------------------");
                                str="";
                                String deptList[][]=null;
                                 try
                                 {
                                    interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
                                    deptList=object1.getInformationDD("select dp_name from department_detail order by dp_code",1,Main.year);
                                    if(deptList!=null && deptList.length>0)
                                    {
                                        str+="Using";
                                        if(str.length()<30)
                                        {
                                              for(int sp=str.length();sp<30;sp++)
                                                str+=" ";
                                        }
                                        for(int i=0;i<deptList.length;i++)
                                        {
                                            str+=deptList[i][0];
                                            if(deptList[i][0].length()<27)
                                            {
                                                 for(int sp=deptList[i][0].length();sp<27;sp++)
                                                    str+=" ";
                                            }
                                        }
                                        str=str.substring(0,str.length()-9);
                                        temp="Paid Total";
                                        str+=temp;
                                        if(temp.length()<14)
                                        {
                                              for(int sp=temp.length();sp<14;sp++)
                                                str+=" ";
                                        }
                                        temp="Unpaid Total";
                                        str+=temp;
                                        pw.println(str);

                                        str="";
                                        for(int s=0;s<24;s++)
                                            str+=" ";
                                        for(int i=0;i<deptList.length;i++)
                                        {
                                            str+="Paid Amt.   ";
                                            str+="UnPaid Amt.    ";
                                        }
                                        pw.println(str);
                                    }
                                }
                                catch(Exception e)
                                {
                                    System.out.println("Errrorr,....1..."+e);
                                }
                                int col=jTable2.getColumnCount()-1;
                                String data[]=new String[col];
                                for(int x=0;x<data.length;x++)
                                    data[x]="";
                                for(int i=0;i<dtm2.getRowCount();i++)
                                {
                                    data[0]=""+jTable2.getValueAt(i,0);
                                    pw.print(data[0]);
                                    for(int s=data[0].length();s<20;s++)
                                    {
                                        data[0]+=" ";
                                        pw.print(" ");
                                    }
                                            
                                    for(int j=1;j<col;j++)
                                    {
                                        data[j]="";
                                        String t=""+jTable2.getValueAt(i,j);
                                        int len=(15+14*j)-(t.length());
                                        int init=0;//(data[0].length()+data[1].length()+data[2].length()+data[3].length());
                                        for(int s=0;s<=j;s++)
                                            init+=data[s].length();
                                        for(int s=init;s<len;s++)
                                            data[j]+=" ";
                                        data[j]+=""+t;
                                        pw.print(data[j]);
                                        System.out.println(""+i+" "+j);
                                    }
                                    System.out.println("aaa");
                                    pw.println();
                                }

                                //-------------printing of second table close------------//
                                pw.close();
                                fos.close();

                                System.out.println("End printing");


                    }
                    catch(Exception x)
                    {
                                System.out.println("Error 123..."+x);
                    }

         }
    }

}
