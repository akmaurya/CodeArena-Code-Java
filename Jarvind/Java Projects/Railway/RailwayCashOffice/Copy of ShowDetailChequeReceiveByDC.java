/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChequeReceiveByDC.java
 *
 * Created on Jul 18, 2012, 10:27:52 AM
 */

package railwaycashoffice;

import java.awt.Color;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.RoundingMode;

/**
 *
 * @author welcome
 */
public class ShowDetailChequeReceiveByDC extends javax.swing.JInternalFrame {

    /** Creates new form ChequeReceiveByDC */
    public ShowDetailChequeReceiveByDC() {
        initComponents();
        java.util.Date dt=new java.util.Date();
        int date=dt.getDate();
        int month=dt.getMonth()+1;
        int yr=dt.getYear()+1900;
        String setDate=date+"-"+month+"-"+yr;
        jLabel9.setText(setDate);
        jLabel10.setText(setDate);

        
        addDepartmentNameInList();

        String heading[]={"Sr. No.","Date","Opening Amt.","Cheque No.","Received Amt.","Distributed Amt.","Balance Amt."};
        dtm=new javax.swing.table.DefaultTableModel(heading,0);
        jTable1.setModel(dtm);
        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();
        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        javax.swing.table.TableColumn column;
        column=jTable1.getColumn("Sr. No.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(50);
        column=jTable1.getColumn("Date");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Cheque No.");
        column.setCellRenderer(CRCenter);
        column.setPreferredWidth(90);
        column=jTable1.getColumn("Received Amt.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Distributed Amt.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Balance Amt.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);
        column=jTable1.getColumn("Opening Amt.");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);

        jTable1.setRowHeight(25);
        
        //setChequeDetails();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("REPORT :: LEN DEN BY DC");
        getContentPane().setLayout(null);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel4.setText("Select Department");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 50, 140, 26);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("To");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(410, 20, 50, 20);

        jLabel9.setBackground(new java.awt.Color(255, 255, 204));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("jLabel9");
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(470, 20, 160, 25);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/calendar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(630, 20, 30, 25);

        jComboBox1.setForeground(new java.awt.Color(0, 0, 255));
        jComboBox1.setToolTipText("Please select department");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox1FocusLost(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(210, 50, 190, 26);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/Close1.gif"))); // NOI18N
        jButton2.setMnemonic('c');
        jButton2.setText("Close");
        jButton2.setToolTipText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jButton2FocusLost(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(10, 510, 130, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 90, 660, 410);

        jLabel10.setBackground(new java.awt.Color(255, 255, 204));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("jLabel10");
        jLabel10.setOpaque(true);
        getContentPane().add(jLabel10);
        jLabel10.setBounds(210, 20, 160, 25);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/calendar.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(370, 20, 30, 25);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel6.setText("Cheque Receiving Date");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 20, 170, 20);

        jLabel1.setBackground(new java.awt.Color(255, 204, 102));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("0.00");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(350, 515, 100, 20);

        jLabel2.setBackground(new java.awt.Color(153, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("0.00");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(460, 515, 100, 20);

        jLabel3.setBackground(new java.awt.Color(153, 255, 153));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("0.00");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(570, 515, 100, 20);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/show.gif"))); // NOI18N
        jButton4.setText("Show");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(420, 50, 240, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Cal date1=new Cal();
        jLabel9.setText(date1.getdate());
        jComboBox1.requestFocus();
        //setChequeDetails();
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10) {
            Cal date1=new Cal();
            jLabel9.setText(date1.getdate());
            //setChequeDetails();
        }
}//GEN-LAST:event_jButton1KeyPressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        //  javax.swing.JOptionPane.showMessageDialog(null,"coming here first.....");
        
        //setData();
        //setChequeDetails();
}//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        // TODO add your handling code here:
        //jComboBox1.setForeground(Color.red);
        jComboBox1.setBackground(Color.yellow);
}//GEN-LAST:event_jComboBox1FocusGained

    private void jComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusLost
        // TODO add your handling code here:
        //jComboBox1.setForeground(Color.black);
        jComboBox1.setBackground(Color.white);
}//GEN-LAST:event_jComboBox1FocusLost

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
     //   if(evt.getKeyCode()==10) {
      //      jTextField1.requestFocus();
       // }
}//GEN-LAST:event_jComboBox1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusGained
        // TODO add your handling code here:
        //jButton2.setForeground(Color.red);
    }//GEN-LAST:event_jButton2FocusGained

    private void jButton2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusLost
        // TODO add your handling code here:
        //jButton2.setForeground(Color.black);
    }//GEN-LAST:event_jButton2FocusLost

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
            this.dispose();
}//GEN-LAST:event_jButton2KeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
        /*int row=jTable1.getSelectedRow();
        jTextField1.setText(""+jTable1.getValueAt(row, 1));
        jTextField2.setText(""+jTable1.getValueAt(row, 2));
        selectedChqAmt=jTextField2.getText();
        selectedChqNo=jTextField1.getText();
        jButton1.setEnabled(false);
        jComboBox1.setEnabled(false);
         *
         */
    }//GEN-LAST:event_jTable1MousePressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
/*        if(evt.getKeyCode()==evt.VK_DELETE)
        {
            deleteInformation();
        }
 * 
 */
    }//GEN-LAST:event_jTable1KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        Cal date1=new Cal();
        jLabel10.setText(date1.getdate());
        jComboBox1.requestFocus();
        //setChequeDetails();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setChequeDetails();
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    javax.swing.table.DefaultTableModel dtm;
    String selectedChqAmt="";
    String selectedChqNo="";


    private void addDepartmentNameInList()
    {
        try
        {
             interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
             String qry="Select dp_name from department_detail order by dp_code";
             String[] load=object1.getResultSetAs_1D_Array(qry,Main.year);
             jComboBox1.removeAllItems();
             jComboBox1.addItem("All");
            if(load!=null && load.length>0)
            {
                for(int i=0;i<load.length;i++)
                {
                    jComboBox1.addItem(load[i]);
                }
            }

        }
        catch(Exception ex)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error no 891..."+ex);
        }
    }

    /*private boolean saveData()
    {
        int res=javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure?", "Confirmation", javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
        if(res==javax.swing.JOptionPane.NO_OPTION)
        {
            return false;
        }
        if(Utility.isBlank(jTextField1.getText())==true)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error!\nEnter cheque number.", "Error Message",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField1.requestFocus();
            return false;
        }
        if(Utility.isBlank(jTextField2.getText())==true)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error!\nEnter cheque amount.", "Error Message",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField2.requestFocus();
            return false;
        }
        if(Utility.isDouble(jTextField2.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error!\nInvalid cheque amount found.", "Error Message",javax.swing.JOptionPane.ERROR_MESSAGE);
            jTextField1.requestFocus();
            jTextField1.selectAll();
            return false;
        }
        try
        {
                interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}

            String qry="Select dp_code from department_detail where dp_name='"+jComboBox1.getSelectedItem()+"'";
            int dpCode=Integer.parseInt(object1.getSigetngleValue(qry, Main.year));
            String d1[]=jLabel9.getText().split("-");
            String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
            String chqNo=jTextField1.getText().trim();
            double chqAmt=Double.valueOf(jTextField2.getText().trim());
            
            qry="select cash_amt from dc_cash_in_hand where rec_date>'"+setDate+"'";
            String str1=object1.getSigetngleValue(qry, Main.year);
            if(str1!=null && str1.equals("")==false)
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Error!\nUpdation for selected date is not possible.", "Error Message",javax.swing.JOptionPane.ERROR_MESSAGE);
                return false;
            }

            qry="update dc_chq_details set chq_no='"+chqNo+"',chq_amt="+chqAmt+" where dp_code="+dpCode+" and receiving_date='"+setDate+"' and chq_no='"+selectedChqNo+"'";
            System.out.println(qry);
            boolean response=object1.saveInformation(qry, Main.year);
            if(response==true)
            {
                qry="select cash_amt from dc_cash_in_hand where rec_date='"+setDate+"'";
                String str=object1.getSigetngleValue(qry, Main.year);
                if(str!=null && str.equals("")==false)
                {
                    java.math.BigDecimal bd=new java.math.BigDecimal(str);
                    bd=bd.add(new java.math.BigDecimal(jTextField2.getText().trim()));
                    bd=bd.subtract(new java.math.BigDecimal(selectedChqAmt));
                    qry="update dc_cash_in_hand set cash_amt="+bd+" where rec_date='"+setDate+"'";
                    System.out.println(qry);
                    response=object1.saveInformation(qry, Main.year);
                }
            }
            if(response==true)
            {
                setChequeDetails();
                javax.swing.JOptionPane.showMessageDialog(this, "Ok!\nCheque details updated successfully.", "Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField1.setText("");
                jTextField2.setText("");
                jComboBox1.requestFocus();
            }
            else
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Error!\nSome problem found.", "Error Message",javax.swing.JOptionPane.ERROR_MESSAGE);
            }

        }
        catch(Exception ex)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error no 891..."+ex);
        }
        return true;
    }
*/

 /*   private boolean deleteInformation()
    {
        int row=jTable1.getSelectedRow();
        if(row<0)
        {
                javax.swing.JOptionPane.showMessageDialog(this, "Error!\nfirst you select a record for deletion.", "Error Message",javax.swing.JOptionPane.ERROR_MESSAGE);
                return false;

        }
        //int row=jTable1.getSelectedRow();
        jTextField1.setText(""+jTable1.getValueAt(row, 1));
        jTextField2.setText(""+jTable1.getValueAt(row, 2));
        selectedChqAmt=jTextField2.getText();
        selectedChqNo=jTextField1.getText();

        int res=javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure?", "Confirmation", javax.swing.JOptionPane.YES_NO_OPTION,javax.swing.JOptionPane.QUESTION_MESSAGE);
        if(res==javax.swing.JOptionPane.NO_OPTION)
        {
            return false;
        }
        try
        {
                interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}

            String qry="Select dp_code from department_detail where dp_name='"+jComboBox1.getSelectedItem()+"'";
            int dpCode=Integer.parseInt(object1.getSigetngleValue(qry, Main.year));
            String d1[]=jLabel9.getText().split("-");
            String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
            String chqNo=jTextField1.getText().trim();
            double chqAmt=Double.valueOf(jTextField2.getText().trim());

            qry="select cash_amt from dc_cash_in_hand where rec_date>'"+setDate+"'";
            String str1=object1.getSigetngleValue(qry, Main.year);
            if(str1!=null && str1.equals("")==false)
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Error!\nUpdation for selected date is not possible.", "Error Message",javax.swing.JOptionPane.ERROR_MESSAGE);
                return false;
            }

            qry="delete from dc_chq_details where dp_code="+dpCode+" and receiving_date='"+setDate+"' and chq_no='"+selectedChqNo+"'";
            System.out.println(qry);
            boolean response=object1.saveInformation(qry, Main.year);
            if(response==true)
            {
                qry="select cash_amt from dc_cash_in_hand where rec_date='"+setDate+"'";
                String str=object1.getSigetngleValue(qry, Main.year);
                if(str!=null && str.equals("")==false)
                {
                    java.math.BigDecimal bd=new java.math.BigDecimal(str);
                    //bd=bd.add(new java.math.BigDecimal(jTextField2.getText().trim()));
                    bd=bd.subtract(new java.math.BigDecimal(selectedChqAmt));
                    qry="update dc_cash_in_hand set cash_amt="+bd+" where rec_date='"+setDate+"'";
                    System.out.println(qry);
                    response=object1.saveInformation(qry, Main.year);
                }
            }
            if(response==true)
            {
                setChequeDetails();
                javax.swing.JOptionPane.showMessageDialog(this, "Ok!\nCheque details updated successfully.", "Message",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                jTextField1.setText("");
                jTextField2.setText("");
                jComboBox1.requestFocus();
            }
            else
            {
                javax.swing.JOptionPane.showMessageDialog(this, "Error!\nSome problem found.", "Error Message",javax.swing.JOptionPane.ERROR_MESSAGE);
            }

        }
        catch(Exception ex)
        {
            javax.swing.JOptionPane.showMessageDialog(this, "Error no 891..."+ex);
        }
        return true;
    }
*/
    private void setChequeDetails()
    {
        //set last entry date
        try
        {
             interfaceRailway object1=null;
             try
	     {
		object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
	     }
	     catch(Exception e)
             {
                getIPaddress.changeIP();
                try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception ex)
		{
			System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
		}
             }

             String str=jLabel10.getText();
             String arr22[]=str.split("-");
             String setDateFrom=arr22[2]+"-"+arr22[1]+"-"+arr22[0];
             //java.util.Date dtFrom=new java.util.Date(Integer.parseInt(arr22[2])-1900, Integer.parseInt(arr22[1])-1, Integer.parseInt(arr22[0]));
             long dtFromLong=java.util.Date.parse(arr22[1]+"/"+arr22[0]+"/"+arr22[2]);

             str=jLabel9.getText();
             String arr[]=str.split("-");
             String setDate=arr[2]+"-"+arr[1]+"-"+arr[0];
             long dtToLong=java.util.Date.parse(arr[1]+"/"+arr[0]+"/"+arr[2]);

             String dpCodeStr="";
             String qry="";
             int dpCode=-1;
             if(jComboBox1.getSelectedIndex()!=0)
             {
                qry="select dp_code from department_detail where dp_name='"+jComboBox1.getSelectedItem()+"'";
                dpCodeStr=object1.getSigetngleValue(qry, Main.year);
                dpCode = Integer.parseInt(dpCodeStr);
             }

             dtm.setRowCount(0);
             
             java.math.BigDecimal recAmtBd=new java.math.BigDecimal("0.00");
             java.math.BigDecimal disAmtBd=new java.math.BigDecimal("0.00");
             java.math.BigDecimal balAmtBd=new java.math.BigDecimal("0.00");

             if(dpCode==-1)
                 qry="select sum(chq_amt) from dc_chq_details where receiving_date<'"+setDateFrom+"'  order by receiving_date desc";
             else
                 qry="select sum(chq_amt) from dc_chq_details where receiving_date<'"+setDateFrom+"' and dp_code="+dpCode+" order by receiving_date desc";

             String value1=object1.getSigetngleValue(qry, Main.year);
             try
                 {
                     value1=""+(new java.math.BigDecimal(value1)).setScale(2,5);//
                 }
                 catch(Exception ex)
                 {
                     value1="0.00";
                 }
             if(dpCode==-1)
                qry="select sum(received_amount) from received_cash_detail where edate<'"+setDateFrom+"'  order by edate desc";
             else
                qry="select sum(received_amount) from received_cash_detail where edate<'"+setDateFrom+"' and dp_code="+dpCode+" order by edate desc";

             String value2=object1.getSigetngleValue(qry, Main.year);
             try
                 {
                     value2=""+(new java.math.BigDecimal(value2)).setScale(2,5);//
                 }
                 catch(Exception ex)
                 {
                     value2="0.00";
                 }
          String opening=""+((new java.math.BigDecimal(value1)).subtract(new java.math.BigDecimal(value2)));

          while(dtFromLong<=dtToLong)
          {
              java.util.Date dtFrom=new java.util.Date(dtFromLong);
              setDate=(dtFrom.getYear()+1900)+"-"+(dtFrom.getMonth()+1)+"-"+dtFrom.getDate();

             if(dpCode==-1)                 
                qry="select * from dc_chq_details where receiving_date='"+setDate+"' order by receiving_date";
             else
                qry="select * from dc_chq_details where receiving_date='"+setDate+"' and dp_code="+dpCode+" order by receiving_date";

             //System.out.println(qry);
             String data[][]=object1.getInformationDD(qry, 4, Main.year);

             //int i=0;
             if(data.length!=0)
             {
                 //System.out.println("inside if..."+data.length);

             for(int i=0;i<data.length;i++)
             {
                 String rowArr[]=new String[7];
                 rowArr[0]=""+(dtm.getRowCount()+1)+". ";
                 rowArr[1]=dtFrom.getDate()+"-"+(dtFrom.getMonth()+1)+"-"+(dtFrom.getYear()+1900);//date
                 rowArr[2]=opening;//opening amt
                 try
                 {
                     rowArr[3]=data[i][2];//cheque no.
                     rowArr[4]=""+(new java.math.BigDecimal(data[i][3])).setScale(2,5);//received amt.
                 }
                 catch(Exception ex)
                 {
                     rowArr[3]="";
                     rowArr[4]="0.00";
                 }
                 //System.out.println("ok1");
                 //get distributed amt.
                 if(dpCode==-1)                 
                    qry="select sum(received_amount) from received_cash_detail where edate='"+setDate+"'";
                 else
                    qry="select sum(received_amount) from received_cash_detail where edate='"+setDate+"' and dp_code="+dpCode+"";

                 //System.out.println("ok2-"+qry);
                 String data1=object1.getSigetngleValue(qry,Main.year);
                 try
                 {
                     rowArr[5]=""+(new java.math.BigDecimal(data1)).setScale(2,5);
                 }
                 catch(Exception ex)
                 {
                     rowArr[5]="0.00";
                 }
                 //System.out.println("ok3-"+rowArr[5]);
                 //get balance amt.
                 rowArr[6]=""+((new java.math.BigDecimal(rowArr[2])).setScale(2,5).add(new java.math.BigDecimal(rowArr[4])).setScale(2,5)).subtract((new java.math.BigDecimal(rowArr[5])).setScale(2,5)).setScale(2, 5);
                 dtm.addRow(rowArr);
                 opening=rowArr[6];
                 recAmtBd=recAmtBd.add(new java.math.BigDecimal(rowArr[4]));
                 disAmtBd=disAmtBd.add(new java.math.BigDecimal(rowArr[5]));
                 balAmtBd=(new java.math.BigDecimal(rowArr[6]));
                 }
                 dtFromLong=dtFromLong+86400000;

              }
              else
             {
                 //System.out.println("inside else...");
                 int i=0;
                 String rowArr[]=new String[7];
                 rowArr[0]=""+(dtm.getRowCount()+1)+". ";
                 rowArr[1]=dtFrom.getDate()+"-"+(dtFrom.getMonth()+1)+"-"+(dtFrom.getYear()+1900);//date
                 rowArr[2]=opening;//opening amt
                 rowArr[3]="0.00";
                 rowArr[4]="0.00";
                 rowArr[5]="0.00";
                 rowArr[6]=opening;
                 dtm.addRow(rowArr);
                 dtFromLong=dtFromLong+86400000;
             }
         }
             jLabel1.setText(""+recAmtBd.setScale(2, 5));
             jLabel2.setText(""+disAmtBd.setScale(2, 5));
             jLabel3.setText(""+balAmtBd.setScale(2, 5));
             /*try
             {
             qry="select cash_amt from dc_cash_in_hand where rec_date<'"+setDate+"' order by rec_date desc";
             String str2[]=object1.getResultSetAs_1D_Array(qry, Main.year);
             jLabel1.setText(""+(new java.math.BigDecimal(str2[0])).setScale(2, 5));
             }
             catch(Exception ex)
             {
                 jLabel1.setText("0.00");
             }

             try
             {
             qry="select cash_amt from dc_cash_in_hand where rec_date='"+setDate+"'";
             String str1=object1.getSigetngleValue(qry, Main.year);
             jLabel3.setText(""+(new java.math.BigDecimal(str1)).setScale(2, 5));
             }
             catch(Exception ex)
             {
                 jLabel3.setText(jLabel1.getText());
             }
              *
              */


        }
        catch(Exception ex)
        {
            System.out.println("Error...627..."+ex);
            //javax.swing.JOptionPane.showMessageDialog(this, "Error 627..."+ex);
        }

    }
}
