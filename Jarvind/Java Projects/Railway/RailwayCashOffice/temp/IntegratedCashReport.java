/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IntegratedCashReport.java
 *
 * Created on May 14, 2012, 1:08:24 PM
 */

package railwaycashoffice;

import java.math.BigInteger;
import java.io.*;

/**
 *
 * @author Shweta
 */
public class IntegratedCashReport extends javax.swing.JInternalFrame {

    /** Creates new form IntegratedCashReport */
    public IntegratedCashReport() {
        initComponents();
        java.util.Date dt=new java.util.Date();
        int date=dt.getDate();
        int month=dt.getMonth()+1;
        int year=dt.getYear()+1900;
        String setDate=date+"-"+month+"-"+year;
        jLabel2.setText(setDate);
        jProgressBar1.setVisible(false);
        jProgressBar2.setVisible(false);

        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        javax.swing.table.DefaultTableCellRenderer CRLeft=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRRight=new javax.swing.table.DefaultTableCellRenderer();
        javax.swing.table.DefaultTableCellRenderer CRCenter=new javax.swing.table.DefaultTableCellRenderer();

        CRLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        CRRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        CRCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        String head[]={"Sr.No.","Cashier No.","Purpose","Sign","Amount"};
        dtm=new javax.swing.table.DefaultTableModel(head,0);
        jTable1.setModel(dtm);

        javax.swing.table.TableColumn column;

        column=jTable1.getColumn("Sr.No.");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(60);

        column=jTable1.getColumn("Cashier No.");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(80);

        column=jTable1.getColumn("Purpose");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(150);

        column=jTable1.getColumn("Sign");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(50);

        column=jTable1.getColumn("Amount");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(180);




        jTable2.setAutoResizeMode(jTable2.AUTO_RESIZE_OFF);
        String head1[]={"Sr.No.","Cashier No.","Dues Retained","Bill Accounts"};
        dtm1=new javax.swing.table.DefaultTableModel(head1,0);
        jTable2.setModel(dtm1);

        //javax.swing.table.TableColumn column;

        column=jTable2.getColumn("Sr.No.");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(60);

        column=jTable2.getColumn("Cashier No.");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(80);

        column=jTable2.getColumn("Dues Retained");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(200);

        column=jTable2.getColumn("Bill Accounts");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(200);



       /* jTable3.setAutoResizeMode(jTable3.AUTO_RESIZE_OFF);
        String head2[]={"Assets","Amount"};
        dtm2=new javax.swing.table.DefaultTableModel(head2,0);
        jTable3.setModel(dtm2);
        
        column=jTable3.getColumn("Assets");
        column.setCellRenderer(CRLeft);
        column.setPreferredWidth(100);
        column=jTable3.getColumn("Amount");
        column.setCellRenderer(CRRight);
        column.setPreferredWidth(100);*/

        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        
        jTextField4.setText("");
        jTextField6.setText("");
        jTextField8.setText("");
        jTextField10.setText("");
        jTextField12.setText("");


        jTextField5.setText("0.00");
        jTextField7.setText("0.00");
        jTextField9.setText("0.00");
        jTextField11.setText("0.00");
        jTextField13.setText("0.00");


        loadInitialInfo();
         calculateAmount();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jProgressBar1 = new javax.swing.JProgressBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jProgressBar2 = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Integrated Cash Report");
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(51, 153, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Date");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 30, 80, 25);

        jLabel2.setBackground(new java.awt.Color(204, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("jLabel2");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(110, 30, 240, 25);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/railwaycashoffice/images/calendar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(350, 30, 30, 25);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("Select Department");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(400, 30, 160, 25);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setToolTipText("Please select department");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(580, 30, 310, 25);

        jPanel1.setBackground(new java.awt.Color(187, 181, 143));
        jPanel1.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 40, 530, 170);
        jPanel1.add(jProgressBar1);
        jProgressBar1.setBounds(20, 210, 530, 10);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 260, 530, 180);
        jPanel1.add(jProgressBar2);
        jProgressBar2.setBounds(20, 440, 530, 10);

        jLabel4.setBackground(new java.awt.Color(109, 157, 157));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("0");
        jLabel4.setOpaque(true);
        jPanel1.add(jLabel4);
        jLabel4.setBounds(420, 450, 130, 20);

        jLabel5.setBackground(new java.awt.Color(242, 210, 168));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Total Bill Amount (in Rs.)");
        jLabel5.setOpaque(true);
        jPanel1.add(jLabel5);
        jLabel5.setBounds(290, 450, 130, 20);

        jLabel6.setBackground(new java.awt.Color(94, 138, 138));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("0");
        jLabel6.setOpaque(true);
        jPanel1.add(jLabel6);
        jLabel6.setBounds(160, 450, 130, 20);

        jLabel7.setBackground(new java.awt.Color(242, 210, 168));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Total Due Amount(int Rs.)");
        jLabel7.setOpaque(true);
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 450, 140, 20);

        jLabel11.setBackground(new java.awt.Color(255, 255, 204));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setText("Due Amount Calculation  :-");
        jLabel11.setOpaque(true);
        jPanel1.add(jLabel11);
        jLabel11.setBounds(20, 20, 240, 20);

        jLabel12.setBackground(new java.awt.Color(255, 255, 204));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel12.setText("Assets & Liabilities  :-");
        jLabel12.setOpaque(true);
        jPanel1.add(jLabel12);
        jLabel12.setBounds(20, 240, 240, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(30, 110, 570, 490);

        jButton2.setMnemonic('S');
        jButton2.setText("Show");
        jButton2.setToolTipText("Show Record");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(30, 70, 260, 30);

        jButton3.setMnemonic('C');
        jButton3.setText("Close");
        jButton3.setToolTipText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(630, 70, 260, 30);

        jPanel2.setBackground(new java.awt.Color(164, 135, 113));
        jPanel2.setLayout(null);

        jLabel8.setBackground(new java.awt.Color(204, 204, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("0");
        jLabel8.setOpaque(true);
        jPanel2.add(jLabel8);
        jLabel8.setBounds(10, 410, 260, 25);

        jLabel9.setBackground(new java.awt.Color(255, 255, 204));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel9.setText("Total Amount(in Rs.)  :-");
        jLabel9.setOpaque(true);
        jPanel2.add(jLabel9);
        jLabel9.setBounds(10, 390, 260, 20);

        jLabel10.setBackground(new java.awt.Color(255, 255, 204));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setText("Assets :-");
        jLabel10.setOpaque(true);
        jPanel2.add(jLabel10);
        jLabel10.setBounds(10, 10, 260, 20);

        jLabel13.setBackground(new java.awt.Color(204, 204, 204));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("FC/DFM/Mqs");
        jLabel13.setOpaque(true);
        jPanel2.add(jLabel13);
        jLabel13.setBounds(10, 40, 120, 25);

        jLabel14.setBackground(new java.awt.Color(204, 204, 204));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("FC/DFM/DNR");
        jLabel14.setOpaque(true);
        jPanel2.add(jLabel14);
        jLabel14.setBounds(10, 70, 120, 25);

        jLabel15.setBackground(new java.awt.Color(204, 204, 204));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("SF/DFM/Mqs");
        jLabel15.setOpaque(true);
        jPanel2.add(jLabel15);
        jLabel15.setBounds(10, 100, 120, 25);

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("jTextField1");
        jPanel2.add(jTextField1);
        jTextField1.setBounds(130, 40, 140, 25);

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("jTextField2");
        jPanel2.add(jTextField2);
        jTextField2.setBounds(130, 70, 140, 25);

        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField3.setText("jTextField3");
        jPanel2.add(jTextField3);
        jTextField3.setBounds(130, 100, 140, 25);

        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField4.setText("jTextField4");
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField4);
        jTextField4.setBounds(10, 150, 120, 25);

        jTextField5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("jTextField5");
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });
        jPanel2.add(jTextField5);
        jTextField5.setBounds(130, 150, 140, 25);

        jTextField6.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField6.setText("jTextField6");
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6KeyPressed(evt);
            }
        });
        jPanel2.add(jTextField6);
        jTextField6.setBounds(10, 200, 120, 25);

        jTextField7.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField7.setText("jTextField7");
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField7KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField7KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField7);
        jTextField7.setBounds(130, 200, 140, 25);

        jTextField8.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField8.setText("jTextField8");
        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField8KeyPressed(evt);
            }
        });
        jPanel2.add(jTextField8);
        jTextField8.setBounds(10, 250, 120, 25);

        jTextField9.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField9.setText("jTextField9");
        jTextField9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField9KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField9KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField9);
        jTextField9.setBounds(130, 250, 140, 25);

        jTextField10.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField10.setText("jTextField10");
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });
        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField10KeyPressed(evt);
            }
        });
        jPanel2.add(jTextField10);
        jTextField10.setBounds(10, 300, 120, 25);

        jTextField11.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField11.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField11.setText("jTextField11");
        jTextField11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField11KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField11KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField11);
        jTextField11.setBounds(130, 300, 140, 25);

        jTextField12.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField12.setText("jTextField12");
        jTextField12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField12KeyPressed(evt);
            }
        });
        jPanel2.add(jTextField12);
        jTextField12.setBounds(10, 350, 120, 25);

        jTextField13.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTextField13.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField13.setText("jTextField13");
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });
        jTextField13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField13KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField13);
        jTextField13.setBounds(130, 350, 140, 25);

        jButton4.setMnemonic('S');
        jButton4.setText("Save");
        jButton4.setToolTipText("Save Information");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(10, 450, 260, 30);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(610, 110, 280, 490);

        jButton5.setMnemonic('P');
        jButton5.setText("Print");
        jButton5.setToolTipText("Print Information");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(330, 70, 260, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Cal date=new Cal();
        jLabel2.setText(date.getdate());
        jComboBox1.requestFocus();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        uploadDetail();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jButton2.requestFocus();
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField5.requestFocus();
        }
    }//GEN-LAST:event_jTextField4KeyPressed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField6.requestFocus();
        }
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField7.requestFocus();
        }
    }//GEN-LAST:event_jTextField6KeyPressed

    private void jTextField7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField8.requestFocus();
        }
    }//GEN-LAST:event_jTextField7KeyPressed

    private void jTextField8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField9.requestFocus();
        }
    }//GEN-LAST:event_jTextField8KeyPressed

    private void jTextField9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField10.requestFocus();
        }
    }//GEN-LAST:event_jTextField9KeyPressed

    private void jTextField10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField11.requestFocus();
        }
    }//GEN-LAST:event_jTextField10KeyPressed

    private void jTextField11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField12.requestFocus();
        }
    }//GEN-LAST:event_jTextField11KeyPressed

    private void jTextField12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
            jTextField13.requestFocus();
        }
    }//GEN-LAST:event_jTextField12KeyPressed

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Save();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4KeyReleased

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        // TODO add your handling code here:
            calculateAmount();
            if(evt.getKeyChar()=='d' || evt.getKeyChar()=='f')
            {
                int temp=jTextField5.getText().indexOf("d");
                //System.out.println("temp.111........"+temp);
                if(temp!=-1)
                {
                    String str[]=jTextField5.getText().split("d");
                    if(str!=null && str.length>0)
                    jTextField5.setText(str[0]);
                    jTextField5.selectAll();
                    //  System.out.println("temp.inside........"+temp);

                }
                if(temp==-1)
                {
                    temp=jTextField5.getText().indexOf("f");
                  //  System.out.println("temp.222........"+temp);
                }
                if(temp!=-1)
                {
                    String str[]=jTextField5.getText().split("f");
                    if(str!=null && str.length>0)
                    jTextField5.setText(str[0]);
                    jTextField5.selectAll();
                }
            }
     
    }//GEN-LAST:event_jTextField5KeyReleased

    private void jTextField7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyReleased
        // TODO add your handling code here:
    
        calculateAmount();
         if(evt.getKeyChar()=='d' || evt.getKeyChar()=='f')
            {
                int temp=jTextField7.getText().indexOf("d");
                if(temp!=-1)
                {
                    String str[]=jTextField7.getText().split("d");
                    if(str!=null && str.length>0)
                    jTextField7.setText(str[0]);
                    jTextField7.selectAll();
                }
                if(temp==-1)
                {
                    temp=jTextField7.getText().indexOf("f");
                }
                if(temp!=-1)
                {
                    String str[]=jTextField7.getText().split("f");
                    if(str!=null && str.length>0)
                    jTextField7.setText(str[0]);
                    jTextField7.selectAll();
                }
            }
    }//GEN-LAST:event_jTextField7KeyReleased

    private void jTextField9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyReleased
        // TODO add your handling code here:
      
        calculateAmount();
         if(evt.getKeyChar()=='d' || evt.getKeyChar()=='f')
            {
                int temp=jTextField9.getText().indexOf("d");
                if(temp!=-1)
                {
                    String str[]=jTextField9.getText().split("d");
                    if(str!=null && str.length>0)
                    jTextField9.setText(str[0]);
                    jTextField9.selectAll();

                }
                if(temp==-1)
                {
                    temp=jTextField9.getText().indexOf("f");
                }
                if(temp!=-1)
                {
                    String str[]=jTextField9.getText().split("f");
                    if(str!=null && str.length>0)
                    jTextField9.setText(str[0]);
                    jTextField9.selectAll();
                }
            }
    }//GEN-LAST:event_jTextField9KeyReleased

    private void jTextField11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyReleased
        // TODO add your handling code here:
    
        calculateAmount();
         if(evt.getKeyChar()=='d' || evt.getKeyChar()=='f')
            {
                int temp=jTextField11.getText().indexOf("d");
                if(temp!=-1)
                {
                    String str[]=jTextField11.getText().split("d");
                    if(str!=null && str.length>0)
                    jTextField11.setText(str[0]);
                    jTextField11.selectAll();

                }
                if(temp==-1)
                {
                    temp=jTextField11.getText().indexOf("f");
                }
                if(temp!=-1)
                {
                    String str[]=jTextField11.getText().split("f");
                    if(str!=null && str.length>0)
                    jTextField11.setText(str[0]);
                    jTextField11.selectAll();
                }
            }

    }//GEN-LAST:event_jTextField11KeyReleased

    private void jTextField13KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13KeyReleased
        // TODO add your handling code here:
   
        calculateAmount();
         if(evt.getKeyChar()=='d' || evt.getKeyChar()=='f')
            {
                int temp=jTextField13.getText().indexOf("d");
                if(temp!=-1)
                {
                    String str[]=jTextField13.getText().split("d");
                    if(str!=null && str.length>0)
                    jTextField13.setText(str[0]);
                    jTextField13.selectAll();

                }
                if(temp==-1)
                {
                    temp=jTextField13.getText().indexOf("f");
                }
                if(temp!=-1)
                {
                    String str[]=jTextField13.getText().split("f");
                    if(str!=null && str.length>0)
                    jTextField13.setText(str[0]);
                    jTextField13.selectAll();
                }
            }
    
    }//GEN-LAST:event_jTextField13KeyReleased

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        uploadLastDetail();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        {
             jComboBox1.requestFocus();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
       new printReport();
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
javax.swing.table.DefaultTableModel dtm;
javax.swing.table.DefaultTableModel dtm1;
javax.swing.table.DefaultTableModel dtm2;
double amt=0.0;
String LieuAmt="0.00";
private void loadInitialInfo()
{
    try
    {
       // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}

        String qry="Select dp_name from department_detail order by dp_code";
        String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(load!=null)
        {
            jComboBox1.removeAllItems();
            for(int i=0;i<load.length;i++)
            {
                jComboBox1.addItem(load[i]);
            }
        }
        qry="Select amount from fixedassets order by asset";
        load=object1.getResultSetAs_1D_Array(qry,Main.year);
        if(load!=null)
        {
           jTextField1.setText(load[0]);
           jTextField2.setText(load[1]);
           jTextField3.setText(load[2]);
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In loadInitialInfo Method."+e);
    }

}
/*private void uploadDetail()
{
    dtm.setRowCount(0);
    dtm1.setRowCount(0);
    jLabel4.setText("0.00");
    jLabel6.setText("0.00");
    
    try
    {
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select dp_code from department_detail where dp_name='"+(""+jComboBox1.getSelectedItem())+"'";
        String getDpCode=object1.getSigetngleValue(qry,Main.year);

        qry="Select cashier_code from cashier_detail order by cashier_number asc";
        String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);

        String getStr[]=jLabel2.getText().split("-");
        String setDate1=getStr[2]+"-"+getStr[1]+"-"+getStr[0];

        if(getDpCode.length()>0)
        {
            String arr[]=new String[5];
            int ind=0,index=0;
            String getCurrentAmt[]=null;
            String getChequeAmt[]=null;
            String receivedAmt[]=null;


            double tot=0.0,dueamt=0.0;
            jProgressBar1.setVisible(true);
            jProgressBar1.setMaximum(load.length);
            jProgressBar1.setMinimum(0);
            jProgressBar1.setValue(0);

            for(int i=0;i<=load.length-1;i++)
            {
                 //String getCurrentAmt="",getChequeAmt="",receivedAmt="";
                qry="select cashier_number from cashier_detail where cashier_code="+Integer.parseInt(load[i]);
                String getCashierNo=object1.getSigetngleValue(qry,Main.year);
               // System.out.println("load[]"+load[i]);
                qry="select cashier_code from build_distribution where cashier_code ="+Integer.parseInt(load[i])+" and edate='"+setDate1+"' and dp_Code="+Integer.parseInt(getDpCode)+"";
                //System.out.println("qry....."+qry);
                //javax.swing.JOptionPane.showMessageDialog(this,qry);
                String getCode=object1.getSigetngleValue(qry,Main.year);
                //System.out.println("getCode[0].length...."+getCode.length());
                if(getCode.length()==0)
                {
                    index=1;
              //      System.out.println("index."+index);
                }
                else if(getCode.length()>0)
                {
                    index=4;
               //     System.out.println("index."+index);
                }
                if(index==1)
                {
                    System.out.println("come here........");
                        arr[0]=""+(++ind);
                        arr[1]=getCashierNo;
                        arr[2]="  ";
                        arr[3]="  ";
                        arr[4]="  ";
                        dtm.addRow(arr);
                        
                }
                else if(index>1)
                {
                    System.out.println("come here..more then one time......");

                     for(int j=0;j<=4;j++)
                    {
                    //javax.swing.JOptionPane.showMessageDialog(null,"j.111......"+j);
                    if(j==0)
                    {
                        arr[0]=""+(++ind);
                        arr[1]=getCashierNo;
                    }
                    else
                    {
                        arr[0]="  ";
                        arr[1]="  ";
                    }
                    //if(j==0 && index>1)
                    if(j==0)
                    {
                        arr[2]="Last due amount";
                        arr[3]="+";
                        dueamt=dueAmount(load[i],getDpCode);
                        //System.out.println("dueamt.........."+dueamt);
                        arr[4]=(""+new java.math.BigDecimal(dueamt).setScale(2,5));
                    }
                    /*else if(j==0 && index == 1)
                    {
                        javax.swing.JOptionPane.showMessageDialog(this,"Coming here.44..");
                        arr[2]="  ";
                        arr[3]="  ";
                        arr[4]="  ";
                    }*/
                    //if(j==1 && index==1)
                    /*if(j==1)
                    {
                        javax.swing.JOptionPane.showMessageDialog(this,"Coming here.55..");
                        arr[2]="  ";
                        arr[3]="  ";
                        arr[4]="  ";
                    }////////////////
                    //if(j==1 && index>1)
                    if(j==1)
                    {
                      /*  System.out.println("current "+getCurrentAmt[0]+"length...."+getCurrentAmt[0].length());
                        System.out.println("cheque "+getChequeAmt[0]+"length...."+getChequeAmt[0].length());
                        System.out.println("received "+receivedAmt[0]+"length...."+receivedAmt[0].length());///////////////////

                        arr[2]="Current amount";
                        arr[3]="+";
                        qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and (dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"')";
                  //      System.out.println("qry...sum of.tot.........."+qry);
                        getCurrentAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
            //            getCurrentAmt=object1.getSigetngleValue(qry,Main.year);
                       
                      // System.out.println("len..........."+getCurrentAmt[0].length());
                        //if(getCurrentAmt!=null)
                         if(getCurrentAmt[0].length()>0)
                        {
                           arr[4]=(""+new java.math.BigDecimal(Double.valueOf(getCurrentAmt[0])).setScale(2,5));
                          //   arr[4]=(""+new java.math.BigDecimal(Double.valueOf(getCurrentAmt)).setScale(2,5));
                      //     System.out.println("qry...sum of.tot.........."+arr[4]);
                        }
                        else
                           arr[4]="0.00";
                    }
                    //if(j==2 && index>1)
                    if(j==2)
                    {
                        qry="Select distinct(bill_Code) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"'";
                        String getBillCode[]=object1.getResultSetAs_1D_Array(qry, Main.year);
                        if(getBillCode!=null)
                        {
                            for(int x=0;x<getBillCode.length;x++)
                            {
                                qry="Select sum(chq_amt) from cheque_details where bill_Code="+Integer.parseInt(getBillCode[x]);
                                getChequeAmt=object1.getResultSetAs_1D_Array(qry,Main.year);

                            }
                        }

                        arr[2]="Cheque amount";
                        arr[3]="-";
                        //qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and dp_code="+Integer.parseInt(getDpCode)+" and  amounttype='"+"Cheque"+"' and edate='"+setDate1+"'";
                      //  System.out.println("qry...sum of..........."+qry);
                       // getChequeAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
                       //  getChequeAmt=object1.getSigetngleValue(qry,Main.year);
                        
                        // if(getChequeAmt!=null)
                        if(getChequeAmt[0]!=null)
                        {
                           arr[4]=(""+new java.math.BigDecimal(Double.valueOf(getChequeAmt[0])).setScale(2,5));
                      //          arr[4]=(""+new java.math.BigDecimal(Double.valueOf(getChequeAmt)).setScale(2,5));
                       //    System.out.println("qry...sum of.tot.cheque........."+arr[4]);
                        }
                        else
                           arr[4]="0.00";
                    }
                    //if(j==3 && index>1)
                    if(j==3)
                    {
                        arr[2]="Total received amount";
                        arr[3]="-";
                        qry="Select sum(received_amount) from received_cash_detail where cashier_code="+Integer.parseInt(load[i])+"";
                        receivedAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
                        // receivedAmt=object1.getSigetngleValue(qry,Main.year);
                        
                        // if(receivedAmt!=null)// || receivedAmt.length>0)
                        if(receivedAmt[0]!=null)// || receivedAmt.length>0)
                        {
                           arr[4]=(""+new java.math.BigDecimal(Double.valueOf(receivedAmt[0])).setScale(2,5));
                          //    arr[4]=(""+new java.math.BigDecimal(Double.valueOf(receivedAmt)).setScale(2,5));
                        }
                        else
                           arr[4]="0.00";
                    }
                    //if(j==4 && index>1)
                    if(j==4)
                    {
                        double currentAmt=0.0,dueamount=0.0,duetot=0.0,chequeamt=0.0,receiveAmt=0.0;
                        arr[2]="TOTAL AMOUNT";
                        arr[3]="  ";
                        
                        //if(getCurrentAmt!=null && getChequeAmt!=null && receivedAmt!=null)
                        if(getCurrentAmt[0]!=null)
                        {
                            currentAmt=Double.valueOf(getCurrentAmt[0]);
                            dueamount=currentAmt+Double.valueOf(dueamt);
                        }
                        if(getChequeAmt[0]!=null)
                        {
                           // dueamount=currentAmt-Double.valueOf(getChequeAmt[0]);
                            chequeamt=Double.valueOf(getChequeAmt[0]);
                        }
                        else
                        {
                            chequeamt=0.0;
                        }

                        if(receivedAmt[0]!=null)
                        {
                            receiveAmt=Double.valueOf(receivedAmt[0]);
                            receiveAmt=receiveAmt+chequeamt;
                        }
                        else if(getChequeAmt[0]!=null)
                        {
                            receiveAmt=chequeamt;
                        }
                        if(dueamount>=receiveAmt)
                                tot=dueamount-receiveAmt;
                        else
                                tot=dueamount;
                      //  System.out.println("tot 33333...."+tot);
                        if(tot!=0.0)
                            arr[4]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                        else
                            arr[4]="0.00" ;
                       /* if(getCurrentAmt[0]!=null && getChequeAmt[0]!=null && receivedAmt[0]!=null)
                        {
                            double CurrentAmount=Double.valueOf(getCurrentAmt[0])-Double.valueOf(getChequeAmt[0]);
                            System.out.println("CurrentAmount............"+CurrentAmount);
                            double dueAmt=CurrentAmount+Double.valueOf(dueamt);
                            System.out.println("dueAmt............"+dueAmt);
                            double receiveAmt=Double.valueOf(receivedAmt[0]);
                            System.out.println("receiveAmt.........."+receiveAmt);
                            if(receiveAmt>=dueAmt)
                                tot=receiveAmt-dueAmt;
                            else
                                tot=dueAmt;
                            System.out.println("tot..........."+tot);
                          //  tot=((Double.valueOf(dueamt) + Double.valueOf(getCurrentAmt))-Double.valueOf(getChequeAmt))-Double.valueOf(receivedAmt);
                          arr[4]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                        }
                        else
                          arr[4]="0.00";////
                    }
                    dtm.addRow(arr);

                }

                }
               
                jProgressBar1.setValue(i+1);
                
             //jLabel11.setText(""+new java.math.BigDecimal(totalDueAmt).setScale(3,java.math.BigDecimal.ROUND_HALF_UP));
          }
        }

        loadDueAmount lD=new loadDueAmount();
        lD.start();
    }
    catch(Exception e)
    {
        System.out.println("Error ! In uploadDetail Method."+e);
    }

}*/
private void uploadDetail()
{
    dtm.setRowCount(0);
    dtm1.setRowCount(0);
    jLabel4.setText("0.00");
    jLabel6.setText("0.00");

    try
    {
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select dp_code from department_detail where dp_name='"+(""+jComboBox1.getSelectedItem())+"'";
        String getDpCode=object1.getSigetngleValue(qry,Main.year);

        qry="Select cashier_code from cashier_detail order by cashier_number asc";
        String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);

        String getStr[]=jLabel2.getText().split("-");
        String setDate1=getStr[2]+"-"+getStr[1]+"-"+getStr[0];

        if(getDpCode.length()>0)
        {
            String arr[]=new String[5];
            int ind=0,index=0;
            String getCurrentAmt[]=null;
            String getChequeAmt[]=null;
            String receivedAmt[]=null;

  
            double tot=0.0,dueamt=0.0;
            jProgressBar1.setVisible(true);
            jProgressBar1.setMaximum(load.length);
            jProgressBar1.setMinimum(0);
            jProgressBar1.setValue(0);

            for(int i=0;i<=load.length-1;i++)
            {
                double totalChequeAmt=0.00;
                 //String getCurrentAmt="",getChequeAmt="",receivedAmt="";
                qry="select cashier_number from cashier_detail where cashier_code="+Integer.parseInt(load[i]);
                String getCashierNo=object1.getSigetngleValue(qry,Main.year);
               // System.out.println("load[]"+load[i]);
                qry="select cashier_code from build_distribution where cashier_code ="+Integer.parseInt(load[i])+" and edate='"+setDate1+"' and dp_Code="+Integer.parseInt(getDpCode)+"";
                //System.out.println("qry....."+qry);
                //javax.swing.JOptionPane.showMessageDialog(this,qry);
                String getCode=object1.getSigetngleValue(qry,Main.year);
                //System.out.println("getCode[0].length...."+getCode.length());
               /* if(getCode.length()==0)
                {
                    index=1;
              //      System.out.println("index."+index);
                }
                else if(getCode.length()>0)
                {
                    index=4;
               //     System.out.println("index."+index);
                }*/
               /* if(index==1)
                {
                    System.out.println("come here........");
                        arr[0]=""+(++ind);
                        arr[1]=getCashierNo;
                        arr[2]="  ";
                        arr[3]="  ";
                        arr[4]="  ";
                        dtm.addRow(arr);

                }*/
              /*  if(index>1)
                {*/
                    System.out.println("come here..more then one time......");

                     for(int j=0;j<=4;j++)
                    {
                    //javax.swing.JOptionPane.showMessageDialog(null,"j.111......"+j);
                    if(j==0)
                    {
                        arr[0]=""+(++ind);
                        arr[1]=getCashierNo;
                    }
                    else
                    {
                        arr[0]="  ";
                        arr[1]="  ";
                    }
                    //if(j==0 && index>1)
                    if(j==0)
                    {
                        arr[2]="Last due amount";
                        arr[3]="+";
                        dueamt=dueAmount(load[i],getDpCode);
                        System.out.println("dueamt....in upload method......"+dueamt);
                        arr[4]=(""+new java.math.BigDecimal(dueamt).setScale(2,5));
                    }
                    /*else if(j==0 && index == 1)
                    {
                        javax.swing.JOptionPane.showMessageDialog(this,"Coming here.44..");
                        arr[2]="  ";
                        arr[3]="  ";
                        arr[4]="  ";
                    }*/
                    //if(j==1 && index==1)
                    /*if(j==1)
                    {
                        javax.swing.JOptionPane.showMessageDialog(this,"Coming here.55..");
                        arr[2]="  ";
                        arr[3]="  ";
                        arr[4]="  ";
                    }*/
                    //if(j==1 && index>1)
                    if(j==1)
                    {
                      /*  System.out.println("current "+getCurrentAmt[0]+"length...."+getCurrentAmt[0].length());
                        System.out.println("cheque "+getChequeAmt[0]+"length...."+getChequeAmt[0].length());
                        System.out.println("received "+receivedAmt[0]+"length...."+receivedAmt[0].length());*/

                        arr[2]="Current amount";
                        arr[3]="+";
                        //qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and (dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"')";
                        qry="select sum(mix_amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and (dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"')";
                  //      System.out.println("qry...sum of.tot.........."+qry);
                        getCurrentAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
            //            getCurrentAmt=object1.getSigetngleValue(qry,Main.year);

                       System.out.println("len..........."+getCurrentAmt[0]);
                        //if(getCurrentAmt!=null)
                        // if(getCurrentAmt[0].length()>0)
                        if(getCurrentAmt[0]!=null)
                        {
                           arr[4]=(""+new java.math.BigDecimal(Double.valueOf(getCurrentAmt[0])).setScale(2,5));
                          //   arr[4]=(""+new java.math.BigDecimal(Double.valueOf(getCurrentAmt)).setScale(2,5));
                      //     System.out.println("qry...sum of.tot.........."+arr[4]);
                        }
                        else
                           arr[4]="0.00";
                    }
                    //if(j==2 && index>1)
                  
                    if(j==2)
                    {
                        qry="Select distinct(bill_Code) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"'";
                        String getBillCode[]=object1.getResultSetAs_1D_Array(qry, Main.year);
                        if(getBillCode!=null)
                        {
                            for(int k=0;k<getBillCode.length;k++)
                            {
                                qry="Select distinct(bill_Code) from cheque_details where bill_Code="+Integer.parseInt(getBillCode[k]);
                                String tempBillCode[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                                for(int x=0;x<tempBillCode.length;x++)
                                {
                                    qry="Select sum(chq_amt) from cheque_details where bill_Code="+Integer.parseInt(tempBillCode[x]);
                                    getChequeAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
                                    totalChequeAmt=totalChequeAmt+Double.valueOf(getChequeAmt[x]);

                                }
                            System.out.println("getChequeAmt....cheque amt...."+totalChequeAmt);
                            }
                        }


                        arr[2]="Cheque amount";
                        arr[3]="-";
                        //qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and dp_code="+Integer.parseInt(getDpCode)+" and  amounttype='"+"Cheque"+"' and edate='"+setDate1+"'";
                      //  System.out.println("qry...sum of..........."+qry);
                       // getChequeAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
                       //  getChequeAmt=object1.getSigetngleValue(qry,Main.year);

                        // if(getChequeAmt!=null)
                        //if(getChequeAmt[0]!=null)
                        if(totalChequeAmt!=0)
                        {
                           arr[4]=(""+new java.math.BigDecimal(Double.valueOf(totalChequeAmt)).setScale(2,5));
                      //          arr[4]=(""+new java.math.BigDecimal(Double.valueOf(getChequeAmt)).setScale(2,5));
                           System.out.println("qry...sum of.tot.cheque...>>>>>......"+arr[4]);
                        }
                        else
                           arr[4]="0.00";
                        System.out.println("total chequeamt......."+arr[4]);
                    }
                    //if(j==3 && index>1)
                    if(j==3)
                    {
                        arr[2]="Total received amount";
                        arr[3]="-";
                        qry="Select sum(received_amount) from received_cash_detail where cashier_code="+Integer.parseInt(load[i])+"";
                        receivedAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
                        System.out.println("receivedAmt.........."+receivedAmt[0]);
                        // receivedAmt=object1.getSigetngleValue(qry,Main.year);

                        // if(receivedAmt!=null)// || receivedAmt.length>0)
                        //double tempreceivingAmt=Double.valueOf(receivedAmt[0]);
                       if(receivedAmt[0]!=null)// || receivedAmt.length>0)
                       {
                           arr[4]=(""+new java.math.BigDecimal(Double.valueOf(receivedAmt[0])).setScale(2,5));
                           System.out.println("receivedAmt.in arr........."+arr[4]);
                          //    arr[4]=(""+new java.math.BigDecimal(Double.valueOf(receivedAmt)).setScale(2,5));
                        }
                        else
                           arr[4]="0.00";
                    }
                    //if(j==4 && index>1)
                    if(j==4)
                    {
                        double currentAmt=0.0,dueamount=0.0,duetot=0.0,chequeamt=0.0,receiveAmt=0.0;
                        arr[2]="TOTAL AMOUNT";
                        arr[3]="  ";

                        //if(getCurrentAmt!=null && getChequeAmt!=null && receivedAmt!=null)
                        if(getCurrentAmt[0]!=null)
                        {
                            currentAmt=Double.valueOf(getCurrentAmt[0]);
                            System.out.println("currentAmt...if......"+currentAmt);
                            dueamount=currentAmt+Double.valueOf(dueamt);
                            System.out.println("dueamount...if......"+dueamount);
                        }
                        else
                        {
                            dueamount=Double.valueOf(dueamt);
                            System.out.println("dueamount........."+dueamount);
                        }
                        //if(getChequeAmt[0]!=null)
                        System.out.println("totalChequeAmt....>>>."+totalChequeAmt);
                        if(totalChequeAmt!=0)
                        {
                           // dueamount=currentAmt-Double.valueOf(getChequeAmt[0]);
                            //chequeamt=Double.valueOf(getChequeAmt[0]);
                            chequeamt=totalChequeAmt;
                            System.out.println("chequeamt..if......."+chequeamt);
                        }
                        else
                        {
                            chequeamt=0.0;
                            System.out.println("chequeamt.else......."+chequeamt);
                        }

                        if(receivedAmt[0]!=null)
                        {
                            receiveAmt=Double.valueOf(receivedAmt[0]);
                            System.out.println("receiveAmt...1......"+receiveAmt);
                              receiveAmt=receiveAmt+chequeamt;
                            
                        }
                        else
                        {
                         receiveAmt=0;
                         System.out.println("receiveAmt...2......"+receiveAmt);
                           receiveAmt=receiveAmt+chequeamt;
                         }

                        //else if(getChequeAmt[0]!=null)
                        /*if(totalChequeAmt!=0)
                        {
                            receiveAmt=chequeamt;
                            System.out.println("receiveAmt...else......"+receiveAmt);
                        }*/
                        if(dueamount>=receiveAmt)
                        {
                                tot=dueamount-receiveAmt;
                                System.out.println("tot..if......."+tot);
                        }
                        else
                        {
                                tot=dueamount;
                        System.out.println("tot...else......"+tot);
                        }
                      //  System.out.println("tot 33333...."+setot);
                        if(tot!=0.0)
                            arr[4]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                        else
                            arr[4]="0.00" ;
                       /* if(getCurrentAmt[0]!=null && getChequeAmt[0]!=null && receivedAmt[0]!=null)
                        {
                            double CurrentAmount=Double.valueOf(getCurrentAmt[0])-Double.valueOf(getChequeAmt[0]);
                            System.out.println("CurrentAmount............"+CurrentAmount);
                            double dueAmt=CurrentAmount+Double.valueOf(dueamt);
                            System.out.println("dueAmt............"+dueAmt);
                            double receiveAmt=Double.valueOf(receivedAmt[0]);
                            System.out.println("receiveAmt.........."+receiveAmt);
                            if(receiveAmt>=dueAmt)
                                tot=receiveAmt-dueAmt;
                            else
                                tot=dueAmt;
                            System.out.println("tot..........."+tot);
                          //  tot=((Double.valueOf(dueamt) + Double.valueOf(getCurrentAmt))-Double.valueOf(getChequeAmt))-Double.valueOf(receivedAmt);
                          arr[4]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                        }
                        else
                          arr[4]="0.00";*/
                    }
                    dtm.addRow(arr);

                }

               // }

                jProgressBar1.setValue(i+1);

             //jLabel11.setText(""+new java.math.BigDecimal(totalDueAmt).setScale(3,java.math.BigDecimal.ROUND_HALF_UP));
          }
        }

        loadDueAmount lD=new loadDueAmount();
        lD.start();
    }
    catch(Exception e)
    {
        System.out.println("Error ! In uploadDetail Method."+e);
    }

}
private double dueAmount(String cashiercode,String dpcode)
{
    //javax.swing.JOptionPane.showMessageDialog(null,"Coming here....");;
    double amount=0.0,receivedamount=0.0,dueAmount=0.0,totalDueAmt=0.0,totdue=0.0,returningAmt=0.0,lastYearDueAmt=0.0;
    String load=cashiercode;
    String dpCode=dpcode;
    try
    {
        String d1[]=jLabel2.getText().split("-");
        String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
        String deadDate=2000+"-"+1+"-"+1;
       // interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String  qry="Select dueamount from opening_dueamount where cashier_code="+Integer.parseInt(load)+"";
        System.out.println("qry...........in due method...."+qry);
        String dueAmt=object1.getSigetngleValue(qry,Main.year);
        System.out.println("dueAmt........."+dueAmt);
        if(dueAmt.equals("")==false)// || dueAmt.length>0)
                  dueAmount=Double.valueOf(dueAmt);
        else
                    dueAmount=0.0;
        //else if(dueAmt.equals("")==true || dueAmt.length()==0)
          
        String getStr[]=jLabel2.getText().split("-");
        String setDate1=getStr[2]+"-"+getStr[1]+"-"+getStr[0];
        //qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load)+" and dp_code="+Integer.parseInt(dpCode)+" and (amounttype='"+"Cash"+"' and edate<'"+setDate1+"')";
        qry="Select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load)+" and dp_code="+Integer.parseInt(dpCode)+" and edate<'"+setDate1+"'";
        String amt=object1.getSigetngleValue(qry,Main.year);
        if(amt!=null )//|| amt.length>0)
                  amount=Double.valueOf(amt);
        else
                  amount=0.0;
        ///////////////////last year due amount calculation///////////
        //lastYearDueAmt=backDateCalculation(load);


        //////////////////////////////////////////////////////////////
                  //////sum of received amount///////////////
        qry="Select sum(received_amount) from received_cash_detail where cashier_code="+Integer.parseInt(load)+"";
        String receivedAmt=object1.getSigetngleValue(qry,Main.year);
        if(receivedAmt!=null)// || receivedAmt.length>0)
                  receivedamount=Double.valueOf(receivedAmt);
        else
            receivedamount=0.0;
       // else if(receivedAmt.length()==0 || receivedAmt.equals("")==true)
                  
        totdue=dueAmount+amount;
        System.out.println("in due amount method......"+totdue);
        //+lastYearDueAmt);
        if(totdue>=receivedamount)
            totalDueAmt=totdue-receivedamount;
        else
            totalDueAmt=totdue;
            System.out.println("totalDueAmt................"+totalDueAmt);

        /////////////returning dues of closed challan/////////////////
        qry="Select edate from challan_detail where edate<'"+setDate+"' and cashier_code="+Integer.parseInt(load)+" and closing_status="+"1"+" order by edate asc";
        String loadDate[]=object1.getResultSetAs_1D_Array(qry,Main.year);
        System.out.println("loadDate...."+loadDate.length);
        if(loadDate!=null)
        {
            for(int i=0;i<loadDate.length;i++)
            {
                String D1[]=loadDate[i].split("-");
                String matchDate=D1[2]+"-"+D1[1]+"-"+D1[0];
                qry="Select sum(amount) from build_distribution where edate='"+matchDate+"' and paymentdate='"+deadDate+"' and cashier_code="+Integer.parseInt(load)+"";
                String getReturningAmount=object1.getSigetngleValue(qry,Main.year);
                System.out.println("getReturningAmount...5465656...."+getReturningAmount);
                if(getReturningAmount!=null && getReturningAmount.length()>0)
                {
                    returningAmt=returningAmt+Double.valueOf(getReturningAmount);
                }
             
            }
        }
        if(totalDueAmt>=returningAmt)
            totalDueAmt=totalDueAmt-returningAmt;
        /////////////////////////////////////////////////////////////
    }
    catch(Exception e)
    {
        System.out.println("Error ! In due Amount Method."+e);
    }
    return totalDueAmt;
}
class loadDueAmount extends Thread
{
    String qry="";
    public void run()
    {
         dtm1.setRowCount(0);
         try
         {
            ///  interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
             interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
             String qry="Select dp_code from department_detail where dp_name='"+(""+jComboBox1.getSelectedItem())+"'";
             String getDpCode=object1.getSigetngleValue(qry,Main.year);

             qry="Select cashier_code from cashier_detail order by cashier_number asc";
             String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);

             String getStr[]=jLabel2.getText().split("-");
             String setDate1=getStr[2]+"-"+getStr[1]+"-"+getStr[0];

             if(getDpCode.length()>0)
             {
                String arr[]=new String[4];
                int ind=0,index=0;
                String getCurrentAmt[]=null,getChequeAmt[]=null,receivedAmt[]=null,CurrentBill[]=null;
                double tot=0.0,dueamt=0.0,totdue=0.0,totcurrentAmt=0.0;
                jProgressBar2.setVisible(true);
                jProgressBar2.setMaximum(load.length);
                jProgressBar2.setMinimum(0);
                jProgressBar2.setValue(0);


                for(int i=0;i<=load.length-1;i++)
                {
                    double totalChequeAmt=0;
                    qry="select cashier_number from cashier_detail where cashier_code="+Integer.parseInt(load[i]);
                    String getCashierNo=object1.getSigetngleValue(qry,Main.year);
                    qry="select cashier_code from build_distribution where cashier_code ="+Integer.parseInt(load[i])+" and edate='"+setDate1+"'";
                //System.out.println("qry....."+qry);
                //javax.swing.JOptionPane.showMessageDialog(this,qry);
                    String getCode=object1.getSigetngleValue(qry,Main.year);
                //System.out.println("getCode[0].length...."+getCode.length());
                    double currentAmt=0.0,dueamount=0.0,chequeamt=0.0,receiveAmt=0.0;
                    if(getCode.length()==0 || getCode.equals(""))
                    {
                        index=1;
                        //System.out.println("index."+index);
                    }
                    else if(getCode.length()>0)
                    {
                        index=2;
                        //System.out.println("index."+index);
                    }
                    if(index==1)
                    {
                        double dueAmt=0.00;
                      //  System.out.println("come here........");
                        dueAmt=dueAmount(load[i],getDpCode);
                        arr[0]=""+(++ind);
                        arr[1]=getCashierNo;
                        arr[2]=(""+new java.math.BigDecimal(dueAmt).setScale(2,5));
                        arr[3]="0";
                        totdue=totdue+dueAmt;
                        dtm1.addRow(arr);

                    }
                    else if(index>1)
                    {
                        tot=0.0;
                         arr[0]=""+(++ind);
                         arr[1]=getCashierNo;
                         ///dues retained Calculation///////////
                         //qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and (dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"')";
                         qry="select sum(mix_amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and (dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"')";
                         //System.out.println("qry...sum of.tot.........."+qry);
                         getCurrentAmt=object1.getResultSetAs_1D_Array(qry,Main.year);

                        /* qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and dp_code="+Integer.parseInt(getDpCode)+" and  amounttype='"+"Cheque"+"' and edate='"+setDate1+"'";
                         //System.out.println("qry...sum of..........."+qry);
                         getChequeAmt=object1.getResultSetAs_1D_Array(qry,Main.year);*/
                         qry="Select distinct(bill_Code) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"'";
                        String getBillCode[]=object1.getResultSetAs_1D_Array(qry, Main.year);
                        if(getBillCode!=null)
                        {
                            for(int k=0;k<getBillCode.length;k++)
                            {
                                qry="Select distinct(bill_Code) from cheque_details where bill_Code="+Integer.parseInt(getBillCode[k]);
                                String tempBillCode[]=object1.getResultSetAs_1D_Array(qry,Main.year);
                                for(int x=0;x<tempBillCode.length;x++)
                                {
                                    qry="Select sum(chq_amt) from cheque_details where bill_Code="+Integer.parseInt(tempBillCode[x]);
                                    getChequeAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
                                    totalChequeAmt=totalChequeAmt+Double.valueOf(getChequeAmt[x]);

                                }
                            System.out.println("getChequeAmt....cheque amt...."+totalChequeAmt);
                            }
                        }

                         qry="Select sum(received_amount) from received_cash_detail where cashier_code="+Integer.parseInt(load[i])+"";
                        System.out.println("qry....of received amt...."+qry);
                         receivedAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
                         System.out.println("receivedAmt>>;;;;>>>>>>"+receivedAmt[0]);
                         dueamt=dueAmount(load[i],getDpCode);
                        if(getCurrentAmt[0]!=null)
                        {
                            currentAmt=Double.valueOf(getCurrentAmt[0]);
                            
                                    dueamount=currentAmt+Double.valueOf(dueamt);
                           // System.out.println("dueamount..3434......"+dueamount);
                        }
                        else
                        {
                             currentAmt=0.0;
                             dueamount=currentAmt+Double.valueOf(dueamt);
                        }
                        //if(getChequeAmt[0]!=null)
                         if(totalChequeAmt!=0)
                        {
                           // dueamount=currentAmt-Double.valueOf(getChequeAmt[0]);
                           // chequeamt=Double.valueOf(getChequeAmt[0]);
                              chequeamt=totalChequeAmt;
                        }
                        else
                        {
                            chequeamt=0.0;
                        }

                        if(receivedAmt[0]!=null)
                        {
                            receiveAmt=Double.valueOf(receivedAmt[0]);
                            receiveAmt=receiveAmt+chequeamt;
                            System.out.println("receiveAmt>>>>>>if>"+receiveAmt);
                        }
                        else
                        {
                             receiveAmt=0.0;
                              receiveAmt=receiveAmt+chequeamt;
                                 System.out.println("receiveAmt>>>>>>else>"+receiveAmt);
                        }
                        //else if(getChequeAmt[0]!=null)
                        /* if(totalChequeAmt==0)
                        {
                            receiveAmt=chequeamt;
                            System.out.println("formal entering........");
                        }*/
                        if(dueamount>=receiveAmt)
                        {
                             System.out.println("dueamount>>>if>>>>"+dueamount);
                             System.out.println("receiveAmt>>>if>>>>"+receiveAmt);
                                tot=dueamount-receiveAmt;
                                System.out.println("tot>>>if>>>>"+tot);
                        }
                        else
                        {
                                tot=dueamount;
                                System.out.println("tot>>>>>else>>"+tot);
                        }
                        //System.out.println("tot 1234..........."+tot);
                        totdue=totdue+tot;
                        if(tot!=0.0)
                            arr[2]=(""+new java.math.BigDecimal(tot).setScale(2,5));
                        else
                            arr[2]="0.00" ;

                         ///////////////////////////////////////
                         //////Bill Accounts////////////////////

                         //qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and (dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"')";
                          qry="select sum(mix_amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and (dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"')";
                         //System.out.println("qry...sum of.tot.........."+qry);
                         CurrentBill=object1.getResultSetAs_1D_Array(qry,Main.year);

                         if(CurrentBill!=null)
                         {
                              arr[3]=(""+new java.math.BigDecimal(Double.valueOf(CurrentBill[0])).setScale(2,5));
                              totcurrentAmt=totcurrentAmt+Double.valueOf(CurrentBill[0]);
                         }
                         else
                         {
                             arr[3]="0.00";
                         }

                         /////////////////////////////////////////
                         dtm1.addRow(arr);

                    }
                    jProgressBar2.setValue(i+1);
             }
            jLabel6.setText(""+new java.math.BigDecimal(totdue).setScale(2,5));
            jLabel4.setText(""+new java.math.BigDecimal(totcurrentAmt).setScale(2,5));
            jLabel4.requestFocus();
         }
        }
         catch(Exception e)
         {
             System.out.println("Error ! In loadDueAmount class."+e);
         }
    }
}
private boolean Save()
{
    try
    {
        ///interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        if(jTextField4.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash detail first.");
            jTextField4.requestFocus();
            jTextField4.selectAll();
            return false;
        }
        if(jTextField5.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash amount.");
            jTextField5.requestFocus();
            jTextField5.selectAll();
            return false;
        }
        if(object1.isDouble(jTextField5.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash amount(Number type only).");
            jTextField5.requestFocus();
            jTextField5.selectAll();
            return false;
        }
        if(jTextField6.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Please Input cash detail first.");
            jTextField6.requestFocus();
            jTextField6.selectAll();
            return false;
        }
        if(jTextField7.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash amount.");
            jTextField7.requestFocus();
            jTextField7.selectAll();
            return false;
        }
        if(object1.isDouble(jTextField7.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash amount(Number type only).");
            jTextField7.requestFocus();
            jTextField7.selectAll();
            return false;
        }
        if(jTextField8.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash detail first.");
            jTextField8.requestFocus();
            jTextField8.selectAll();
            return false;
        }
        if(jTextField9.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash amount.");
            jTextField9.requestFocus();
            jTextField9.selectAll();
            return false;
        }
        if(object1.isDouble(jTextField9.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash amount(Number type only).");
            jTextField9.requestFocus();
            jTextField9.selectAll();
            return false;
        }
        if(jTextField10.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash detail first.");
            jTextField10.requestFocus();
            jTextField10.selectAll();
            return false;
        }
        if(jTextField11.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash amount.");
            jTextField11.requestFocus();
            jTextField11.selectAll();
            return false;
        }
        if(object1.isDouble(jTextField11.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash amount(Number type only).");
            jTextField11.requestFocus();
            jTextField11.selectAll();
            return false;
        }
        if(jTextField12.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash detail first.");
            jTextField12.requestFocus();
            jTextField12.selectAll();
            return false;
        }
        if(jTextField13.getText().equals(""))
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash amount.");
            jTextField13.requestFocus();
            jTextField13.selectAll();
            return false;
        }
        if(object1.isDouble(jTextField13.getText())==false)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Error ! Please Input cash amount(Number type only).");
            jTextField13.requestFocus();
            jTextField13.selectAll();
            return false;
        }
        String D1[]=jLabel2.getText().split("-");
        String setDate=D1[2]+"-"+D1[1]+"-"+D1[0];

        String qry="Select dp_code from department_detail where dp_name='"+(""+jComboBox1.getSelectedItem())+"'";
      //  System.out.println("qry.............."+qry);
        String getDpCode=object1.getSigetngleValue(qry,Main.year);

        qry="Select dp_Code from integrated_assetsvalue where edate='"+setDate+"'";
      //  System.out.println("qry........"+qry);
        String getCode=object1.getSigetngleValue(qry, Main.year);
        boolean bn=false;
        if(getCode==null || getCode.equals(""))
        {
            qry="insert into integrated_assetsvalue values('"+setDate+"',"+Integer.parseInt(getDpCode)+",'"+jTextField4.getText().trim()+"',"+Double.valueOf(jTextField5.getText().trim())+",'"+jTextField6.getText().trim()+"',"+Double.valueOf(jTextField7.getText().trim())+",'"+jTextField8.getText().trim()+"',"+Double.valueOf(jTextField9.getText().trim())+",'"+jTextField10.getText().trim()+"',"+Double.valueOf(jTextField11.getText().trim())+",'"+jTextField12.getText().trim()+"',"+Double.valueOf(jTextField13.getText().trim())+","+Double.valueOf(jLabel8.getText())+")";
          //  System.out.println("qry............."+qry);
            bn=object1.saveInformation(qry,Main.year);
        }
        else
        {
            qry="update integrated_assetsvalue set AdvanceText1='"+jTextField4.getText().trim()+"',Amount1="+Double.valueOf(jTextField5.getText().trim())+",AdvanceText2='"+jTextField6.getText().trim()+"',Amount2="+Double.valueOf(jTextField7.getText().trim())+",AdvanceText3='"+jTextField8.getText().trim()+"',Amount3="+Double.valueOf(jTextField9.getText().trim())+",AdvanceText4='"+jTextField10.getText().trim()+"',Amount4="+Double.valueOf(jTextField11.getText().trim())+",AdvanceText5='"+jTextField12.getText().trim()+"',Amount5="+Double.valueOf(jTextField13.getText().trim())+" where dp_Code="+Integer.parseInt(getCode)+" and edate='"+setDate+"'";
        //    System.out.println("qry............"+qry);
            bn=object1.saveInformation(qry,Main.year);
        }
        if(bn)
        {
            javax.swing.JOptionPane.showMessageDialog(null,"Process Completed.");
            jTextField4.setText("");
            jTextField5.setText("0");
            jTextField6.setText("");
            jTextField7.setText("0");
            jTextField8.setText("");
            jTextField9.setText("0");
            jTextField10.setText("");
            jTextField11.setText("0");
            jTextField12.setText("");
            jTextField13.setText("0");
            jLabel8.setText("0");
        }
    }
    catch(Exception e)
    {
        System.out.println("Error ! In Save Method."+e);
    }
return true;
}
private void uploadLastDetail()
{
    try
    {
        String D1[]=jLabel2.getText().split("-");
        String setDate=D1[2]+"-"+D1[1]+"-"+D1[0];
        //interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select dp_Code from department_detail where dp_Name='"+(""+jComboBox1.getSelectedItem())+"'";
        String getDpCode=object1.getSigetngleValue(qry,Main.year);

        if(getDpCode!=null || getDpCode.length()>0)
        {
            qry="Select AdvanceText1,Amount1,AdvanceText2,Amount2,AdvanceText3,Amount3,AdvanceText4,Amount4,AdvanceText5,Amount5,TotalAmount from integrated_assetsvalue where dp_Code="+Integer.parseInt(getDpCode)+" and edate='"+setDate+"'";
            String load[][]=object1.getInformationDD(qry,11,Main.year);
            if(load!=null && load.length>0)
            {
               jTextField4.setText(load[0][0]);
               jTextField5.setText(""+new java.math.BigDecimal(Double.valueOf(load[0][1])).setScale(2,5));
               jTextField6.setText(load[0][2]);
               jTextField7.setText(""+new java.math.BigDecimal(Double.valueOf(load[0][3])).setScale(2,5));
               jTextField8.setText(load[0][4]);
               jTextField9.setText(""+new java.math.BigDecimal(Double.valueOf(load[0][5])).setScale(2,5));
               jTextField10.setText(load[0][6]);
               jTextField11.setText(""+new java.math.BigDecimal(Double.valueOf(load[0][7])).setScale(2,5));
               jTextField12.setText(load[0][8]);
               jTextField13.setText(""+new java.math.BigDecimal(Double.valueOf(load[0][9])).setScale(2,5));
               jLabel8.setText(""+new java.math.BigDecimal(Double.valueOf(load[0][10])).setScale(2,5));
               jTextField4.requestFocus();
            }
        }

    }
    catch(Exception e)
    {
        System.out.println("Error ! In uploadLastDetail Method."+e);
    }

}
/*private double backDateCalculation(String cashierCode)
{
    double amount=0.0;
    String d1[]=jLabel2.getText().split("-");
    String setDate=d1[2]+"-"+d1[1]+"-"+d1[0];
    try
    {
        ///interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
        interfaceRailway object1=null;
		try
		{
			object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
		}
		catch(Exception e)
		{
				System.out.println("Error at the time of connection with server "+getIPaddress.IP()+"..."+e);
				getIPaddress.changeIP();
				try
				{
					object1=(interfaceRailway)java.rmi.Naming.lookup(getIPaddress.IP());
				}
				catch(Exception ex)
				{
					System.out.println("Error at the time of connection with server ip-rmi//127.0.0.1/railwayMethods  ..."+ex);
				}
		}
        String qry="Select sum(amount) from carryforward_build_distribution where cashier_code="+Integer.parseInt(cashierCode)+" and amounttype='"+"Cash"+"'and edate<'"+setDate+"'";
        String getAmt=object1.getSigetngleValue(qry,Main.year);
        if(getAmt!=null && getAmt.equals("")==false)
        {
            amount=Double.valueOf(getAmt);
        }

    }
    catch(Exception e)
    {
        System.out.println("Error ! In backDateCalculation Method."+e);
    }

    return amount;
}*/
private boolean calculateAmount()
{
    double Amt1=0,Amt2=0,Amt3=0,Amt4=0,Amt5=0;
        if(jTextField5.getText().equals(""))
        {
            Amt1=0;
        }
        else
        {
            try
            {
                Amt1=Double.valueOf(jTextField5.getText());
            }
            catch(Exception e)
            {
                //System.out.println("Error..SKM R....."+e);
                javax.swing.JOptionPane.showMessageDialog(this,""+e+"\nPlease input cash amount ?","Error !!",javax.swing.JOptionPane.ERROR_MESSAGE);
                jTextField5.requestFocus();
                jTextField5.selectAll();
                return false;
            }
        }
        if(jTextField7.getText().equals(""))
        {
            Amt2=0;
        }
        else
        {
            try
            {
                Amt2=Double.valueOf(jTextField7.getText());
            }
            catch(Exception e)
            {
                //System.out.println("Error..SKM R....."+e);
                javax.swing.JOptionPane.showMessageDialog(this,""+e+"\nPlease input cash amount ?","Error !!",javax.swing.JOptionPane.ERROR_MESSAGE);
                jTextField7.requestFocus();
                jTextField7.selectAll();
                return false;
            }
        }
        if(jTextField9.getText().equals(""))
        {
            Amt3=0;
        }
        else
        {
            try
            {
                Amt3=Double.valueOf(jTextField9.getText());
            }
            catch(Exception e)
            {
                //System.out.println("Error..SKM R....."+e);
                javax.swing.JOptionPane.showMessageDialog(this,""+e+"\nPlease input cash amount ?","Error !!",javax.swing.JOptionPane.ERROR_MESSAGE);
                jTextField9.requestFocus();
                jTextField9.selectAll();
                return false;
            }
        }
        if(jTextField11.getText().equals(""))
        {
            Amt4=0;
        }
        else
        {
            try
            {
                Amt4=Double.valueOf(jTextField11.getText());
            }
            catch(Exception e)
            {
                //System.out.println("Error..SKM R....."+e);
                javax.swing.JOptionPane.showMessageDialog(this,""+e+"\nPlease input cash amount ?","Error !!",javax.swing.JOptionPane.ERROR_MESSAGE);
                jTextField11.requestFocus();
                jTextField11.selectAll();
                return false;
            }
        }
        if(jTextField13.getText().equals(""))
        {
            Amt5=0;
        }
        else
        {
            try
            {
                Amt5=Double.valueOf(jTextField13.getText());
            }
            catch(Exception e)
            {
                //System.out.println("Error..SKM R....."+e);
                javax.swing.JOptionPane.showMessageDialog(this,""+e+"\nPlease input cash amount ?","Error !!",javax.swing.JOptionPane.ERROR_MESSAGE);
                jTextField13.requestFocus();
                jTextField13.selectAll();
                return false;
            }
        }

        double totalAmt=Amt1+Amt2+Amt3+Amt4+Amt5+Double.valueOf(jTextField1.getText())+Double.valueOf(jTextField2.getText())+Double.valueOf(jTextField3.getText());
        jLabel8.setText(""+(new java.math.BigDecimal(totalAmt).setScale(2,java.math.BigDecimal.ROUND_HALF_UP)));
  
return true;
}
/*class loadDueAmount extends Thread
{
    String qry="";
   
    public void run()
    {
         dtm1.setRowCount(0);
        try
        {

             interfaceRailway object1=(interfaceRailway)java.rmi.Naming.lookup("rmi://127.0.0.1/railwayMethods");
             String qry="Select dp_code from department_detail where dp_name='"+(""+jComboBox1.getSelectedItem())+"'";
             String getDpCode=object1.getSigetngleValue(qry,Main.year);

             qry="Select cashier_code from cashier_detail";
             String load[]=object1.getResultSetAs_1D_Array(qry,Main.year);

             String getStr[]=jLabel2.getText().split("-");
             String setDate1=getStr[2]+"-"+getStr[1]+"-"+getStr[0];

             if(getDpCode.length()>0)
             {
                String arr[]=new String[4];
                int ind=0,index=0;
                String getCurrentAmt[]=null,getChequeAmt[]=null,receivedAmt[]=null;
                double tot=0.0,dueamt=0.0,totdue=0.0;
                jProgressBar2.setVisible(true);
                jProgressBar2.setMaximum(load.length);
                jProgressBar2.setMinimum(0);
                jProgressBar2.setValue(0);


            for(int i=0;i<=load.length-1;i++)
            {
                qry="select cashier_number from cashier_detail where cashier_code="+Integer.parseInt(load[i]);
                String getCashierNo=object1.getSigetngleValue(qry,Main.year);
               
                for(int j=0;j<=1;j++)
                {
                    System.out.println("j..3333....."+j);
                    if(j==0)
                    {
                        arr[0]=""+(++ind);
                        arr[1]=getCashierNo;
                    }
                    else
                    {
                        arr[0]="  ";
                        arr[1]="  ";
                    }
                    //if(j==0 && index>1)
                    if(j==0)
                    {
                        arr[2]="Last due amount";
                        dueamt=dueAmount(load[i],getDpCode);
                        //System.out.println("dueamt.........."+dueamt);
                        totdue=totdue+dueamt;
                        arr[3]=(""+new java.math.BigDecimal(dueamt).setScale(2,5));
                    }
                    if(j==1)
                    {

                        arr[2]="Current amount";
                        qry="select sum(amount) from build_distribution where cashier_code="+Integer.parseInt(load[i])+" and dp_code="+Integer.parseInt(getDpCode)+" and edate='"+setDate1+"'";
                        getCurrentAmt=object1.getResultSetAs_1D_Array(qry,Main.year);
                        if(getCurrentAmt[0]!=null)
                        {
                           arr[3]=(""+new java.math.BigDecimal(Double.valueOf(getCurrentAmt[0])).setScale(2,5));
                           tot=tot+Double.valueOf(getCurrentAmt[0]);
                        }
                        else
                           arr[3]="0.00";
                    }
                    //if(j==2 && index>1)
                        dtm1.addRow(arr);

                }
                jProgressBar2.setValue(i+1);

             //jLabel11.setText(""+new java.math.BigDecimal(totalDueAmt).setScale(3,java.math.BigDecimal.ROUND_HALF_UP));
          }
           jLabel6.setText(""+new java.math.BigDecimal(totdue).setScale(2,5));
           jLabel4.setText(""+new java.math.BigDecimal(tot).setScale(2,5));
           
        }
        }
        catch(Exception e)
        {
            System.out.println("Error ! In loadDueAmount class."+e);
        }
    }
}*/

//-----------------------------------------------------------------------------
class printReport extends javax.swing.JFrame
{

        PrintWriter pw;
        int assetLine;
        boolean flag2;
           public printReport()
           {
                    boolean first=true;
                    assetLine=-2;
                    int ternLine=1;
                     FileOutputStream fos=null;
                        try
                        {
                                String space="";
                                String temp="";
                              
                                int rep=0;
                                int maxrows=68;
                                System.out.println("Start printing...");
                              //  fos=new FileOutputStream("LPT1");


                                try
                                {
                                    //    fos=new java.io.FileOutputStream("LPT1");
                                   //fos=new java.io.FileOutputStream("LPT1");//LPT1");
                                    fos=new java.io.FileOutputStream("IntegratedRpt.in");
                                        System.out.println("inside find port...LPT1");
                                }
                                catch(Exception ex)
                                {
                                        System.out.println("port not found...");
                                        fos=new java.io.FileOutputStream("IntegratedRpt.in");//LPT1");
                                }

                                pw=new PrintWriter(fos);
                                int countLine=1;
                                String line="";
                                int l=0;
                                pw.println("");
                                pw.println("");
                                pw.println("");
                                pw.println("");

                                //pw.println("                                                        SECTION REPORT");
                                pw.println("EAST CENTRAL RAILWAY                    DIVISIONAL CASH PAY OFFICE      ECR MUGHALSARAI");
                                pw.println("Dept. Name - "+jComboBox1.getSelectedItem());
                                pw.println("Cash Report Cashier Wise :          "+jLabel2.getText().toUpperCase());
                               // pw.println("DATE : "+dateValuelb.getText());
                                pw.println("");
                                pw.println("---------------------------------------------------------------------------------------------------------------------------------");
                                String str="Cashier No.   Purpose                    Amount";
                                pw.print(str);
                                for(int i=str.length();i<75;i++)
                                    pw.print(" ");
                                str="Cashier No.   Due Retained             Bill Account";
                                pw.println(str);

                                for(int i=0;i<=dtm.getRowCount()||i<=dtm1.getRowCount();i++)
                                {
                                    boolean flag1=true;
                                    flag2=true;
                                    String data[]=new String[6];
                                    for(int x=0;x<data.length;x++)
                                        data[x]="";
                                    if(i<dtm.getRowCount())
                                    {
                                        flag1=false;
                                        data[0]=""+jTable1.getValueAt(i,1);
                                        pw.print(data[0]);
                                        for(int s=0;s<12-data[0].length();s++)
                                            data[1]+=" ";
                                        data[1]+=""+jTable1.getValueAt(i,2);
                                        pw.print(data[1]);
                                        int len=60-((""+jTable1.getValueAt(i,3)).length()+(""+jTable1.getValueAt(i,4)).length());
                                        int init=(data[0].length()+data[1].length());
                                       for(int s=init;s<len;s++)
                                            data[2]+=" ";
                                        data[2]+=""+jTable1.getValueAt(i,3)+""+jTable1.getValueAt(i,4);
                                        pw.print(data[2]);
                                    }
                                    if(flag1)
                                    {
                                        flag1=false;
                                        for(int s=0;s<60;s++)
                                        {
                                            pw.print(" ");
                                            data[2]+=" ";
                                        }
                                    }
                                    if(i<dtm1.getRowCount())
                                    {
                                        flag2=false;
                                        for(int ii=0;ii<15;ii++)
                                            data[3]+=" ";
                                        data[3]+=""+jTable2.getValueAt(i,1);
                                        pw.print(data[3]);
                                        int len=100-((""+jTable2.getValueAt(i,2)).length());
                                        int init=(data[0].length()+data[1].length()+data[2].length()+data[3].length());
                                        for(int s=init;s<len;s++)
                                            data[4]+=" ";
                                        data[4]+=""+jTable2.getValueAt(i,2);
                                        pw.print(data[4]);
                                        len=125-((""+jTable2.getValueAt(i,3)).length());
                                        init=(data[0].length()+data[1].length()+data[2].length()+data[3].length()+data[4].length());
                                        for(int s=init;s<len;s++)
                                            data[5]+=" ";
                                        data[5]+=""+jTable2.getValueAt(i,3);
                                        pw.print(data[5]);
                                    }
                                    if(i==dtm1.getRowCount())
                                    {
                                        flag2=false;
                                        for(int ii=0;ii<15;ii++)
                                            data[3]+=" ";
                                        data[3]+="TOTAL : -";
                                        pw.print(data[3].toUpperCase());
                                        int len=100-((""+jLabel6.getText()).length());
                                        //System.out.println(""+(jLabel6.getText()).length());
                                        int init=(data[0].length()+data[1].length()+data[2].length()+data[3].length());
                                        for(int s=init;s<len;s++)
                                            data[4]+=" ";
                                        data[4]+=""+jLabel6.getText();
                                        pw.print(data[4]);
                                        len=125-((""+jLabel4.getText()).length());
                                        init=(data[0].length()+data[1].length()+data[2].length()+data[3].length()+data[4].length());
                                        for(int s=init;s<len;s++)
                                            data[5]+=" ";
                                        data[5]+=""+jLabel4.getText();
                                        pw.print(data[5]);
                                        System.out.println("a"+jLabel6.getText()+"b");
                                        System.out.println("a"+jLabel4.getText()+"b");
                                    }
                                    if(flag2)
                                    {
                                        flag2=false;
                                        printAssets(assetLine);
                                        assetLine++;
                                    }
                                    pw.println("");
                                }


                               printingRestOfAssets();
                               lastAssetTotalAmtPrint();
                                pw.close();
                                fos.close();

                                System.out.println("End printing");


                    }
                    catch(Exception x)
                    {
                                System.out.println("Error 123..."+x);
                    }

         }
         private void printAssets(int i)
         {
             int len,init;
            switch(i)
            {
                case 0:
                     pw.print(" ");
                    pw.print("LIABILITIES : -".toUpperCase());
                for(int ii=0;ii<25;ii++)
                    pw.print(" ");
                    pw.print(" ");
                    pw.print("ASSETS : -".toUpperCase());
                    break;
                case 1:
                     pw.print(" ");
                     String tempt="TOTAL DUE : -";
                    pw.print("TOTAL DUE : -".toUpperCase());
                 //   for(int ii=0;ii<12;ii++)
                 //       pw.print(" ");
                    len=125-(jLabel6.getText().length());
                    init=85+(tempt.length());
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jLabel6.getText());
                    pw.print(" ");
                    pw.print(""+jLabel13.getText());
                    init=85+(tempt.length())+(jLabel13.getText().length())+(jLabel6.getText().length())-1;
                    len=125-(""+jTextField1.getText()).length();
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jTextField1.getText());
                    //pw.print(""+jLabel6.getText());

                   /* for(int ii=0;ii<25;ii++)
                        pw.print(" ");
                    pw.print(""+jLabel13.getText());
                    len=125-((""+jTextField1.getText()).length());
                    init=(85+(jLabel13.getText().length()));
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jTextField1.getText());*/
                    break;
                case 2:
                     pw.print(" ");
                     tempt="LIEU CASH : -";
                     LieuAmt="0.00";
                    pw.print("LIEU CASH : -".toUpperCase());
                    len=125-LieuAmt.length();
                    init=85+tempt.length();
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(LieuAmt);
                          pw.print(" ");
                    pw.print(""+jLabel14.getText());
                    len=125-((""+jTextField2.getText()).length());
                    init=85+tempt.length()+jLabel14.getText().length()+LieuAmt.length();
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jTextField2.getText());
                    //for(int ii=0;ii<25;ii++)
                /*        pw.print(" ");
                    pw.print(""+jLabel14.getText());
                    len=125-((""+jTextField2.getText()).length());
                    init=(85+(jLabel14.getText().length()));
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jTextField2.getText());*/
                    break;
                case 3:
                    for(int ii=0;ii<25+17;ii++)
                        pw.print(" ");
                    pw.print(""+jLabel15.getText());
                    len=125-((""+jTextField3.getText()).length());
                    init=(85+(jLabel15.getText().length()))+17;
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jTextField3.getText());
                    break;
               case 4:
                    for(int ii=0;ii<25+17;ii++)
                        pw.print(" ");
                    pw.print(""+jTextField4.getText());
                    len=125-((""+jTextField5.getText()).length());
                    init=(85+(jTextField4.getText().length()))+17;
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jTextField5.getText());
                    break;
              case 5:
                    for(int ii=0;ii<25+17;ii++)
                        pw.print(" ");
                    pw.print(""+jTextField6.getText());
                    len=125-((""+jTextField7.getText()).length());
                    init=(85+(jTextField6.getText().length()))+17;
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jTextField7.getText());
                    break;
              case 6:
                    for(int ii=0;ii<25+17;ii++)
                        pw.print(" ");
                    pw.print(""+jTextField8.getText());
                    len=125-((""+jTextField9.getText()).length());
                    init=(85+(jTextField8.getText().length()))+17;
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jTextField9.getText());
                    break;
               case 7:
                    for(int ii=0;ii<25+17;ii++)
                        pw.print(" ");
                    pw.print(""+jTextField10.getText());
                    len=125-((""+jTextField11.getText()).length());
                    init=(85+(jTextField10.getText().length()))+17;
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jTextField11.getText());
                    break;
              case 8:
                    for(int ii=0;ii<25+17;ii++)
                        pw.print(" ");
                    pw.print(""+jTextField12.getText());
                    len=125-((""+jTextField13.getText()).length());
                    init=(85+(jTextField12.getText().length()))+17;
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jTextField13.getText());
                    break;
            }
         }
         private void printingRestOfAssets()
         {
             if(assetLine<=8)
             {
                 for(int i=assetLine;i<=8;i++)
                 {
                    for(int s=0;s<60-25;s++)
                        pw.print(" ");
                    printAssets(i);
                    pw.println("");
                 }
             }
         }
         private void lastAssetTotalAmtPrint()
         {
              pw.print(" ");
             double tot=Double.valueOf(jLabel6.getText())+Double.valueOf(LieuAmt);
             String tempAmt=("" +new java.math.BigDecimal(tot).setScale(2,5));
             System.out.println("lastAssetTotalAmtPrint.........>>>>>");
             for(int s=0;s<=59;s++)
                        pw.print(" ");
             pw.print(""+jLabel9.getText().toUpperCase());
           
            // pw.print(tempAmt);
             int len=125-(tempAmt.length());
             int init=85+jLabel9.getText().length();
             
             for(int s=init;s<len;s++)
                  pw.print(" ");
             pw.print(tempAmt);
             pw.print(" ");
           
             len=125-(jLabel9.getText().length());
             init=85+jLabel9.getText().length()+tempAmt.length();
            
             String temp="Total Amount";
             for(int s=init;s<len;s++)
                     pw.print(" ");
              pw.print(""+temp.toUpperCase());
             //for(int s=0;s<85;s++)
               //         pw.print(" ");
             len=125-((""+jLabel8.getText()).length());
                    init=(85+(jLabel9.getText().length()))+tempAmt.length();
                  //  pw.print(""+jLabel9.getText().toUpperCase());
                    //len=125-((""+jLabel8.getText()).length());
                   // init=(85+(jLabel9.getText().length()))+jLabel9.getText().length()+tempAmt.length();
                     System.out.println("init.........."+init+" len...."+len);
                    for(int s=init;s<len;s++)
                        pw.print(" ");
                    pw.print(""+jLabel8.getText().toUpperCase());
         }
   public void scroll()
     {
            for(int i=1;i<=6;i++)
            {
                pw.println();
            }
     }
     public void scroll(int n)
     {
            for(int i=1;i<=n;i++)
            {
                pw.println();
            }
     }

  }
//---------------------------------------------------------------------------------

}
